(dp0
S'System/Library/PrivateFrameworks/AccountNotification.framework/and'
p1
(dp2
S'NSXPCListenerDelegate'
p3
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p4
ssS'usr/libexec/dmd'
p5
(dp6
S'NSXPCListenerDelegate'
p7
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p8
sS'CATTaskServerDelegate'
p9
S'@protocol CATTaskServerDelegate <NSObject>\n- (void)server:(CATTaskServer *)arg1 clientSession:(CATTaskSession *)arg2 didInterruptWithError:(NSError *)arg3;\n- (CATTaskOperation *)server:(CATTaskServer *)arg1 clientSession:(CATTaskSession *)arg2 operationForRequest:(CATTaskRequest *)arg3 error:(id *)arg4;\n\n@optional\n- (void)serverDidInvalidate:(CATTaskServer *)arg1;\n- (void)server:(CATTaskServer *)arg1 clientSessionDidInvalidate:(CATTaskSession *)arg2;\n- (void)server:(CATTaskServer *)arg1 clientSessionDidDisconnect:(CATTaskSession *)arg2;\n- (void)server:(CATTaskServer *)arg1 clientSessionDidConnect:(CATTaskSession *)arg2;\n- (void)server:(CATTaskServer *)arg1 clientSession:(CATTaskSession *)arg2 enqueueOperation:(NSOperation *)arg3;\n- (void)server:(CATTaskServer *)arg1 clientSession:(CATTaskSession *)arg2 didReceiveNotificationWithName:(NSString *)arg3 userInfo:(NSDictionary *)arg4;\n- (_Bool)server:(CATTaskServer *)arg1 clientSession:(CATTaskSession *)arg2 shouldConnectWithTransport:(CATTransport *)arg3;\n@end\n'
p10
ssS'System/Library/AppRemovalServices/com.apple.Home.appremoval.xpc/com.apple.Home.appremoval'
p11
(dp12
sS'private/var/staged_system_apps/MobileMail.app/PlugIns/MailCacheDeleteExtension.appex/MailCacheDeleteExtension'
p13
(dp14
sS'usr/libexec/asd'
p15
(dp16
sS'System/Library/Frameworks/Intents.framework/XPCServices/intents_image_service.xpc/intents_image_service'
p17
(dp18
sS'System/Library/PrivateFrameworks/FindMyDevice.framework/XPCServices/FindMyDeviceIdentityXPCService.xpc/FindMyDeviceIdentityXPCService'
p19
(dp20
sS'usr/libexec/eventkitsyncd'
p21
(dp22
S'NSXPCListenerDelegate'
p23
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p24
ssS'private/var/staged_system_apps/MobileStore.app/XPCServices/com.apple.MobileStore.appremoval.xpc/com.apple.MobileStore.appremoval'
p25
(dp26
sS'System/Library/PrivateFrameworks/MobileInstallation.framework/XPCServices/com.apple.MobileInstallationHelperService.xpc/com.apple.MobileInstallationHelperService'
p27
(dp28
S'MobileInstallationHelperServiceProtocol'
p29
S'@protocol MobileInstallationHelperServiceProtocol\n- (void)createAppSnapshotWithBundleID:(NSString *)arg1 snapshotToURL:(NSURL *)arg2 onlyV1AppIfPresent:(_Bool)arg3 placeholderOnly:(_Bool)arg4 completion:(void (^)(NSDictionary *, NSError *))arg5;\n- (void)createSafeHarborWithIdentifier:(NSString *)arg1 containerType:(long long)arg2 andMigrateDataFrom:(NSURL *)arg3 completion:(void (^)(NSError *))arg4;\n- (void)makeSymlinkFromAppDataContainerToBundleForIdentifier:(NSString *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)stageItemAtURL:(NSURL *)arg1 completion:(void (^)(NSURL *, NSError *))arg2;\n- (void)wipeStagingRootWithCompletion:(void (^)(NSError *))arg1;\n- (void)migrateSystemAppDataWithCompletion:(void (^)(NSError *))arg1;\n- (void)migrateMobileContentWithCompletion:(void (^)(NSError *))arg1;\n@end\n'
p30
ssS'System/Library/PrivateFrameworks/FindMyDevice.framework/XPCServices/FindMyDeviceBTDiscoveryXPCService.xpc/FindMyDeviceBTDiscoveryXPCService'
p31
(dp32
sS'System/Library/PrivateFrameworks/PrintKit.framework/XPCServices/com.apple.PrintKit.PrinterTool.xpc/com.apple.PrintKit.PrinterTool'
p33
(dp34
S'WPDeviceScannerDelegate'
p35
S'@protocol WPDeviceScannerDelegate <NSObject>\n- (void)deviceScannerDidUpdateState:(WPDeviceScanner *)arg1;\n\n@optional\n- (void)scanner:(WPDeviceScanner *)arg1 foundAnyDevice:(NSUUID *)arg2 withData:(NSDictionary *)arg3;\n- (void)scanner:(WPDeviceScanner *)arg1 didFailToRegisterDevices:(NSDictionary *)arg2 withError:(NSError *)arg3;\n- (void)scanner:(WPDeviceScanner *)arg1 foundRequestedDevices:(NSArray *)arg2;\n- (void)scanner:(WPDeviceScanner *)arg1 foundDevice:(NSUUID *)arg2 withData:(NSDictionary *)arg3;\n@end\n'
p36
sS'PKBrowserProtocol'
p37
S'@protocol PKBrowserProtocol <NSObject>\n- (void)aggdDiscoveredPrinterStatistics;\n- (void)stopBrowsing;\n- (void)startBrowsing;\n@end\n'
p38
ssS'usr/libexec/gamecontrollerd'
p39
(dp40
sS'System/Library/PrivateFrameworks/PairingProximity.framework/XPCServices/com.apple.Bridge.ppNotifierService.xpc/com.apple.Bridge.ppNotifierService'
p41
(dp42
sS'System/Library/AppRemovalServices/com.apple.mobilecal.appremoval.xpc/com.apple.mobilecal.appremoval'
p43
(dp44
sS'System/Library/PrivateFrameworks/ManagedConfiguration.framework/Support/profiled'
p45
(dp46
S'MCXPCProtocol'
p47
S'@protocol MCXPCProtocol <NSObject>\n- (void)mayShareToAirDropForOriginatingAppBundleID:(NSString *)arg1 originatingAccountIsManaged:(_Bool)arg2 completion:(void (^)(_Bool, NSError *))arg3;\n- (void)mayShareToMessagesForOriginatingAppBundleID:(NSString *)arg1 originatingAccountIsManaged:(_Bool)arg2 completion:(void (^)(_Bool, NSError *))arg3;\n- (void)cancelFeaturePromptWithIdentifier:(NSString *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)showFeaturePromptForSetting:(NSString *)arg1 configurationUUID:(NSString *)arg2 promptOptions:(NSDictionary *)arg3 promptIdentifier:(NSString *)arg4 completion:(void (^)(int, NSError *))arg5;\n- (void)shutDownWithCompletion:(void (^)(NSError *))arg1;\n- (void)validateAppBundleIDs:(NSArray *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)setupAssistantDidFinishCompletion:(void (^)(NSError *))arg1;\n- (void)filteredMailAccountsWithSourceAccountManagement:(int)arg1 completion:(void (^)(NSArray *, NSError *))arg2;\n- (void)allowedKeyboardBundleIDsAfterApplyingFilterToBundleIDs:(NSArray *)arg1 hostAppBundleID:(NSString *)arg2 accountIsManaged:(_Bool)arg3 completion:(void (^)(NSArray *))arg4;\n- (void)unstashWhitelistURLStringsWithCompletion:(void (^)(NSError *))arg1;\n- (void)stashWhitelistURLStringsWithCompletion:(void (^)(NSError *))arg1;\n- (void)unstashBlacklistURLStringsWithCompletion:(void (^)(NSError *))arg1;\n- (void)stashBlacklistURLStringsWithCompletion:(void (^)(NSError *))arg1;\n- (void)removeWebContentFilterUserBlacklistedURLString:(NSString *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)unstashUserBookmarksFromLabel:(NSString *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)stashUserBookmarks:(NSArray *)arg1 withLabel:(NSString *)arg2 completion:(void (^)(NSError *))arg3;\n- (void)setUserBookmarks:(NSArray *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)storeActivationRecord:(NSDictionary *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)createActivationLockBypassCodeWithCompletion:(void (^)(NSString *, NSError *))arg1;\n- (void)cloudConfigurationStoreDetails:(NSDictionary *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)cloudConfigurationMachineInfoDataWithCompletion:(void (^)(NSData *, NSError *))arg1;\n- (void)rereadManagedAppAttributesWithCompletion:(void (^)(NSError *))arg1;\n- (void)markStoredProfileForPurposeAsInstalled:(int)arg1 completion:(void (^)(NSError *))arg2;\n- (void)profileDataStoredForPurpose:(int)arg1 completion:(void (^)(NSData *, NSError *))arg2;\n- (void)storeProfileData:(NSData *)arg1 configurationSource:(int)arg2 purpose:(int)arg3 completion:(void (^)(NSError *))arg4;\n- (void)removeExpiredProfilesWithCompletion:(void (^)(NSError *))arg1;\n- (void)managedAppIDsWithFlags:(int)arg1 completion:(void (^)(NSArray *, NSError *))arg2;\n- (void)setUserInfo:(NSDictionary *)arg1 forClientUUID:(NSString *)arg2 completion:(void (^)(NSError *))arg3;\n- (void)resetAllSettingsToDefaultsIsUserInitiated:(_Bool)arg1 completion:(void (^)(NSError *))arg2;\n- (void)recomputePerClientUserComplianceWithCompletion:(void (^)(NSError *))arg1;\n- (void)recomputeUserComplianceWarningWithCompletion:(void (^)(NSError *))arg1;\n- (void)notifyHaveSeenComplianceMessageWithLastLockDate:(NSDate *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)notifyStartComplianceTimer:(NSDate *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)removeProvisioningProfileWithUUID:(NSString *)arg1 completion:(void (^)(_Bool, NSError *))arg2;\n- (void)installProvisioningProfileData:(NSData *)arg1 managingProfileIdentifer:(NSString *)arg2 completion:(void (^)(NSError *))arg3;\n- (void)storeCertificateData:(NSData *)arg1 forIPCUIdentifier:(NSString *)arg2 completion:(void (^)(NSError *))arg3;\n- (void)openSensitiveURL:(NSString *)arg1 unlock:(_Bool)arg2 completion:(void (^)(NSError *))arg3;\n- (void)removeValueSetting:(NSString *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)removeBoolSetting:(NSString *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)setParametersForSettingsByType:(NSDictionary *)arg1 configurationUUID:(NSString *)arg2 toSystem:(_Bool)arg3 user:(_Bool)arg4 passcode:(NSString *)arg5 credentialSet:(NSData *)arg6 completion:(void (^)(NSError *))arg7;\n- (void)migratePostMDMDataMigratorWithContext:(int)arg1 completion:(void (^)(NSError *))arg2;\n- (void)migrateWithContext:(int)arg1 passcodeWasSetInBackup:(_Bool)arg2 completion:(void (^)(NSError *))arg3;\n- (void)managedWiFiNetworkNamesWithCompletion:(void (^)(NSArray *, NSError *))arg1;\n- (void)managedSystemConfigurationServiceIDsWithCompletion:(void (^)(NSArray *, NSError *))arg1;\n- (void)removeOrphanedClientRestrictionsWithCompletion:(void (^)(NSError *))arg1;\n- (void)clearPasscodeWithEscrowKeybagData:(NSData *)arg1 secret:(NSData *)arg2 completion:(void (^)(NSError *))arg3;\n- (void)changePasscode:(NSString *)arg1 oldPasscode:(NSString *)arg2 completion:(void (^)(_Bool, NSError *))arg3;\n- (void)applyRestrictionDictionary:(NSDictionary *)arg1 appsAndOptions:(NSArray *)arg2 clientType:(NSString *)arg3 clientUUID:(NSString *)arg4 localizedClientDescription:(NSString *)arg5 localizedWarningMessage:(NSString *)arg6 completion:(void (^)(_Bool, _Bool, NSError *))arg7;\n- (void)removeProtectedProfileWithIdentifier:(NSString *)arg1 installationType:(long long)arg2 completion:(void (^)(NSError *))arg3;\n- (void)removeProfileWithIdentifier:(NSString *)arg1 installationType:(long long)arg2 completion:(void (^)(NSError *))arg3;\n- (void)updateProfileIdentifier:(NSString *)arg1 interactive:(_Bool)arg2 completion:(void (^)(NSString *, NSError *))arg3;\n- (void)popProvisioningProfileFromHeadOfInstallationQueueWithCompletion:(void (^)(NSData *, NSError *))arg1;\n- (void)popProfileDataFromHeadOfInstallationQueueWithCompletion:(void (^)(NSData *, NSError *))arg1;\n- (void)queueProfileDataForInstallation:(NSData *)arg1 originalFileName:(NSString *)arg2 originatingBundleID:(NSString *)arg3 transitionToUI:(_Bool)arg4 completion:(void (^)(NSString *, NSError *))arg5;\n- (void)installProfileData:(NSData *)arg1 interactive:(_Bool)arg2 options:(NSDictionary *)arg3 completion:(void (^)(NSString *, NSError *))arg4;\n- (void)isProfileInstalledWithIdentifier:(NSString *)arg1 completion:(void (^)(NSError *, _Bool))arg2;\n- (void)defaultAppBundleIDForCommunicationServiceType:(NSString *)arg1 forAccountWithIdentifier:(NSString *)arg2 completion:(void (^)(NSString *, NSError *))arg3;\n- (void)notifyDeviceUnlockedWithCompletion:(void (^)(NSError *))arg1;\n- (void)waitForMigrationIncludingPostRestoreMigration:(_Bool)arg1 completion:(void (^)(NSError *))arg2;\n- (void)addBookmark:(NSDictionary *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)addAllowedURLString:(NSString *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)setAllowedURLStrings:(NSArray *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)setDictationAllowed:(_Bool)arg1 completion:(void (^)(NSError *))arg2;\n- (void)setSpellCheckAllowed:(_Bool)arg1 completion:(void (^)(NSError *))arg2;\n- (void)setKeyboardShortcutsAllowed:(_Bool)arg1 completion:(void (^)(NSError *))arg2;\n- (void)setPredictiveKeyboardAllowed:(_Bool)arg1 completion:(void (^)(NSError *))arg2;\n- (void)setSmartPunctuationAllowed:(_Bool)arg1 completion:(void (^)(NSError *))arg2;\n- (void)setAutoCorrectionAllowed:(_Bool)arg1 completion:(void (^)(NSError *))arg2;\n- (void)allowedImportFromAppBundleIDs:(NSArray *)arg1 importingAppBundleID:(NSString *)arg2 importingIsManaged:(_Bool)arg3 completion:(void (^)(NSArray *, NSError *))arg4;\n- (void)allowedOpenInAppBundleIDs:(NSArray *)arg1 originatingAppBundleID:(NSString *)arg2 originatingIsManaged:(_Bool)arg3 completion:(void (^)(NSArray *, NSError *))arg4;\n- (void)checkCarrierProfileAndForceReinstallation:(_Bool)arg1 completion:(void (^)(NSError *))arg2;\n- (void)checkInWithCompletion:(void (^)(NSError *))arg1;\n@end\n'
p48
ssS'System/Library/PrivateFrameworks/MobileBackup.framework/XPCServices/MBHelperService.xpc/MBHelperService'
p49
(dp50
sS'System/Library/PrivateFrameworks/MarkupUI.framework/PlugIns/MarkupPrivateExtension.appex/MarkupPrivateExtension'
p51
(dp52
sS'System/Library/PrivateFrameworks/MusicLibrary.framework/Support/medialibraryd'
p53
(dp54
S'ML3MusicLibraryDelegate'
p55
S'@protocol ML3MusicLibraryDelegate <NSObject>\n\n@optional\n- (void)library:(ML3MusicLibrary *)arg1 didRollbackDatabaseTransactionWithConnection:(ML3DatabaseConnection *)arg2;\n- (void)library:(ML3MusicLibrary *)arg1 didCommitDatabaseTransactionWithConnection:(ML3DatabaseConnection *)arg2;\n- (void)library:(ML3MusicLibrary *)arg1 didBeginDatabaseTransactionWithConnection:(ML3DatabaseConnection *)arg2;\n@end\n'
p56
sS'NSXPCListenerDelegate'
p57
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p58
sS'MLDDiagnosticCollection'
p59
S'@protocol MLDDiagnosticCollection <NSObject>\n- (void)collectDiagnostic:(MLDMutableDiagnostic *)arg1;\n@end\n'
p60
sS'MLMediaLibraryServiceProtocol'
p61
S'@protocol MLMediaLibraryServiceProtocol <NSObject>\n- (void)performMaintenanceTasksForDatabaseAtPath:(NSString *)arg1 withCompletionHandler:(void (^)(_Bool, NSError *))arg2;\n- (void)performRestoreOfLatestBackupForDatabaseAtPath:(NSString *)arg1 withCompletion:(void (^)(_Bool, NSError *))arg2;\n- (void)performBackupOfDatabaseAtPath:(NSString *)arg1 withCompletion:(void (^)(_Bool, NSError *))arg2;\n- (void)updateSpotlightIndexMetadataForItemsWithIdentifiers:(NSArray *)arg1 bundleID:(NSString *)arg2 withCompletion:(void (^)(_Bool, NSError *))arg3;\n- (void)updateSpotlightIndexForBundleID:(NSString *)arg1 withCompletion:(void (^)(_Bool, NSError *))arg2;\n- (void)setDeviceSharedLibraryPath:(NSString *)arg1 withCompletion:(void (^)(_Bool, NSError *))arg2;\n- (void)getDeviceSharedLibraryPath:(void (^)(NSString *))arg1;\n- (void)getLanguageResourcesWithCompletion:(void (^)(ML3LanguageResources *, NSError *))arg1;\n- (void)unlockDatabaseWithCompletion:(void (^)(_Bool, NSError *))arg1;\n- (void)lockDatabaseForReason:(NSString *)arg1 withCompletion:(void (^)(_Bool, NSError *))arg2;\n- (void)cancelImportOperation:(unsigned long long)arg1 completionHandler:(void (^)(_Bool, NSError *))arg2;\n- (void)performImport:(ML3DatabaseImport *)arg1 fromSource:(unsigned long long)arg2 withUUID:(NSUUID *)arg3 completionHandler:(void (^)(_Bool, NSError *, NSData *))arg4;\n- (void)setOptions:(NSDictionary *)arg1 withCompletionHandler:(void (^)(_Bool, NSError *))arg2;\n- (void)performDatabaseOperation:(unsigned long long)arg1 withAttributes:(NSDictionary *)arg2 options:(NSDictionary *)arg3 completionHandler:(void (^)(_Bool, NSError *))arg4;\n- (void)endTransaction:(NSUUID *)arg1 shouldCommit:(_Bool)arg2 withCompletionHandler:(void (^)(_Bool, NSError *))arg3;\n- (void)executeQuery:(NSString *)arg1 withParameters:(NSArray *)arg2 options:(NSDictionary *)arg3 onTransaction:(NSUUID *)arg4 withCompletionHandler:(void (^)(NSData *, NSError *))arg5;\n- (void)executeUpdate:(NSString *)arg1 withParameters:(NSArray *)arg2 onTransaction:(NSUUID *)arg3 withCompletionHandler:(void (^)(_Bool, NSError *))arg4;\n- (void)beginTransactionForDatabaseAtPath:(NSString *)arg1 withPriorityLevel:(unsigned long long)arg2 options:(unsigned long long)arg3 completionHandler:(void (^)(NSUUID *, NSError *))arg4;\n- (void)recreateDatabaseAtPath:(NSString *)arg1 withCompletionHandler:(void (^)(_Bool, NSError *))arg2;\n- (void)performDiagnosticWithCompletionHandler:(void (^)(NSString *, NSError *))arg1;\n- (void)attemptDatabaseFileRecoveryAtPath:(NSString *)arg1 withCompletionHandler:(void (^)(_Bool, NSError *))arg2;\n- (void)validateDatabaseAtPath:(NSString *)arg1 withCompletionHandler:(void (^)(_Bool, NSError *))arg2;\n@end\n'
p62
sS'MLDMediaLibraryWriterDelegate'
p63
S'@protocol MLDMediaLibraryWriterDelegate <NSObject>\n\n@optional\n- (void)mediaLibraryWriter:(MLDMediaLibraryWriter *)arg1 didDestroyTransaction:(MLDActiveTransaction *)arg2;\n- (void)mediaLibraryWriter:(MLDMediaLibraryWriter *)arg1 terminatedTransaction:(MLDActiveTransaction *)arg2 withError:(NSError *)arg3;\n@end\n'
p64
sS'NSXPCConnectionDelegate'
p65
S'@protocol NSXPCConnectionDelegate <NSObject>\n\n@optional\n- (void)connection:(NSXPCConnection *)arg1 handleInvocation:(NSInvocation *)arg2 isReply:(_Bool)arg3;\n- (id <NSSecureCoding>)replacementObjectForXPCConnection:(NSXPCConnection *)arg1 encoder:(NSXPCCoder *)arg2 object:(id)arg3;\n@end\n'
p66
ssS'System/Library/CoreServices/SpringBoard.app/SpringBoard'
p67
(dp68
S'NSXPCListenerDelegate'
p69
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p70
sS'SBCardItemsControllerRemoteInterface'
p71
S'@protocol SBCardItemsControllerRemoteInterface <NSObject>\n- (void)getCardItemsForControllerWithIdentifier:(NSString *)arg1 withHandler:(void (^)(NSArray *, NSError *))arg2;\n- (void)setCardItems:(NSArray *)arg1 forControllerWithIdentifier:(NSString *)arg2;\n@end\n'
p72
sS'SBStatusBarStyleOverridesAssertionServer'
p73
S'@protocol SBStatusBarStyleOverridesAssertionServer <NSObject>\n- (void)setRegisteredOverrides:(NSNumber *)arg1 reply:(void (^)(NSError *))arg2;\n- (void)setStatusString:(NSString *)arg1 forAssertionWithIdentifier:(NSString *)arg2;\n- (void)deactivateStatusBarStyleOverridesAssertionsWithIdentifiers:(NSSet *)arg1;\n- (void)activateStatusBarStyleOverridesAssertions:(NSSet *)arg1 reply:(void (^)(NSDictionary *))arg2;\n@end\n'
p74
ssS'System/Library/PrivateFrameworks/AskPermission.framework/askpermissiond'
p75
(dp76
S'PRAgentProtocol'
p77
S'@protocol PRAgentProtocol\n- (void)deleteTestValueFromTouchIDKeychain;\n- (void)writeTestValueToTouchIDKeychain;\n- (void)readTestValueFromTouchIDKeychain;\n- (void)pushTokenWithReplyBlock:(void (^)(NSData *))arg1;\n- (void)registerPushToken;\n- (void)clearCachedRequests;\n- (void)userDidDenyRequestWithRequestID:(NSString *)arg1;\n- (void)userDidApproveRequestWithRequestID:(NSString *)arg1;\n- (void)requestToBePresentedWithReplyBlock:(void (^)(PRRequest *, NSString *))arg1;\n- (void)attemptLocalApprovalForStorePurchaseRequestWithItemIdentifier:(unsigned long long)arg1 replyBlock:(void (^)(_Bool, _Bool, NSError *))arg2;\n- (void)pendingStorePurchaseRequestForItemIdentifier:(unsigned long long)arg1 withReplyBlock:(void (^)(PRRequest *, NSError *))arg2;\n- (void)didReceiveStorePushNotificationWithPayload:(NSDictionary *)arg1;\n- (void)didStartNewStorePurchaseRequestWithInfo:(NSDictionary *)arg1;\n- (void)attemptLocalApprovalForRequestWithRequestID:(NSString *)arg1 completionHandler:(void (^)(_Bool, NSError *))arg2;\n- (void)pendingRequestsWithReplyBlock:(void (^)(NSArray *, NSError *))arg1;\n- (void)addRequest:(PRRequest *)arg1 withReplyBlock:(void (^)(_Bool, NSError *))arg2;\n- (void)setDelegate:(id <PRRequestDelegate>)arg1;\n- (void)setClientIdentifier:(NSString *)arg1;\n@end\n'
p78
ssS'private/var/staged_system_apps/MobileNotes.app/MobileNotes'
p79
(dp80
sS'usr/sbin/bluetoothd'
p81
(dp82
sS'private/var/staged_system_apps/VoiceMemos.app/VoiceMemos'
p83
(dp84
sS'System/Library/DistributedEvaluation/Plugins/CoreSpeechFidesPlugin.desPlugin/XPCServices/CoreSpeechFidesXPC.xpc/CoreSpeechFidesXPC'
p85
(dp86
sS'System/Library/PrivateFrameworks/NanoLeash.framework/companionfindlocallyd'
p87
(dp88
S'IDSServiceDelegate'
p89
S'@protocol IDSServiceDelegate <NSObject>\n\n@optional\n- (void)service:(IDSService *)arg1 didSwitchActivePairedDevice:(IDSDevice *)arg2 acknowledgementBlock:(void (^)(void))arg3;\n- (void)serviceAllowedTrafficClassifiersDidReset:(IDSService *)arg1;\n- (void)serviceSpaceDidBecomeAvailable:(IDSService *)arg1;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 inviteReceivedForSession:(IDSSession *)arg3 fromID:(NSString *)arg4 withContext:(NSData *)arg5;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 inviteReceivedForSession:(IDSSession *)arg3 fromID:(NSString *)arg4 withOptions:(NSDictionary *)arg5;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 inviteReceivedForSession:(IDSSession *)arg3 fromID:(NSString *)arg4;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 identifier:(NSString *)arg3 hasBeenDeliveredWithContext:(id)arg4;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 identifier:(NSString *)arg3 didSendWithSuccess:(_Bool)arg4 error:(NSError *)arg5 context:(IDSMessageContext *)arg6;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 identifier:(NSString *)arg3 didSendWithSuccess:(_Bool)arg4 error:(NSError *)arg5;\n- (void)service:(IDSService *)arg1 connectedDevicesChanged:(NSArray *)arg2;\n- (void)service:(IDSService *)arg1 nearbyDevicesChanged:(NSArray *)arg2;\n- (void)service:(IDSService *)arg1 devicesChanged:(NSArray *)arg2;\n- (void)service:(IDSService *)arg1 activeAccountsChanged:(NSSet *)arg2;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingResourceAtURL:(NSURL *)arg3 metadata:(NSDictionary *)arg4 fromID:(NSString *)arg5 context:(IDSMessageContext *)arg6;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingResourceAtURL:(NSURL *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingUnhandledProtobuf:(IDSProtobuf *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingData:(NSData *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingMessage:(NSDictionary *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;\n@end\n'
p90
sS'NSXPCListenerDelegate'
p91
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p92
sS'NFMCompanionFindMyController'
p93
S'@protocol NFMCompanionFindMyController <NSObject>\n@end\n'
p94
ssS'System/Library/PrivateFrameworks/NewsDaemon.framework/newsd'
p95
(dp96
sS'System/Library/PrivateFrameworks/FindMyDevice.framework/XPCServices/FindMyDeviceHelperXPCService.xpc/FindMyDeviceHelperXPCService'
p97
(dp98
sS'System/Library/AppRemovalServices/com.apple.iBooks.appremoval.xpc/com.apple.iBooks.appremoval'
p99
(dp100
sS'usr/libexec/security-sysdiagnose'
p101
(dp102
sS'Applications/CheckerBoard.app/CheckerBoard'
p103
(dp104
S'NSXPCListenerDelegate'
p105
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p106
sS'CBSServerProtocol'
p107
S'@protocol CBSServerProtocol <CBSRemoteAlertServerProtocol, CBSSystemServicesProtocol>\n@end\n'
p108
ssS'Applications/HomeUIService.app/HomeUIService'
p109
(dp110
sS'System/Library/PrivateFrameworks/CacheDelete.framework/deleted'
p111
(dp112
sS'System/Library/PrivateFrameworks/Search.framework/searchd'
p113
(dp114
sS'System/Library/PrivateFrameworks/MobileBackup.framework/backupd'
p115
(dp116
sS'Applications/iCloud.app/iCloud'
p117
(dp118
S'RetrievingDialogDelegate'
p119
S'@protocol RetrievingDialogDelegate\n- (void)retrievingDialogCancelled;\n- (_Bool)retrievingDialogShouldDisplay;\n@end\n'
p120
ssS'System/Library/PrivateFrameworks/DragUI.framework/Support/druid'
p121
(dp122
S'_DUIServerSessionAccessibility'
p123
S'@protocol _DUIServerSessionAccessibility\n- (oneway void)accessibilityCancel;\n- (oneway void)accessibilityDrop;\n- (oneway void)accessibilityMoveToPoint:(struct CGPoint)arg1;\n@end\n'
p124
sS'FBSSceneDelegate'
p125
S'@protocol FBSSceneDelegate <NSObject>\n- (void)scene:(FBSScene *)arg1 didReceiveActions:(NSSet *)arg2;\n- (void)scene:(FBSScene *)arg1 didUpdateWithDiff:(FBSSceneSettingsDiff *)arg2 transitionContext:(FBSSceneTransitionContext *)arg3 completion:(void (^)(FBSWorkspaceSceneUpdateResponse *))arg4;\n@end\n'
p126
sS'_DUIServerSource'
p127
S'@protocol _DUIServerSource\n- (oneway void)beginDragWithTouchIdentifiers:(NSArray *)arg1 touchRoutingPolicy:(_DUITouchRoutingPolicy *)arg2 itemCollection:(PBItemCollection *)arg3 itemDetails:(NSArray *)arg4 dataProviderEndpoint:(NSXPCListenerEndpoint *)arg5 source:(id <_DUIClientSessionSource>)arg6 accessibilityEndpoint:(NSXPCListenerEndpoint *)arg7 centroid:(struct CGPoint)arg8 reply:(void (^)(unsigned int, id <_DUIServerSessionSource>))arg9;\n- (oneway void)warmUp;\n@end\n'
p128
sS'DRTouchTrackingWindowDelegate'
p129
S'@protocol DRTouchTrackingWindowDelegate <NSObject>\n- (void)trackedTouchesCancelled:(NSSet *)arg1;\n- (void)trackedTouchesEnded:(NSSet *)arg1 pairedWithVelocities:(NSSet *)arg2;\n- (void)trackedTouchesMoved:(NSSet *)arg1;\n- (void)trackedTouchesBegan:(NSSet *)arg1;\n@end\n'
p130
sS'BKSTouchDeliveryObserving'
p131
S'@protocol BKSTouchDeliveryObserving <NSObject>\n\n@optional\n- (void)touchDetachedForIdentifier:(unsigned int)arg1 context:(unsigned int)arg2 pid:(int)arg3;\n- (void)touchUpOccuredForIdentifier:(unsigned int)arg1 detached:(_Bool)arg2 context:(unsigned int)arg3 pid:(int)arg4;\n@end\n'
p132
sS'_DUIServerSessionDestination'
p133
S'@protocol _DUIServerSessionDestination\n- (oneway void)enableKeyboardIfNeeded;\n- (oneway void)sawDragEndEvent;\n- (oneway void)requestDropWithOperation:(unsigned long long)arg1;\n- (oneway void)takePotentialDrop:(_DUIPotentialDrop *)arg1;\n- (oneway void)dirtyDestinationItems:(NSArray *)arg1;\n@end\n'
p134
sS'DRViewControllerDelegate'
p135
S'@protocol DRViewControllerDelegate <NSObject>\n- (void)viewController:(DRViewController *)arg1 requestImagesForSessionID:(unsigned int)arg2 client:(id <_DUIClientSessionCommon>)arg3 itemIndexes:(NSIndexSet *)arg4;\n@end\n'
p136
sS'DRDataTransferSessionDelegate'
p137
S'@protocol DRDataTransferSessionDelegate <NSObject>\n\n@optional\n- (void)dataTransferSessionFinished:(DRDataTransferSession *)arg1;\n- (void)dataTransferSessionBegan:(DRDataTransferSession *)arg1;\n@end\n'
p138
sS'_DUIServerSessionSource'
p139
S'@protocol _DUIServerSessionSource\n- (oneway void)cancelDrag;\n- (oneway void)addItemsWithDetails:(NSArray *)arg1 itemCollection:(PBItemCollection *)arg2 dataProviderEndpoint:(NSXPCListenerEndpoint *)arg3;\n- (oneway void)dragDidExitSourceApp;\n- (oneway void)dirtySourceItems:(NSArray *)arg1;\n- (oneway void)takeOutsideAppSourceOperationMask:(unsigned long long)arg1 prefersFullSizePreview:(_Bool)arg2;\n@end\n'
p140
sS'_DUIServerDestination'
p141
S'@protocol _DUIServerDestination\n- (oneway void)sawFirstDragEventWithSessionID:(unsigned int)arg1 destination:(id <_DUIClientSessionDestination>)arg2 reply:(void (^)(id <_DUIServerSessionDestination>, PBItemCollection *, NSArray *, unsigned long long, _Bool))arg3;\n@end\n'
p142
sS'NSXPCListenerDelegate'
p143
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p144
sS'DRDragSessionDelegate'
p145
S'@protocol DRDragSessionDelegate <NSObject>\n- (void)dragSession:(DRDragSession *)arg1 moveToLocation:(struct CGPoint)arg2;\n- (void)dragSession:(DRDragSession *)arg1 enableKeyboardIfNeeded:(_Bool)arg2;\n- (void)dragSessionDidEnd:(DRDragSession *)arg1;\n- (void)dragSessionWillEnd:(DRDragSession *)arg1;\n- (void)dragSessionAnimateOutVisibleItems:(DRDragSession *)arg1;\n- (void)dragSession:(DRDragSession *)arg1 findVisibleDroppedItemsAndRemove:(_Bool)arg2 replyingOnQueue:(NSObject<OS_dispatch_queue> *)arg3 with:(void (^)(NSArray *, BKSAnimationFenceHandle *))arg4;\n- (void)dragSession:(DRDragSession *)arg1 updatedPotentialDrop:(_DUIPotentialDrop *)arg2 forDestinationClient:(id <_DUIClientSessionCommon>)arg3;\n- (void)dragSession:(DRDragSession *)arg1 addedItems:(NSArray *)arg2;\n- (void)dragSession:(DRDragSession *)arg1 updateDetail:(_DUIItemDetail *)arg2 forClient:(id <_DUIClientSessionCommon>)arg3 itemIndex:(unsigned long long)arg4;\n- (void)dragSession:(DRDragSession *)arg1 invalidateImageForClient:(id <_DUIClientSessionCommon>)arg2 itemIndex:(unsigned long long)arg3;\n- (void)dragSession:(DRDragSession *)arg1 updateImageComponents:(NSArray *)arg2 preview:(_DUIPreview *)arg3 andDetail:(_DUIItemDetail *)arg4 forClient:(id <_DUIClientSessionCommon>)arg5 itemIndex:(unsigned long long)arg6 withFence:(BKSAnimationFenceHandle *)arg7;\n@end\n'
p146
sS'UIApplicationDelegate'
p147
S'@protocol UIApplicationDelegate <NSObject>\n\n@optional\n@property(retain, nonatomic) UIWindow *window;\n- (void)application:(UIApplication *)arg1 userDidAcceptCloudKitShareWithMetadata:(CKShareMetadata *)arg2;\n- (void)application:(UIApplication *)arg1 didUpdateUserActivity:(NSUserActivity *)arg2;\n- (void)application:(UIApplication *)arg1 didFailToContinueUserActivityWithType:(NSString *)arg2 error:(NSError *)arg3;\n- (_Bool)application:(UIApplication *)arg1 continueUserActivity:(NSUserActivity *)arg2 restorationHandler:(void (^)(NSArray *))arg3;\n- (_Bool)application:(UIApplication *)arg1 willContinueUserActivityWithType:(NSString *)arg2;\n- (void)application:(UIApplication *)arg1 didDecodeRestorableStateWithCoder:(NSCoder *)arg2;\n- (void)application:(UIApplication *)arg1 willEncodeRestorableStateWithCoder:(NSCoder *)arg2;\n- (_Bool)application:(UIApplication *)arg1 shouldRestoreApplicationState:(NSCoder *)arg2;\n- (_Bool)application:(UIApplication *)arg1 shouldSaveApplicationState:(NSCoder *)arg2;\n- (UIViewController *)application:(UIApplication *)arg1 viewControllerWithRestorationIdentifierPath:(NSArray *)arg2 coder:(NSCoder *)arg3;\n- (_Bool)application:(UIApplication *)arg1 shouldAllowExtensionPointIdentifier:(NSString *)arg2;\n- (unsigned long long)application:(UIApplication *)arg1 supportedInterfaceOrientationsForWindow:(UIWindow *)arg2;\n- (void)applicationProtectedDataDidBecomeAvailable:(UIApplication *)arg1;\n- (void)applicationProtectedDataWillBecomeUnavailable:(UIApplication *)arg1;\n- (void)applicationWillEnterForeground:(UIApplication *)arg1;\n- (void)applicationDidEnterBackground:(UIApplication *)arg1;\n- (void)application:(UIApplication *)arg1 handleIntent:(INIntent *)arg2 completionHandler:(void (^)(INIntentResponse *))arg3;\n- (void)applicationShouldRequestHealthAuthorization:(UIApplication *)arg1;\n- (void)application:(UIApplication *)arg1 handleWatchKitExtensionRequest:(NSDictionary *)arg2 reply:(void (^)(NSDictionary *))arg3;\n- (void)application:(UIApplication *)arg1 handleEventsForBackgroundURLSession:(NSString *)arg2 completionHandler:(void (^)(void))arg3;\n- (void)application:(UIApplication *)arg1 performActionForShortcutItem:(UIApplicationShortcutItem *)arg2 completionHandler:(void (^)(_Bool))arg3;\n- (void)application:(UIApplication *)arg1 performFetchWithCompletionHandler:(void (^)(unsigned long long))arg2;\n- (void)application:(UIApplication *)arg1 didReceiveRemoteNotification:(NSDictionary *)arg2 fetchCompletionHandler:(void (^)(unsigned long long))arg3;\n- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forLocalNotification:(UILocalNotification *)arg3 withResponseInfo:(NSDictionary *)arg4 completionHandler:(void (^)(void))arg5;\n- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forRemoteNotification:(NSDictionary *)arg3 completionHandler:(void (^)(void))arg4;\n- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forRemoteNotification:(NSDictionary *)arg3 withResponseInfo:(NSDictionary *)arg4 completionHandler:(void (^)(void))arg5;\n- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forLocalNotification:(UILocalNotification *)arg3 completionHandler:(void (^)(void))arg4;\n- (void)application:(UIApplication *)arg1 didReceiveLocalNotification:(UILocalNotification *)arg2;\n- (void)application:(UIApplication *)arg1 didReceiveRemoteNotification:(NSDictionary *)arg2;\n- (void)application:(UIApplication *)arg1 didFailToRegisterForRemoteNotificationsWithError:(NSError *)arg2;\n- (void)application:(UIApplication *)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)arg2;\n- (void)application:(UIApplication *)arg1 didRegisterUserNotificationSettings:(UIUserNotificationSettings *)arg2;\n- (void)application:(UIApplication *)arg1 didChangeStatusBarFrame:(struct CGRect)arg2;\n- (void)application:(UIApplication *)arg1 willChangeStatusBarFrame:(struct CGRect)arg2;\n- (void)application:(UIApplication *)arg1 didChangeStatusBarOrientation:(long long)arg2;\n- (void)application:(UIApplication *)arg1 willChangeStatusBarOrientation:(long long)arg2 duration:(double)arg3;\n- (void)applicationSignificantTimeChange:(UIApplication *)arg1;\n- (void)applicationWillTerminate:(UIApplication *)arg1;\n- (void)applicationDidReceiveMemoryWarning:(UIApplication *)arg1;\n- (_Bool)application:(UIApplication *)arg1 openURL:(NSURL *)arg2 options:(NSDictionary *)arg3;\n- (_Bool)application:(UIApplication *)arg1 openURL:(NSURL *)arg2 sourceApplication:(NSString *)arg3 annotation:(id)arg4;\n- (_Bool)application:(UIApplication *)arg1 handleOpenURL:(NSURL *)arg2;\n- (void)applicationWillResignActive:(UIApplication *)arg1;\n- (void)applicationDidBecomeActive:(UIApplication *)arg1;\n- (_Bool)application:(UIApplication *)arg1 didFinishLaunchingWithOptions:(NSDictionary *)arg2;\n- (_Bool)application:(UIApplication *)arg1 willFinishLaunchingWithOptions:(NSDictionary *)arg2;\n- (void)applicationDidFinishLaunching:(UIApplication *)arg1;\n@end\n'
p148
sS'_UIKeyboardArbitrationClient'
p149
S'@protocol _UIKeyboardArbitrationClient\n- (void)queue_setKeyboardDisabled:(_Bool)arg1 withCompletion:(void (^)(void))arg2;\n- (void)queue_getDebugInfoWithCompletion:(void (^)(NSDictionary *))arg1;\n- (void)queue_applicationLostFocusWithCompletion:(void (^)(void))arg1;\n- (void)queue_keyboardSuppressed:(_Bool)arg1 withCompletion:(void (^)(void))arg2;\n- (void)queue_keyboardTransition:(NSString *)arg1 event:(unsigned long long)arg2 withInfo:(NSDictionary *)arg3 onComplete:(void (^)(void))arg4;\n- (void)queue_keyboardChangedWithCompletion:(void (^)(void))arg1;\n- (void)queue_keyboardChanged:(_UIKeyboardChangedInformation *)arg1 onComplete:(void (^)(void))arg2;\n@end\n'
p150
ssS'System/Library/PrivateFrameworks/FamilyCircle.framework/familycircled'
p151
(dp152
sS'private/var/staged_system_apps/iBooks.app/iBooks'
p153
(dp154
sS'System/Library/PrivateFrameworks/MapsSupport.framework/mapspushd'
p155
(dp156
S'MapsPushDelegate'
p157
S'@protocol MapsPushDelegate <NSObject>\n- (void)pushManager:(MapsPushManager *)arg1 receivedFixedProblemNotification:(GEORPProblemStatusResponse *)arg2 manifestToken:(NSString *)arg3;\n- (void)pushManager:(MapsPushManager *)arg1 gotPushData:(NSData *)arg2;\n@end\n'
p158
sS'MSPMapsPushDaemonProxy'
p159
S'@protocol MSPMapsPushDaemonProxy <MSPRemoteModelAccess>\n- (void)fetchUserRoutingPreferencesWithCompletion:(void (^)(MSPUserRoutingPreferences *, NSError *))arg1;\n- (void)mapsLocationAuthorizationStatusChanged;\n- (void)handleMapsApplicationRemoval:(void (^)(NSError *))arg1;\n- (void)eraseRAPData;\n- (oneway void)updateMapsModelBackupAttributesIfNeeded;\n- (void)clearParkedCarBulletin;\n- (void)showParkedCarReplacementBulletinForEvent:(RTVehicleEvent *)arg1 replacingEvent:(RTVehicleEvent *)arg2 afterDelay:(double)arg3;\n- (void)showParkedCarReplacementBulletinForEvent:(RTVehicleEvent *)arg1 replacingEvent:(RTVehicleEvent *)arg2;\n- (void)showParkedCarBulletinForEvent:(RTVehicleEvent *)arg1 afterDelay:(double)arg2;\n- (void)showParkedCarBulletinForEvent:(RTVehicleEvent *)arg1;\n- (void)clearLowFuelAlertBulletin;\n- (void)showLowFuelAlertBulletinForLowFuelDetails:(MSPLowFuelDetails *)arg1;\n- (void)clearPredictedRouteTrafficIncidentBulletin;\n- (void)showPredictedRouteTrafficIncidentBulletinForCommuteDetails:(MNCommuteNotificationDetails *)arg1 afterDelay:(double)arg2;\n- (void)showPredictedRouteTrafficIncidentBulletinForCommuteDetails:(MNCommuteNotificationDetails *)arg1;\n- (void)clearTransitAlightAlertBulletin;\n- (void)showTransitAlightAlertWithTitle:(NSString *)arg1 message:(NSString *)arg2;\n- (void)clearTrafficIncidentsBulletin;\n- (void)clearTrafficIncidentBulletinWithAlertID:(NSData *)arg1;\n- (void)showTrafficIncidentAlertWithID:(NSData *)arg1 type:(unsigned long long)arg2 title:(NSString *)arg3 description:(NSString *)arg4;\n- (void)clearTrafficConditionsBulletin;\n- (void)showTrafficConditionsBulletinWithTitle:(NSString *)arg1 message:(NSString *)arg2 actionURL:(NSURL *)arg3;\n- (void)removeProblemStatusResponseWithNotificationID:(NSString *)arg1;\n- (void)problemStatusResponseWithNotificationID:(NSString *)arg1 completion:(void (^)(GEORPProblemStatusResponse *))arg2;\n- (void)clearBulletinWithRecordID:(NSString *)arg1;\n- (void)fetchCurrentAnnouncement:(void (^)(GEOAnnouncement *))arg1;\n- (void)resetShownAnnouncements;\n- (void)clearCurrentAnnouncement;\n- (void)simulateAnnouncement:(GEOAnnouncement *)arg1;\n- (void)checkin;\n- (void)fetchDevicePushToken:(void (^)(NSData *))arg1;\n- (void)setShouldUseDevAPNS:(_Bool)arg1;\n- (void)shouldUseDevAPNS:(void (^)(_Bool))arg1;\n- (void)fetchProblemStatus;\n- (void)simulateProblemResolution;\n- (void)registerForTopic;\n@end\n'
p160
sS'NSXPCListenerDelegate'
p161
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p162
sS'MSPRemoteModelAccess'
p163
S'@protocol MSPRemoteModelAccess <NSObject>\n- (void)noteMapstoolChangedFavoritesOnDisk;\n- (void)noteMapstoolChangedHistoryOnDisk;\n- (void)testByNotingHistoryChangedOnDisk;\n- (void)eraseHistorySerializedRepresentationWithCompletion:(void (^)(NSError *))arg1;\n- (void)fetchLastKnownHistoryOperationIdentifier:(void (^)(NSUUID *))arg1;\n- (void)commitHistorySerializedRepresentation:(NSData *)arg1 earliestKnownSyncDate:(NSDate *)arg2 operationIdentifier:(NSUUID *)arg3 completion:(void (^)(NSError *))arg4;\n- (void)fetchHistorySerializedRepresentationWithCompletion:(void (^)(NSData *, NSError *))arg1;\n- (void)eraseFavoritesSerializedRepresentationWithCompletion:(void (^)(NSError *))arg1;\n- (void)fetchLastKnownFavoritesOperationIdentifier:(void (^)(NSUUID *))arg1;\n- (void)commitFavoritesSerializedRepresentation:(NSData *)arg1 operationIdentifier:(NSUUID *)arg2 completion:(void (^)(NSError *))arg3;\n- (void)fetchFavoritesSerializedRepresentationWithCompletion:(void (^)(NSData *, NSError *))arg1;\n@end\n'
p164
sS'AnnouncementsManagerDelegate'
p165
S'@protocol AnnouncementsManagerDelegate <NSObject>\n- (void)announcementsManager:(AnnouncementsManager *)arg1 didChangeActiveAnnouncement:(GEOAnnouncement *)arg2;\n@end\n'
p166
sS'MapsBBDataProviderDelegate'
p167
S'@protocol MapsBBDataProviderDelegate <NSObject>\n- (void)dataProvider:(MapsBBDataProvider *)arg1 didClearAnnouncementWithID:(unsigned int)arg2;\n@end\n'
p168
ssS'Applications/Feedback Assistant iOS.app/Feedback Assistant iOS'
p169
(dp170
sS'System/Library/PrivateFrameworks/iWorkXPC.framework/XPCServices/iWorkFileFormat.xpc/iWorkFileFormat'
p171
(dp172
sS'System/Library/PrivateFrameworks/AssistantServices.framework/XPCServices/DeepSyncVerification.xpc/DeepSyncVerification'
p173
(dp174
sS'usr/libexec/DataDetectorsSourceAccess'
p175
(dp176
sS'System/Library/PrivateFrameworks/SafariShared.framework/XPCServices/com.apple.Safari.ImageDecoder.xpc/com.apple.Safari.ImageDecoder'
p177
(dp178
sS'System/Library/PrivateFrameworks/ContactsDonation.framework/Versions/A/Support/contactsdonationagent'
p179
(dp180
sS'System/Library/PrivateFrameworks/SetupAssistant.framework/budd'
p181
(dp182
S'NSXPCListenerDelegate'
p183
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p184
sS'BYClientDaemonCloudSyncProtocol'
p185
S'@protocol BYClientDaemonCloudSyncProtocol <NSObject>\n- (void)syncCompletedWithErrors:(NSArray *)arg1;\n- (void)syncProgress:(double)arg1;\n@end\n'
p186
sS'BYDaemonCloudSyncProtocol'
p187
S'@protocol BYDaemonCloudSyncProtocol <NSObject>\n- (void)startSync;\n- (void)needsToSync:(void (^)(unsigned long long))arg1;\n@end\n'
p188
ssS'usr/libexec/MobileGestaltHelper'
p189
(dp190
sS'System/Library/Frameworks/CallKit.framework/XPCServices/com.apple.CallKit.CallDirectory.xpc/com.apple.CallKit.CallDirectory'
p191
(dp192
sS'Applications/StoreKitUIService.app/StoreKitUIService'
p193
(dp194
sS'System/Library/PrivateFrameworks/IAP.framework/Support/iap2d'
p195
(dp196
sS'System/Library/PrivateFrameworks/WelcomeKit.framework/matd'
p197
(dp198
S'NSXPCListenerDelegate'
p199
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p200
sS'WLDaemonProtocol'
p201
S'@protocol WLDaemonProtocol\n- (void)attemptDirectConnectionToAddress:(NSString *)arg1;\n- (void)startMigrationWithDataTypes:(unsigned long long)arg1 delegate:(id <WLDataMigrationDelegate>)arg2 replyBlock:(void (^)(id <WLDataMigratorProtocol>, NSError *))arg3;\n- (void)sourceDeviceWithReply:(void (^)(WLSourceDevice *, NSError *))arg1;\n- (void)stopWiFiAndDeviceDiscovery:(void (^)(_Bool, NSError *))arg1;\n- (void)stopDeviceDiscovery:(void (^)(_Bool, NSError *))arg1;\n- (void)startWiFiAndDeviceDiscovery:(void (^)(_Bool, NSString *, NSString *, NSString *, NSError *))arg1;\n@end\n'
p202
ssS'private/var/staged_system_apps/Maps.app/Maps'
p203
(dp204
S'DirectionsManagerObserver'
p205
S'@protocol DirectionsManagerObserver <NSObject>\n\n@optional\n- (void)directionsManager:(DirectionsManager *)arg1 didChangeChromeTransportType:(long long)arg2;\n- (void)directionsManager:(DirectionsManager *)arg1 displayDirectionsToSelectedRouteWithNavigationOfType:(int)arg2 options:(long long)arg3;\n- (void)directionsManager:(DirectionsManager *)arg1 displayDirectionsToSelectedRouteWithoutNavigationWithOptions:(long long)arg2;\n- (void)directionsManager:(DirectionsManager *)arg1 willStartDirectionsToCurrentRouteWithOptions:(long long)arg2;\n- (void)directionsManager:(DirectionsManager *)arg1 needsPromptToSimulateForOptions:(long long)arg2;\n- (void)directionsManagerDidUpdateUserLocation:(DirectionsManager *)arg1;\n- (void)directionsManagerDidUpdateToStepIndex:(DirectionsManager *)arg1 stepIndex:(NSNumber *)arg2;\n- (void)directionsManagerDidSwitchToNewRoute:(DirectionsManager *)arg1 route:(Route *)arg2;\n- (void)directionsManagerWillClear:(DirectionsManager *)arg1;\n- (void)directionsManagerDidReset:(DirectionsManager *)arg1;\n- (void)directionsManagerWillReset:(DirectionsManager *)arg1;\n- (void)directionsManagerDidCancelLoad:(DirectionsManager *)arg1;\n- (void)directionsManagerDidFailToLoadInitialRoutes:(DirectionsManager *)arg1 withError:(NSError *)arg2;\n- (void)directionsManager:(DirectionsManager *)arg1 didLoadRoute:(Route *)arg2;\n- (void)directionsManager:(DirectionsManager *)arg1 didLoadWaypointsForStart:(DirectionsWaypoint *)arg2 end:(DirectionsWaypoint *)arg3;\n- (void)directionsManagerDidStartLoad:(DirectionsManager *)arg1;\n@end\n'
p206
sS'NMMapsAppXPCInterface'
p207
S'@protocol NMMapsAppXPCInterface\n- (void)updateDroppedPin:(MSPDroppedPin *)arg1;\n- (void)stopDirectionsWithCompletionHandler:(void (^)(void))arg1;\n- (void)updateDirectionsStatusWithCompletionHandler:(void (^)(void))arg1;\n- (void)clearPreviewRouteWithCompletionHandler:(void (^)(void))arg1;\n- (void)selectPreviewRouteAtIndex:(unsigned long long)arg1 completionHandler:(void (^)(void))arg2;\n@end\n'
p208
sS'CustomSearchManagerObserver'
p209
S'@protocol CustomSearchManagerObserver <NSObject>\n- (void)customSearchManager:(CustomSearchManager *)arg1 didModifyCustomSearchResult:(SearchResult *)arg2 coordinateChanged:(_Bool)arg3;\n- (void)customSearchManager:(CustomSearchManager *)arg1 didReplaceCustomSearchResult:(SearchResult *)arg2 animated:(_Bool)arg3 shouldSelectOnMap:(_Bool)arg4 context:(id <NSObject><NSCopying>)arg5;\n@end\n'
p210
ssS'System/Library/PrivateFrameworks/ContinuousDialogManagerService.framework/assistant_cdmd'
p211
(dp212
S'NSXPCListenerDelegate'
p213
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p214
sS'CDMXPCListenerService'
p215
S'@protocol CDMXPCListenerService <NSObject>\n- (void)handleClientAceUpdate:(NSDictionary *)arg1;\n\n@optional\n- (void)handleClientAceRequest:(NSDictionary *)arg1 withReply:(void (^)(NSDictionary *))arg2;\n@end\n'
p216
sS'CDMSetupXPCListenerService'
p217
S'@protocol CDMSetupXPCListenerService <NSObject>\n- (void)invalidateClientFlowCacheWithCompletion:(void (^)(NSError *))arg1;\n- (void)getClientFlowStatusWithReply:(void (^)(NSArray *))arg1;\n- (void)getNLAssetStatusForType:(NSString *)arg1 withReply:(void (^)(NSDictionary *, NSError *))arg2;\n@end\n'
p218
ssS'System/Library/AppRemovalServices/com.apple.tv.appremoval.xpc/com.apple.tv.appremoval'
p219
(dp220
sS'System/Library/PrivateFrameworks/CloudDocs.framework/PlugIns/com.apple.CloudDocs.MobileDocumentsFileProvider.appex/com.apple.CloudDocs.MobileDocumentsFileProvider'
p221
(dp222
sS'System/Library/PrivateFrameworks/MapsSupport.framework/navd'
p223
(dp224
S'GEORecentLocationsXPCInterface'
p225
S'@protocol GEORecentLocationsXPCInterface\n- (void)requestRecentLocationsWithResponse:(void (^)(NSArray *))arg1;\n@end\n'
p226
sS'NSXPCListenerDelegate'
p227
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p228
sS'GEONavdXPCInterface'
p229
S'@protocol GEONavdXPCInterface <NSObject>\n- (void)forceCacheRefresh;\n- (void)didPostUINotification:(unsigned long long)arg1 forDestination:(GEOPlannedDestination *)arg2 fromClient:(GEONavdClientInfo *)arg3;\n- (void)stopMonitoringDestination:(GEOPlannedDestination *)arg1 forClient:(GEONavdClientInfo *)arg2 uuid:(NSUUID *)arg3;\n- (void)onlyPerformLocalUpdatesForPlannedDestination:(GEOPlannedDestination *)arg1 client:(GEONavdClientInfo *)arg2;\n- (void)requestRefreshForPlannedDestination:(GEOPlannedDestination *)arg1 client:(GEONavdClientInfo *)arg2;\n- (void)startMonitoringDestination:(GEOPlannedDestination *)arg1 forClient:(GEONavdClientInfo *)arg2 uuid:(NSUUID *)arg3;\n- (void)statusWithCallback:(void (^)(NSDictionary *))arg1;\n@end\n'
p230
ssS'System/Library/PrivateFrameworks/AppStoreDaemon.framework/appstored.bundle/appstored'
p231
(dp232
S'NSXPCListenerDelegate'
p233
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p234
sS'ASDRequestService'
p235
S'@protocol ASDRequestService\n- (void)submitRequest:(ASDRequest *)arg1 delegate:(id <ASDRequestDelegate>)arg2 withReplyHandler:(void (^)(id <ASDRequestProxy>, NSError *))arg3;\n- (void)cancelAllRequestsWithErrorHandler:(void (^)(NSError *))arg1;\n@end\n'
p236
ssS'System/Library/PrivateFrameworks/iOSDiagnostics.framework/XPCServices/com.apple.DiagnosticsSessionAvailibility.xpc/com.apple.DiagnosticsSessionAvailibility'
p237
(dp238
sS'usr/libexec/rtcreportingd'
p239
(dp240
S'ClientSessionInterface'
p241
S'@protocol ClientSessionInterface\n- (void)setDigestKey:(NSData *)arg1 algorithm:(int)arg2;\n- (void)updateSharedDataForKey:(NSString *)arg1 value:(NSObject *)arg2;\n- (void)updateSharedDataWithDictionary:(NSDictionary *)arg1;\n- (void)sendMessageWithSessionInfo:(NSDictionary *)arg1 userInfo:(NSDictionary *)arg2 category:(unsigned short)arg3 type:(unsigned short)arg4 payload:(NSDictionary *)arg5 reply:(void (^)(NSString *))arg6;\n- (void)uploadLogData:(NSArray *)arg1 completionHandler:(void (^)(_Bool, NSError *))arg2;\n- (void)uploadFileAtPath:(NSURL *)arg1 extensionToken:(char *)arg2 completionHandler:(void (^)(_Bool))arg3;\n- (void)finishSessionGracefully;\n- (void)flushMessagesWithCompletion:(void (^)(NSString *, NSError *))arg1;\n- (void)sendMessageWithDictionary:(NSDictionary *)arg1 reply:(void (^)(NSString *))arg2;\n- (void)fetchDisplayURL:(void (^)(NSString *))arg1;\n- (void)fetchStatesWithUserInfo:(NSDictionary *)arg1 completionHandler:(void (^)(NSArray *))arg2;\n- (void)startConfigWithCompletionHandler:(void (^)(NSArray *))arg1;\n- (void)setSessionInfo:(NSDictionary *)arg1 userInfo:(NSDictionary *)arg2 frameworksToCheck:(NSArray *)arg3 hasAggregationBlock:(_Bool)arg4;\n@end\n'
p242
ssS'Applications/ScreenshotServicesService.app/ScreenshotServicesService'
p243
(dp244
sS'usr/libexec/mobileactivationd'
p245
(dp246
sS'System/Library/PrivateFrameworks/CloudDocsUI.framework/PlugIns/com.apple.CloudDocsUI.CloudSharing.appex/com.apple.CloudDocsUI.CloudSharing'
p247
(dp248
sS'System/Library/PrivateFrameworks/NanoTimeKitCompanion.framework/nanotimekitcompaniond'
p249
(dp250
S'NTKComplicationStoreServer'
p251
S'@protocol NTKComplicationStoreServer <NSObject>\n- (void)removeComplicationForClientIdentifier:(NSString *)arg1;\n- (void)updateLocalizableSampleDataTemplate:(CLKComplicationTemplate *)arg1 forClientIdentifier:(NSString *)arg2 family:(long long)arg3;\n- (void)registerForCollectionIdentifier:(NSString *)arg1 deviceUUID:(NSUUID *)arg2 withSeqId:(NSNumber *)arg3;\n@end\n'
p252
sS'NTKDComplicationStoreObserver'
p253
S'@protocol NTKDComplicationStoreObserver <NSObject>\n- (void)complicationStore:(NTKDComplicationStore *)arg1 didRemoveComplicationForClientIdentifier:(NSString *)arg2 seqId:(NSNumber *)arg3;\n- (void)complicationStore:(NTKDComplicationStore *)arg1 didUpdateLocalizableSampleTemplate:(CLKComplicationTemplate *)arg2 forClientIdentifier:(NSString *)arg3 family:(long long)arg4 seqId:(NSNumber *)arg5;\n- (void)complicationStore:(NTKDComplicationStore *)arg1 loadFullCollectionWithLocalizableSampleTemplates:(NSDictionary *)arg2 seqId:(NSNumber *)arg3;\n@end\n'
p254
sS'NTKDFaceSnapshotControllerObserver'
p255
S'@protocol NTKDFaceSnapshotControllerObserver <NSObject>\n- (void)faceSnapshotChangedForKey:(NSString *)arg1;\n@end\n'
p256
sS'NTKCollectionServer'
p257
S'@protocol NTKCollectionServer <NSObject>\n- (void)flushUpdatesWithIdentifier:(NSString *)arg1;\n- (void)resetCollection;\n- (void)upgradeFace:(NTKFace *)arg1 forUUID:(NSUUID *)arg2;\n- (void)removeFaceForUUID:(NSUUID *)arg1;\n- (void)addFace:(NTKFace *)arg1 forUUID:(NSUUID *)arg2;\n- (void)updateFaceForUUID:(NSUUID *)arg1 withResourceDirectory:(NSString *)arg2;\n- (void)updateFaceForUUID:(NSUUID *)arg1 withConfiguration:(NTKFaceConfiguration *)arg2;\n- (void)setOrderedFaceUUIDs:(NSArray *)arg1;\n- (void)setSelectedFaceUUID:(NSUUID *)arg1;\n- (void)registerForCollectionIdentifier:(NSString *)arg1 deviceUUID:(NSUUID *)arg2 withSeqId:(NSNumber *)arg3;\n@end\n'
p258
sS'NTKDCollectionStoreObserver'
p259
S'@protocol NTKDCollectionStoreObserver <NSObject>\n- (void)collectionStore:(NTKDCollectionStore *)arg1 didUpgradeFace:(NTKFace *)arg2 forUUID:(NSUUID *)arg3 seqId:(NSNumber *)arg4;\n- (void)collectionStore:(NTKDCollectionStore *)arg1 didRemoveFaceOfStyle:(long long)arg2 forUUID:(NSUUID *)arg3 seqId:(NSNumber *)arg4 acknowledge:(void (^)(void))arg5;\n- (void)collectionStore:(NTKDCollectionStore *)arg1 didAddFace:(NTKFace *)arg2 forUUID:(NSUUID *)arg3 seqId:(NSNumber *)arg4;\n- (void)collectionStore:(NTKDCollectionStore *)arg1 didUpdateFaceForUUID:(NSUUID *)arg2 withResourceDirectory:(NSString *)arg3 seqId:(NSNumber *)arg4 acknowledge:(void (^)(void))arg5;\n- (void)collectionStore:(NTKDCollectionStore *)arg1 didUpdateFaceForUUID:(NSUUID *)arg2 withConfiguration:(NTKFaceConfiguration *)arg3 seqId:(NSNumber *)arg4;\n- (void)collectionStore:(NTKDCollectionStore *)arg1 didUpdateOrderedUUIDs:(NSArray *)arg2 seqId:(NSNumber *)arg3;\n- (void)collectionStore:(NTKDCollectionStore *)arg1 didUpdateSelectedUUID:(NSUUID *)arg2 seqId:(NSNumber *)arg3;\n- (void)collectionStore:(NTKDCollectionStore *)arg1 loadOrderedUUIDs:(NSArray *)arg2 selectedUUID:(NSUUID *)arg3 facesByUUID:(NSDictionary *)arg4 seqId:(NSNumber *)arg5 acknowledge:(void (^)(void))arg6;\n\n@optional\n- (void)resetCollectionStore:(NTKDCollectionStore *)arg1;\n@end\n'
p260
ssS'System/Library/PrivateFrameworks/NewsServices.framework/PlugIns/NewsArticleViewer.appex/NewsArticleViewer'
p261
(dp262
sS'System/Library/PrivateFrameworks/CoreRecents.framework/recentsd'
p263
(dp264
S'NSXPCListenerDelegate'
p265
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p266
ssS'System/Library/PrivateFrameworks/TVRemoteCore.framework/XPCServices/TVRemoteConnectionService.xpc/TVRemoteConnectionService'
p267
(dp268
S'NSXPCListenerDelegate'
p269
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p270
sS'TVRDaemonServerProtocol'
p271
S'@protocol TVRDaemonServerProtocol <NSObject>\n- (void)stopVoiceRecordingForDeviceWithIdentifier:(NSString *)arg1;\n- (void)startVoiceRecordingForDeviceWithIdentifier:(NSString *)arg1;\n- (void)cancelAuthenticationChallengeForDeviceWithIdentifier:(NSString *)arg1;\n- (void)sendLocallyEnteredCode:(NSString *)arg1 toDeviceWithIdentifier:(NSString *)arg2;\n- (void)sendTextInputReturnKeyToDeviceWithIdentifier:(NSString *)arg1;\n- (void)sendTextInputText:(NSString *)arg1 toDeviceWithIdentifier:(NSString *)arg2;\n- (void)getTextInputTextAndAttributesForDeviceWithIdentifier:(NSString *)arg1 withCompletion:(void (^)(NSString *, TVRCKeyboardAttributes *, NSError *))arg2;\n- (void)setVoiceRecorderAutomaticRecording:(_Bool)arg1 forDeviceWithIdentifier:(NSString *)arg2;\n- (void)disconnectFromDeviceWithIdentifier:(NSString *)arg1;\n- (void)sendGameControllerEvent:(TVRCGameControllerEvent *)arg1 toDeviceWithIdentifier:(NSString *)arg2;\n- (void)sendTouchEvent:(TVRCTouchEvent *)arg1 toDeviceWithIdentifier:(NSString *)arg2;\n- (void)sendButtonEvent:(TVRCButtonEvent *)arg1 toDeviceWithIdentifier:(NSString *)arg2;\n- (void)getDeviceNameForIdentifier:(NSString *)arg1 withCompletion:(void (^)(NSString *, NSError *))arg2;\n- (void)getSupportedButtonsForDeviceWithIdentifier:(NSString *)arg1 withCompletion:(void (^)(NSSet *, NSError *))arg2;\n- (void)connectToDeviceWithIdentifier:(NSString *)arg1;\n- (void)getPreferredDeviceIdentifier:(void (^)(NSString *))arg1;\n- (void)getAllDevices:(void (^)(NSArray *, NSError *))arg1;\n@end\n'
p272
sS'TVRCDeviceDelegate'
p273
S'@protocol TVRCDeviceDelegate <NSObject>\n\n@optional\n- (void)device:(TVRCDevice *)arg1 removedSupportedButtons:(NSSet *)arg2 added:(NSSet *)arg3;\n- (void)deviceNameChanged:(TVRCDevice *)arg1;\n- (void)device:(TVRCDevice *)arg1 disconnectedForReason:(long long)arg2 error:(NSError *)arg3;\n- (void)deviceConnected:(TVRCDevice *)arg1;\n- (void)device:(TVRCDevice *)arg1 encounteredAuthenticationChallenge:(TVRCDeviceAuthenticationChallenge *)arg2;\n- (_Bool)deviceShouldAllowConnectionAuthentication:(TVRCDevice *)arg1;\n- (void)deviceBeganConnecting:(TVRCDevice *)arg1;\n@end\n'
p274
sS'TVRDaemonClientProtocol'
p275
S'@protocol TVRDaemonClientProtocol <NSObject>\n\n@optional\n- (void)connectedDeviceWithInfo:(TVRDeviceInfo *)arg1 encounteredAuthenticationChallegeOfType:(long long)arg2;\n- (void)connectedDeviceWithInfo:(TVRDeviceInfo *)arg1 updatedTextAttributes:(TVRCKeyboardAttributes *)arg2;\n- (void)connectedDeviceWithInfo:(TVRDeviceInfo *)arg1 updatedInputText:(NSString *)arg2;\n- (void)connectedDeviceWithInfoEndedTextEditing:(TVRDeviceInfo *)arg1;\n- (void)connectedDeviceWithInfo:(TVRDeviceInfo *)arg1 beganTextEditingWithAttributes:(TVRCKeyboardAttributes *)arg2;\n- (void)connectedDeviceWithInfo:(TVRDeviceInfo *)arg1 removedSupportedButtons:(NSSet *)arg2 added:(NSSet *)arg3;\n- (void)connectedDeviceWithInfo:(TVRDeviceInfo *)arg1 changedDeviceName:(NSString *)arg2;\n- (void)connectionDisconnectedFromDeviceWithInfo:(TVRDeviceInfo *)arg1 forReason:(long long)arg2 error:(NSError *)arg3;\n- (void)connectedToDeviceWithInfo:(TVRDeviceInfo *)arg1;\n- (void)connectionRequestStartedForDeviceWithInfo:(TVRDeviceInfo *)arg1;\n- (void)connectionDidUpdateDevices:(NSArray *)arg1;\n- (void)connectionDidUpdateNetworkState:(unsigned long long)arg1;\n@end\n'
p276
sS'TVRCDeviceQueryDelegate'
p277
S'@protocol TVRCDeviceQueryDelegate <NSObject>\n\n@optional\n- (void)deviceQueryDidUpdateDevices:(TVRCDeviceQuery *)arg1;\n@end\n'
p278
sS'TVRCKeyboardControllerDelegate'
p279
S'@protocol TVRCKeyboardControllerDelegate <NSObject>\n\n@optional\n- (void)keyboardController:(TVRCKeyboardController *)arg1 didUpdateAttributes:(TVRCKeyboardAttributes *)arg2;\n- (void)keyboardController:(TVRCKeyboardController *)arg1 didUpdateText:(NSString *)arg2;\n- (void)keyboardControllerEndedTextEditing:(TVRCKeyboardController *)arg1;\n- (void)keyboardController:(TVRCKeyboardController *)arg1 beganTextEditingWithAttributes:(TVRCKeyboardAttributes *)arg2;\n@end\n'
p280
ssS'System/Library/PrivateFrameworks/BarcodeSupport.framework/XPCServices/com.apple.BarcodeSupport.BarcodeNotificationService.xpc/com.apple.BarcodeSupport.BarcodeNotificationService'
p281
(dp282
sS'System/Library/Frameworks/AVKit.framework/XPCServices/SharedPreferences.xpc/SharedPreferences'
p283
(dp284
sS'System/Library/PrivateFrameworks/AssistantServices.framework/XPCServices/com.apple.siri.embeddedspeech.xpc/com.apple.siri.embeddedspeech'
p285
(dp286
S'_EARSpeechRecognitionResultStream'
p287
S'@protocol _EARSpeechRecognitionResultStream <NSObject>\n- (void)speechRecognizer:(_EARSpeechRecognizer *)arg1 didRecognizeFinalResults:(NSArray *)arg2;\n- (void)speechRecognizer:(_EARSpeechRecognizer *)arg1 didFinishRecognitionWithError:(NSError *)arg2;\n- (void)speechRecognizer:(_EARSpeechRecognizer *)arg1 didRecognizePartialResult:(_EARSpeechRecognitionResult *)arg2;\n\n@optional\n- (void)speechRecognizer:(_EARSpeechRecognizer *)arg1 didProduceEndpointFeaturesWithWordCount:(long long)arg2 trailingSilenceDuration:(long long)arg3 eosLikelihood:(double)arg4 pauseCounts:(NSArray *)arg5 silencePosterior:(double)arg6 processedAudioDurationInMilliseconds:(long long)arg7;\n- (void)speechRecognizer:(_EARSpeechRecognizer *)arg1 didRecognizeRawEagerRecognitionCandidate:(_EARSpeechRecognition *)arg2;\n- (void)speechRecognizer:(_EARSpeechRecognizer *)arg1 didProcessAudioDuration:(double)arg2;\n- (void)speechRecognizer:(_EARSpeechRecognizer *)arg1 didRecognizeFinalResultPackage:(_EARSpeechRecognitionResultPackage *)arg2;\n- (void)speechRecognizer:(_EARSpeechRecognizer *)arg1 didRecognizeFinalResults:(NSArray *)arg2 tokenSausage:(NSArray *)arg3 nBestChoices:(NSArray *)arg4;\n@end\n'
p288
sS'AFSpeechService'
p289
S'@protocol AFSpeechService <NSObject>\n- (oneway void)runAdaptationRecipeEvaluation:(NSDictionary *)arg1 localSpeechDESRecord:(SiriCoreLocalSpeechDESRecord *)arg2 attachments:(NSArray *)arg3 completion:(void (^)(NSDictionary *, NSData *, NSError *))arg4;\n- (oneway void)fetchUserDataForLanguage:(NSString *)arg1 completion:(void (^)(SiriCoreLocalSpeechUserData *))arg2;\n- (oneway void)fetchAssetsForLanguage:(NSString *)arg1 completion:(void (^)(NSString *, NSError *))arg2;\n- (oneway void)getOfflineDictationStatusIgnoringCache:(_Bool)arg1 withCompletion:(void (^)(NSDictionary *, NSError *))arg2;\n- (oneway void)updateSpeechProfileWithLanguage:(NSString *)arg1 existingProfile:(NSData *)arg2 existingAssetPath:(NSString *)arg3 completion:(void (^)(NSData *, NSString *, NSError *))arg4;\n- (oneway void)createSpeechProfileWithLanguage:(NSString *)arg1 existingProfile:(NSData *)arg2 userData:(SiriCoreLocalSpeechUserData *)arg3 completion:(void (^)(NSData *, NSError *))arg4;\n- (oneway void)createSpeechProfileWithLanguage:(NSString *)arg1 JSONData:(NSData *)arg2 completion:(void (^)(NSData *, NSError *))arg3;\n- (oneway void)finishAudio;\n- (oneway void)addAudioPacket:(NSData *)arg1;\n- (oneway void)startSpeechRecognitionWithLanguage:(NSString *)arg1 task:(NSString *)arg2 context:(NSArray *)arg3 profile:(NSData *)arg4 narrowband:(_Bool)arg5 detectUtterances:(_Bool)arg6 censorSpeech:(_Bool)arg7 maximumRecognitionDuration:(double)arg8 farField:(_Bool)arg9 overrides:(NSDictionary *)arg10 modelOverrideURL:(NSURL *)arg11 didStartHandler:(void (^)(NSString *, NSError *))arg12;\n- (oneway void)startRequestActivityWithCompletion:(void (^)(void))arg1;\n- (oneway void)preheatSpeechRecognitionWithLanguage:(NSString *)arg1;\n@end\n'
p290
ssS'usr/sbin/wirelessproxd'
p291
(dp292
S'NSXPCListenerDelegate'
p293
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p294
sS'WPXPCDaemonProtocol'
p295
S'@protocol WPXPCDaemonProtocol <NSObject>\n\n@optional\n- (void)disconnectFromLEPipePeer:(NSUUID *)arg1;\n- (void)sendDatatoLePipe:(NSData *)arg1 forPeer:(NSUUID *)arg2;\n- (void)unregisterEndpoint:(NSString *)arg1;\n- (void)registerEndpoint:(NSString *)arg1;\n- (void)enableBubbleTestMode;\n- (void)dumpDaemonState;\n- (void)registerForAnyScanResults:(_Bool)arg1;\n- (void)disableScanning;\n- (void)getPowerLogStats:(void (^)(NSDictionary *))arg1;\n- (void)enableTestMode;\n- (void)registerWithDaemon:(NSString *)arg1 forProcess:(NSString *)arg2 machName:(NSString *)arg3 shouldHoldVoucherForConnections:(_Bool)arg4;\n- (void)listenToBandwidthNotifications;\n- (void)checkAllowDuplicates:(void (^)(_Bool))arg1;\n- (void)getAllTrackedZones;\n- (void)stopTrackingAllZones;\n- (void)stopTrackingZones:(NSArray *)arg1;\n- (void)startTrackingZone:(WPZoneTrackingRequest *)arg1;\n- (void)sendDataToCharacteristic:(WPCharacteristic *)arg1 inService:(NSString *)arg2 forPeer:(NSUUID *)arg3;\n- (void)shouldSubscribe:(_Bool)arg1 toPeer:(NSUUID *)arg2 withCharacteristic:(NSString *)arg3 inService:(NSString *)arg4;\n- (void)discoverCharacteristicsAndServices:(NSDictionary *)arg1 forPeripheral:(NSUUID *)arg2;\n- (void)disconnectFromPeer:(NSUUID *)arg1;\n- (void)connectToPeer:(NSUUID *)arg1 withOptions:(NSDictionary *)arg2;\n- (void)connectToPeer:(NSUUID *)arg1;\n- (void)stopTrackingPeerWithRequest:(WPPeerTrackingRequest *)arg1;\n- (void)startTrackingPeerWithRequest:(WPPeerTrackingRequest *)arg1;\n- (void)stopScanning:(WPScanRequest *)arg1;\n- (void)startScanning:(WPScanRequest *)arg1;\n- (void)stopAdvertising:(WPAdvertisingRequest *)arg1;\n- (void)startAdvertising:(WPAdvertisingRequest *)arg1;\n- (void)addCharacteristic:(WPCharacteristic *)arg1 forService:(NSUUID *)arg2;\n@end\n'
p296
ssS'usr/libexec/fmflocatord'
p297
(dp298
S'NSXPCListenerDelegate'
p299
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p300
ssS'usr/libexec/resourcegrabberd'
p301
(dp302
S'IDSServiceDelegate'
p303
S'@protocol IDSServiceDelegate <NSObject>\n\n@optional\n- (void)service:(IDSService *)arg1 didSwitchActivePairedDevice:(IDSDevice *)arg2 acknowledgementBlock:(void (^)(void))arg3;\n- (void)serviceAllowedTrafficClassifiersDidReset:(IDSService *)arg1;\n- (void)serviceSpaceDidBecomeAvailable:(IDSService *)arg1;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 inviteReceivedForSession:(IDSSession *)arg3 fromID:(NSString *)arg4 withContext:(NSData *)arg5;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 inviteReceivedForSession:(IDSSession *)arg3 fromID:(NSString *)arg4 withOptions:(NSDictionary *)arg5;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 inviteReceivedForSession:(IDSSession *)arg3 fromID:(NSString *)arg4;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 identifier:(NSString *)arg3 hasBeenDeliveredWithContext:(id)arg4;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 identifier:(NSString *)arg3 didSendWithSuccess:(_Bool)arg4 error:(NSError *)arg5 context:(IDSMessageContext *)arg6;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 identifier:(NSString *)arg3 didSendWithSuccess:(_Bool)arg4 error:(NSError *)arg5;\n- (void)service:(IDSService *)arg1 connectedDevicesChanged:(NSArray *)arg2;\n- (void)service:(IDSService *)arg1 nearbyDevicesChanged:(NSArray *)arg2;\n- (void)service:(IDSService *)arg1 devicesChanged:(NSArray *)arg2;\n- (void)service:(IDSService *)arg1 activeAccountsChanged:(NSSet *)arg2;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingResourceAtURL:(NSURL *)arg3 metadata:(NSDictionary *)arg4 fromID:(NSString *)arg5 context:(IDSMessageContext *)arg6;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingResourceAtURL:(NSURL *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingUnhandledProtobuf:(IDSProtobuf *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingData:(NSData *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingMessage:(NSDictionary *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;\n@end\n'
p304
sS'NSXPCListenerDelegate'
p305
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p306
sS'NanoResourceGrabberIDSXPC'
p307
S'@protocol NanoResourceGrabberIDSXPC <NSObject>\n- (void)xpcGetIconForBundleID:(NSString *)arg1 iconVariant:(int)arg2 withTimeout:(double)arg3 reply:(void (^)(NSData *))arg4;\n@end\n'
p308
sS'NRGResourceRequestProtocol'
p309
S'@protocol NRGResourceRequestProtocol\n- (NSString *)sendProtobufRequest:(PBRequest *)arg1 type:(unsigned short)arg2 priority:(long long)arg3 expectsResponse:(_Bool)arg4 requestHandler:(void (^)(NSString *, NSError *))arg5 errorHandler:(void (^)(NSError *))arg6 withTimeout:(double)arg7;\n@end\n'
p310
ssS'usr/libexec/networkserviceproxy'
p311
(dp312
sS'System/Library/Frameworks/Social.framework/XPCServices/com.apple.twitter.xpc/com.apple.twitter'
p313
(dp314
sS'System/Library/PrivateFrameworks/NewsServices.framework/nanonewscd'
p315
(dp316
sS'usr/libexec/gamed'
p317
(dp318
S'GKPreferencesDelegate'
p319
S'@protocol GKPreferencesDelegate <NSObject>\n\n@optional\n- (void)gameCenterDidBecomeRestricted;\n@end\n'
p320
sS'GKNATObserverDelegate'
p321
S'@protocol GKNATObserverDelegate\n\n@optional\n- (void)triggerInterfaceChange;\n- (void)NATTypeDictionaryUpdated:(NSDictionary *)arg1;\n- (void)NATTypeDidChange:(int)arg1;\n@end\n'
p322
sS'NSXPCListenerDelegate'
p323
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p324
sS'GKLockStatusObserver'
p325
S'@protocol GKLockStatusObserver <NSObject>\n- (void)lockStatusDidChange;\n@end\n'
p326
sS'_GKStateMachineDelegate'
p327
S'@protocol _GKStateMachineDelegate <NSObject>\n\n@optional\n- (NSString *)missingTransitionFromState:(NSString *)arg1 toState:(NSString *)arg2;\n- (void)stateDidChange;\n- (void)stateWillChange;\n@end\n'
p328
sS'APSConnectionDelegate'
p329
S'@protocol APSConnectionDelegate <NSObject>\n- (void)connection:(APSConnection *)arg1 didReceivePublicToken:(NSData *)arg2;\n\n@optional\n- (void)connectionDidReconnect:(APSConnection *)arg1;\n- (void)connection:(APSConnection *)arg1 didChangeConnectedStatus:(_Bool)arg2;\n- (void)connection:(APSConnection *)arg1 didFailToSendOutgoingMessage:(APSOutgoingMessage *)arg2 error:(NSError *)arg3;\n- (void)connection:(APSConnection *)arg1 didSendOutgoingMessage:(APSOutgoingMessage *)arg2;\n- (void)connection:(APSConnection *)arg1 didReceiveMessageForTopic:(NSString *)arg2 userInfo:(NSDictionary *)arg3;\n- (void)connection:(APSConnection *)arg1 didReceiveIncomingMessage:(APSIncomingMessage *)arg2;\n- (void)connection:(APSConnection *)arg1 didReceiveToken:(NSData *)arg2 forTopic:(NSString *)arg3 identifier:(NSString *)arg4;\n@end\n'
p330
sS'GKClientProtocol'
p331
S'@protocol GKClientProtocol <NSObject>\n- (oneway void)setLogBits:(int)arg1;\n- (oneway void)refreshContentsForDataType:(unsigned int)arg1 userInfo:(NSDictionary *)arg2;\n- (oneway void)setBadgeCount:(unsigned long long)arg1 forType:(unsigned long long)arg2;\n- (oneway void)achievementSelected:(GKAchievementInternal *)arg1;\n- (oneway void)scoreSelected:(GKScoreInternal *)arg1;\n- (oneway void)challengeCompleted:(GKChallengeInternal *)arg1;\n- (oneway void)challengeReceived:(GKChallengeInternal *)arg1;\n- (oneway void)completedChallengeSelected:(GKChallengeInternal *)arg1;\n- (oneway void)receivedChallengeSelected:(GKChallengeInternal *)arg1;\n- (oneway void)fetchTurnBasedData;\n- (oneway void)session:(GKGameSession *)arg1 didReceiveMessage:(NSString *)arg2 withData:(NSData *)arg3 fromPlayer:(GKCloudPlayer *)arg4;\n- (oneway void)session:(GKGameSession *)arg1 didReceiveData:(NSData *)arg2 fromPlayer:(GKCloudPlayer *)arg3;\n- (oneway void)session:(GKGameSession *)arg1 player:(GKCloudPlayer *)arg2 didSaveData:(NSData *)arg3;\n- (oneway void)session:(GKGameSession *)arg1 player:(GKCloudPlayer *)arg2 didChangeConnectionState:(long long)arg3;\n- (oneway void)session:(GKGameSession *)arg1 removedPlayer:(GKCloudPlayer *)arg2;\n- (oneway void)session:(GKGameSession *)arg1 addedPlayer:(GKCloudPlayer *)arg2;\n- (oneway void)didReceiveData:(NSData *)arg1 reliably:(_Bool)arg2 forRecipients:(NSArray *)arg3 fromSender:(NSString *)arg4;\n- (oneway void)didDisconnectFromParticipantWithID:(NSString *)arg1;\n- (oneway void)didConnectToParticipantWithID:(NSString *)arg1;\n- (oneway void)relayPushNotification:(NSDictionary *)arg1;\n- (oneway void)cancelGameInvite:(NSString *)arg1;\n- (oneway void)declineInviteWithNotification:(NSDictionary *)arg1;\n- (oneway void)acceptInviteWithNotification:(NSDictionary *)arg1;\n- (oneway void)acceptMultiplayerGameInvite;\n- (oneway void)respondedToNearbyInvite:(NSDictionary *)arg1;\n- (oneway void)friendRequestSelected:(GKFriendRequestInternal *)arg1;\n- (oneway void)completedOptimisticAuthenticationWithResponse:(GKAuthenticateResponse *)arg1 error:(NSError *)arg2;\n- (oneway void)authenticatedPlayersDidChange:(NSArray *)arg1 reply:(void (^)(void))arg2;\n- (oneway void)setCurrentGame:(GKGameInternal *)arg1 serverEnvironment:(long long)arg2 reply:(void (^)(void))arg3;\n- (oneway void)setPreferencesValues:(NSDictionary *)arg1;\n- (oneway void)resetNetworkActivity;\n- (oneway void)endNetworkActivity;\n- (oneway void)beginNetworkActivity;\n@end\n'
p332
ssS'Applications/MailCompositionService.app/MailCompositionService'
p333
(dp334
sS'System/Library/PrivateFrameworks/VoiceServices.framework/Support/voiced'
p335
(dp336
S'NSXPCListenerDelegate'
p337
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p338
sS'VSSpeechXPCServiceProtocol'
p339
S'@protocol VSSpeechXPCServiceProtocol <NSObject>\n- (oneway void)getLogToFile:(void (^)(_Bool))arg1;\n- (oneway void)setLogToFile:(_Bool)arg1;\n- (oneway void)getVoiceInfoForLanguageCode:(NSString *)arg1 footprint:(long long)arg2 gender:(long long)arg3 type:(long long)arg4 reply:(void (^)(VSVoiceAsset *))arg5;\n- (oneway void)getVoiceResourceForLanguage:(NSString *)arg1 reply:(void (^)(VSVoiceResourceAsset *))arg2;\n- (oneway void)getAutoDownloadedVoiceAssets:(void (^)(NSArray *))arg1;\n- (oneway void)setAutoDownloadedVoiceAssets:(NSArray *)arg1;\n- (oneway void)getLocalVoiceResourcesReply:(void (^)(NSArray *, NSError *))arg1;\n- (oneway void)getLocalVoicesReply:(void (^)(NSArray *, NSError *))arg1;\n- (oneway void)cleanUnusedAssets:(void (^)(NSError *))arg1;\n- (oneway void)getSpeechIsActiveForConnectionReply:(void (^)(_Bool))arg1;\n- (oneway void)getSpeechIsActiveReply:(void (^)(_Bool))arg1;\n- (oneway void)getFootprintsForVoiceName:(NSString *)arg1 languageCode:(NSString *)arg2 reply:(void (^)(NSArray *))arg3;\n- (oneway void)getVoiceNamesForLanguage:(NSString *)arg1 reply:(void (^)(NSArray *))arg2;\n- (oneway void)stopPresynthesizedAudioRequest;\n- (oneway void)startPresynthesizedAudioRequest:(VSPresynthesizedAudioRequest *)arg1;\n- (oneway void)stopSpeechRequestAtMark:(long long)arg1;\n- (oneway void)continueSpeechRequest;\n- (oneway void)pauseSpeechRequestAtMark:(long long)arg1;\n- (oneway void)startSynthesisRequest:(VSSpeechRequest *)arg1;\n- (oneway void)startSpeechRequest:(VSSpeechRequest *)arg1;\n- (oneway void)prewarmIfNeededWithRequest:(VSSpeechRequest *)arg1;\n- (oneway void)updateWithConnectionIdentifier:(NSString *)arg1;\n@end\n'
p340
sS'VSSpeechServiceDelegate'
p341
S'@protocol VSSpeechServiceDelegate <NSObject>\n- (oneway void)presynthesizedAudioRequestSuccessWithInstrumentMetrics:(VSInstrumentMetrics *)arg1 error:(NSError *)arg2;\n- (oneway void)presynthesizedAudioRequestDidStopAtEnd:(_Bool)arg1 error:(NSError *)arg2;\n- (oneway void)presynthesizedAudioRequestDidStart;\n- (oneway void)synthesisRequestDidFinishWithInstrumentMetrics:(VSInstrumentMetrics *)arg1 error:(NSError *)arg2;\n- (oneway void)speechRequestDidReceiveTimingInfo:(NSArray *)arg1;\n- (oneway void)speechRequestSuccessWithInstrumentMetrics:(VSInstrumentMetrics *)arg1;\n- (oneway void)speechRequestDidStopWithSuccess:(_Bool)arg1 phonemesSpoken:(NSString *)arg2 error:(NSError *)arg3;\n- (oneway void)speechRequestMark:(long long)arg1 didStartForRange:(struct _NSRange)arg2;\n- (oneway void)speechRequestDidContinue;\n- (oneway void)speechRequestDidPause;\n- (oneway void)speechRequestDidStart;\n@end\n'
p342
ssS'System/Library/PrivateFrameworks/AssistantServices.framework/XPCServices/com.apple.siri.ClientFlow.ClientScripter.xpc/com.apple.siri.ClientFlow.ClientScripter'
p343
(dp344
S'CFCommandProcessing'
p345
S'@protocol CFCommandProcessing <NSObject>\n- (void)isDeviceLockedWithPasscodeWithCompletion:(void (^)(_Bool))arg1;\n- (void)handleCommand:(SABaseCommand *)arg1 reply:(void (^)(SABaseCommand *))arg2;\n- (void)handleOneWayCommand:(SABaseCommand *)arg1;\n@end\n'
p346
ssS'System/Library/Frameworks/VideoSubscriberAccount.framework/XPCServices/com.apple.VideoSubscriberAccount.DeveloperService.xpc/com.apple.VideoSubscriberAccount.DeveloperService'
p347
(dp348
sS'System/Library/PrivateFrameworks/NanoPreferencesSync.framework/nanoprefsyncd'
p349
(dp350
S'IDSServiceDelegate'
p351
S'@protocol IDSServiceDelegate <NSObject>\n\n@optional\n- (void)service:(IDSService *)arg1 didSwitchActivePairedDevice:(IDSDevice *)arg2 acknowledgementBlock:(void (^)(void))arg3;\n- (void)serviceAllowedTrafficClassifiersDidReset:(IDSService *)arg1;\n- (void)serviceSpaceDidBecomeAvailable:(IDSService *)arg1;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 inviteReceivedForSession:(IDSSession *)arg3 fromID:(NSString *)arg4 withContext:(NSData *)arg5;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 inviteReceivedForSession:(IDSSession *)arg3 fromID:(NSString *)arg4 withOptions:(NSDictionary *)arg5;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 inviteReceivedForSession:(IDSSession *)arg3 fromID:(NSString *)arg4;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 identifier:(NSString *)arg3 hasBeenDeliveredWithContext:(id)arg4;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 identifier:(NSString *)arg3 didSendWithSuccess:(_Bool)arg4 error:(NSError *)arg5 context:(IDSMessageContext *)arg6;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 identifier:(NSString *)arg3 didSendWithSuccess:(_Bool)arg4 error:(NSError *)arg5;\n- (void)service:(IDSService *)arg1 connectedDevicesChanged:(NSArray *)arg2;\n- (void)service:(IDSService *)arg1 nearbyDevicesChanged:(NSArray *)arg2;\n- (void)service:(IDSService *)arg1 devicesChanged:(NSArray *)arg2;\n- (void)service:(IDSService *)arg1 activeAccountsChanged:(NSSet *)arg2;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingResourceAtURL:(NSURL *)arg3 metadata:(NSDictionary *)arg4 fromID:(NSString *)arg5 context:(IDSMessageContext *)arg6;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingResourceAtURL:(NSURL *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingUnhandledProtobuf:(IDSProtobuf *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingData:(NSData *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingMessage:(NSDictionary *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;\n@end\n'
p352
sS'NPSServerProtocol'
p353
S'@protocol NPSServerProtocol <NSObject>\n- (void)synchronizeUserDefaultsDomain:(NSString *)arg1 keys:(NSSet *)arg2 container:(NSString *)arg3 appGroupContainer:(NSString *)arg4 cloudEnabled:(_Bool)arg5;\n@end\n'
p354
sS'PSYSyncCoordinatorDelegate'
p355
S'@protocol PSYSyncCoordinatorDelegate <NSObject>\n\n@optional\n- (void)syncCoordinatorDidReceiveStartSyncCommand:(PSYSyncCoordinator *)arg1;\n- (void)supportsMigrationSync;\n- (void)syncCoordinatorDidChangeSyncRestriction:(PSYSyncCoordinator *)arg1;\n- (void)syncCoordinator:(PSYSyncCoordinator *)arg1 didInvalidateSyncSession:(PSYServiceSyncSession *)arg2;\n- (void)syncCoordinator:(PSYSyncCoordinator *)arg1 beginSyncSession:(PSYServiceSyncSession *)arg2;\n@end\n'
p356
sS'NSXPCListenerDelegate'
p357
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p358
ssS'System/Library/PrivateFrameworks/DistributedEvaluation.framework/XPCServices/com.apple.siri-distributed-evaluation.xpc/com.apple.siri-distributed-evaluation'
p359
(dp360
S'DESService'
p361
S'@protocol DESService <NSObject>\n- (void)runLiveEvaluationForAllBundlesWithBaseURL:(NSURL *)arg1 localeIdentifier:(NSString *)arg2 completion:(void (^)(NSError *))arg3;\n- (void)runLiveEvaluationForBundleId:(NSString *)arg1 baseURL:(NSURL *)arg2 localeIdentifier:(NSString *)arg3 completion:(void (^)(NSError *))arg4;\n- (void)runEvaluationForBundleId:(NSString *)arg1 recipe:(NSDictionary *)arg2 recordUUID:(NSUUID *)arg3 attachments:(NSArray *)arg4 completion:(void (^)(NSDictionary *, NSError *))arg5;\n- (void)runEvaluationForBundleId:(NSString *)arg1 recipe:(NSDictionary *)arg2 recordInfo:(NSDictionary *)arg3 recordData:(NSData *)arg4 attachments:(NSArray *)arg5 completion:(void (^)(NSDictionary *, NSError *))arg6;\n- (void)deleteSavedRecordForBundleId:(NSString *)arg1 identfier:(NSUUID *)arg2 completion:(void (^)(NSError *))arg3;\n- (void)deleteAllSavedRecordsForBundleId:(NSString *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)fetchSavedRecordInfoForBundleId:(NSString *)arg1 completion:(void (^)(NSDictionary *, NSError *))arg2;\n- (void)saveRecordForBundleId:(NSString *)arg1 data:(NSData *)arg2 recordInfo:(NSDictionary *)arg3 completion:(void (^)(NSUUID *, NSError *))arg4;\n- (void)fetchInstalledBundlesIdsWithCompletion:(void (^)(NSArray *, NSError *))arg1;\n@end\n'
p362
ssS'System/Library/PrivateFrameworks/CompanionCamera.framework/Support/companioncamerad'
p363
(dp364
S'CCCameraServerProtocol'
p365
S'@protocol CCCameraServerProtocol\n- (oneway void)xpc_showingLivePreviewDidChange:(_Bool)arg1;\n- (oneway void)xpc_irisModeDidChange:(int)arg1;\n- (oneway void)xpc_hdrModeDidChange:(int)arg1;\n- (oneway void)xpc_flashModeDidChange:(int)arg1;\n- (oneway void)xpc_captureDeviceDidChange;\n- (oneway void)xpc_didUpdateShallowDepthOfFieldStatus:(int)arg1;\n- (oneway void)xpc_zoomChanged:(float)arg1;\n- (oneway void)xpc_countdownCanceled;\n- (oneway void)xpc_orientationChanged:(int)arg1;\n- (oneway void)xpc_captureModeSelected:(int)arg1;\n- (oneway void)xpc_burstCaptureDidStop;\n- (oneway void)xpc_burstCaptureNumberOfPhotosDidChange:(unsigned long long)arg1;\n- (oneway void)xpc_burstCaptureWillStart;\n- (oneway void)xpc_didStopCapture;\n- (oneway void)xpc_didStartCaptureTimerWithDate:(NSDate *)arg1;\n- (oneway void)xpc_willStartCapturing;\n- (void)xpc_didUpdateThumbnailWithData:(NSData *)arg1 isVideo:(_Bool)arg2;\n- (void)checkin;\n@end\n'
p366
sS'NSXPCListenerDelegate'
p367
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p368
sS'NMSMessageCenterDelegate'
p369
S'@protocol NMSMessageCenterDelegate <NSObject>\n\n@optional\n- (void)messageCenter:(NMSMessageCenter *)arg1 didResolveIDSIdentifierForRequest:(NMSOutgoingRequest *)arg2;\n- (void)messageCenter:(NMSMessageCenter *)arg1 didReceiveUnpairedResponse:(NMSUnpairedResponse *)arg2;\n- (void)messageCenter:(NMSMessageCenter *)arg1 didReceiveUnknownRequest:(NMSIncomingRequest *)arg2;\n- (void)messageCenter:(NMSMessageCenter *)arg1 didChangeConnectedState:(_Bool)arg2;\n@end\n'
p370
ssS'usr/libexec/fmfd'
p371
(dp372
S'NSXPCListenerDelegate'
p373
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p374
ssS'System/Library/PrivateFrameworks/iCloudNotification.framework/ind'
p375
(dp376
S'NSXPCListenerDelegate'
p377
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p378
sS'INDaemonProtocol'
p379
S'@protocol INDaemonProtocol <NSObject>\n- (void)notifyDeviceStorageLevel:(long long)arg1 completion:(void (^)(_Bool, NSError *))arg2;\n- (void)updateOfferForAccountWithID:(NSString *)arg1 offerId:(NSString *)arg2 buttonId:(NSString *)arg3 completion:(void (^)(_Bool, NSError *))arg4;\n- (void)iCloudServerOfferForAccountWithID:(NSString *)arg1 options:(NSDictionary *)arg2 completion:(void (^)(NSDictionary *, NSError *))arg3;\n- (void)diagnosticReportWithCompletion:(void (^)(INDiagnosticReport *, NSError *))arg1;\n- (void)clearAllRegistrationDigestsWithCompletion:(void (^)(_Bool, NSError *))arg1;\n- (void)unregisterAccountWithID:(NSString *)arg1 fromiCloudNotificationsWithCompletion:(void (^)(_Bool, NSError *))arg2;\n- (void)registerAccountWithID:(NSString *)arg1 foriCloudNotificationsWithReason:(unsigned long long)arg2 completion:(void (^)(_Bool, NSError *))arg3;\n@end\n'
p380
sS'APSConnectionDelegate'
p381
S'@protocol APSConnectionDelegate <NSObject>\n- (void)connection:(APSConnection *)arg1 didReceivePublicToken:(NSData *)arg2;\n\n@optional\n- (void)connectionDidReconnect:(APSConnection *)arg1;\n- (void)connection:(APSConnection *)arg1 didChangeConnectedStatus:(_Bool)arg2;\n- (void)connection:(APSConnection *)arg1 didFailToSendOutgoingMessage:(APSOutgoingMessage *)arg2 error:(NSError *)arg3;\n- (void)connection:(APSConnection *)arg1 didSendOutgoingMessage:(APSOutgoingMessage *)arg2;\n- (void)connection:(APSConnection *)arg1 didReceiveMessageForTopic:(NSString *)arg2 userInfo:(NSDictionary *)arg3;\n- (void)connection:(APSConnection *)arg1 didReceiveIncomingMessage:(APSIncomingMessage *)arg2;\n- (void)connection:(APSConnection *)arg1 didReceiveToken:(NSData *)arg2 forTopic:(NSString *)arg3 identifier:(NSString *)arg4;\n@end\n'
p382
sS'FAFamilyNotificationDelegate'
p383
S'@protocol FAFamilyNotificationDelegate <NSObject>\n- (void)didClearFamilyNotification:(FAFamilyNotification *)arg1;\n- (void)didDismissFamilyNotification:(FAFamilyNotification *)arg1;\n- (void)didActivateFamilyNotification:(FAFamilyNotification *)arg1;\n@end\n'
p384
ssS'System/Library/PrivateFrameworks/DiskSpaceDiagnostics.framework/PlugIns/DiskSpaceDiagnosticsExtension.appex/DiskSpaceDiagnosticsExtension'
p385
(dp386
sS'System/Library/Frameworks/MapKit.framework/XPCServices/com.apple.MapKit.SnapshotService.xpc/com.apple.MapKit.SnapshotService'
p387
(dp388
sS'System/Library/PrivateFrameworks/DocumentManagerUICore.framework/PlugIns/com.apple.DocumentManager.Service.appex/com.apple.DocumentManager.Service'
p389
(dp390
sS'usr/libexec/findmydeviced'
p391
(dp392
S'NSXPCListenerDelegate'
p393
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p394
ssS'System/Library/PrivateFrameworks/FindMyDevice.framework/XPCServices/FindMyDeviceUserNotificationsXPCService.xpc/FindMyDeviceUserNotificationsXPCService'
p395
(dp396
sS'System/Library/PrivateFrameworks/QuickLookThumbnailing.framework/Support/com.apple.quicklook.ThumbnailsAgent'
p397
(dp398
sS'usr/libexec/replayd'
p399
(dp400
S'RPRecordingSessionDelegate'
p401
S'@protocol RPRecordingSessionDelegate <NSObject>\n- (void)broadcastSession:(RPRecordingSession *)arg1 didUpdateDuration:(double)arg2;\n- (void)broadcastSession:(RPRecordingSession *)arg1 didUpdateServiceInfo:(NSDictionary *)arg2;\n- (void)recordingSession:(RPRecordingSession *)arg1 stoppedWithError:(NSError *)arg2;\n@end\n'
p402
sS'MCProfileConnectionObserver'
p403
S'@protocol MCProfileConnectionObserver <NSObject>\n\n@optional\n- (void)profileConnectionDidReceiveAppWhitelistChangedNotification:(MCProfileConnection *)arg1 userInfo:(NSDictionary *)arg2;\n- (void)profileConnectionDidReceiveDefaultsChangedNotification:(MCProfileConnection *)arg1 userInfo:(NSDictionary *)arg2;\n- (void)profileConnectionDidReceiveEffectiveSettingsChangedNotification:(MCProfileConnection *)arg1 userInfo:(NSDictionary *)arg2;\n- (void)profileConnectionDidReceiveProfileListChangedNotification:(MCProfileConnection *)arg1 userInfo:(NSDictionary *)arg2;\n- (void)profileConnectionDidReceivePasscodePolicyChangedNotification:(MCProfileConnection *)arg1 userInfo:(NSDictionary *)arg2;\n- (void)profileConnectionDidReceivePasscodeChangedNotification:(MCProfileConnection *)arg1 userInfo:(NSDictionary *)arg2;\n- (void)profileConnectionDidReceiveRestrictionChangedNotification:(MCProfileConnection *)arg1 userInfo:(NSDictionary *)arg2;\n@end\n'
p404
sS'NSXPCListenerDelegate'
p405
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p406
sS'RPBroadcastDaemonProtocol'
p407
S'@protocol RPBroadcastDaemonProtocol <NSObject>\n- (void)finishBroadcastWithError:(NSError *)arg1;\n- (void)updateBroadcastURL:(NSURL *)arg1;\n- (void)updateServiceInfo:(NSDictionary *)arg1;\n- (void)ping;\n@end\n'
p408
sS'RPStatusBarAssertionDelegate'
p409
S'@protocol RPStatusBarAssertionDelegate\n- (void)timerDidUpdate:(NSString *)arg1;\n@end\n'
p410
sS'RPBroadcastExtensionProtocol'
p411
S'@protocol RPBroadcastExtensionProtocol <NSObject>\n- (void)processPayload:(NSDictionary *)arg1 completion:(void (^)(void))arg2;\n@end\n'
p412
sS'RPClientProtocol'
p413
S'@protocol RPClientProtocol <NSObject>\n- (oneway void)recordingTimerDidUpdate:(NSString *)arg1;\n- (oneway void)recordingLockInterrupted:(NSError *)arg1;\n- (oneway void)captureHandlerWithAudioSample:(NSData *)arg1 absdData:(NSData *)arg2 itemCount:(long long)arg3 bufferType:(long long)arg4 timingData:(NSData *)arg5;\n- (oneway void)captureHandlerWithSample:(RPIOSurfaceObject *)arg1 timingData:(NSData *)arg2;\n- (oneway void)updateBroadcastURL:(NSURL *)arg1;\n- (oneway void)updateBroadcastServiceInfo:(NSDictionary *)arg1;\n- (oneway void)stopRecordingWithError:(NSError *)arg1 movieURL:(NSURL *)arg2;\n- (oneway void)updateScreenRecordingState:(_Bool)arg1;\n@end\n'
p414
sS'FBSDisplayLayoutObserver'
p415
S'@protocol FBSDisplayLayoutObserver <NSObject>\n\n@optional\n- (void)layoutMonitor:(FBSDisplayLayoutMonitor *)arg1 didUpdateDisplayLayout:(FBSDisplayLayout *)arg2 withContext:(FBSDisplayLayoutTransitionContext *)arg3;\n- (void)layoutMonitor:(FBSDisplayLayoutMonitor *)arg1 didUpdateDisplayLayout:(FBSDisplayLayout *)arg2;\n@end\n'
p416
sS'CXCallObserverDelegate'
p417
S'@protocol CXCallObserverDelegate <NSObject>\n- (void)callObserver:(CXCallObserver *)arg1 callChanged:(CXCall *)arg2;\n@end\n'
p418
sS'SBSStatusBarStyleOverridesCoordinatorDelegate'
p419
S'@protocol SBSStatusBarStyleOverridesCoordinatorDelegate <NSObject>\n- (void)statusBarCoordinator:(SBSStatusBarStyleOverridesCoordinator *)arg1 invalidatedRegistrationWithError:(NSError *)arg2;\n\n@optional\n- (_Bool)statusBarCoordinator:(SBSStatusBarStyleOverridesCoordinator *)arg1 receivedTapWithContext:(id <SBSStatusBarTapContext>)arg2 completionBlock:(void (^)(void))arg3;\n@end\n'
p420
sS'RPDaemonProtocol'
p421
S'@protocol RPDaemonProtocol <NSObject>\n- (oneway void)reportCameraUsage:(int)arg1;\n- (oneway void)setMicrophoneEnabledPersistent:(_Bool)arg1;\n- (oneway void)setBroadcastURL:(NSString *)arg1;\n- (oneway void)setHasUserConsentForMicrophone:(_Bool)arg1;\n- (oneway void)setHasUserConsentForCamera:(_Bool)arg1;\n- (oneway void)synchronousGetCurrentState:(void (^)(NSDictionary *))arg1;\n- (oneway void)clientDidResignActive;\n- (oneway void)clientDidBecomeActive;\n- (oneway void)discardRecordingWithHandler:(void (^)(void))arg1;\n- (oneway void)updateProcessIDForAudioCaptureWithPID:(int)arg1;\n- (oneway void)setMicrophoneEnabled:(_Bool)arg1;\n- (oneway void)resumeRecordingWithWindowLayerContextID:(unsigned int)arg1;\n- (oneway void)pauseRecording;\n- (oneway void)saveVideoToCameraRoll:(NSURL *)arg1 handler:(void (^)(NSError *))arg2;\n- (oneway void)stopRecordingWithStartClipDuration:(double)arg1 endClipDuration:(double)arg2 handler:(void (^)(NSURL *, NSError *))arg3;\n- (oneway void)stopRecordingWithHandler:(void (^)(NSURL *, NSError *))arg1;\n- (oneway void)getSystemBroadcastExtensionInfo:(void (^)(NSArray *, NSError *))arg1;\n- (oneway void)getCurrentBroadcastImages:(void (^)(UIImage *, UIImage *))arg1;\n- (oneway void)setupBroadcastWithHostBundleID:(NSString *)arg1 broadcastExtensionBundleID:(NSString *)arg2 broadcastConfigurationData:(NSData *)arg3 userInfo:(NSDictionary *)arg4 handler:(void (^)(NSError *))arg5;\n- (oneway void)startRecordingWindowLayerContextIDs:(NSArray *)arg1 windowSize:(struct CGSize)arg2 microphoneEnabled:(_Bool)arg3 cameraEnabled:(_Bool)arg4 broadcast:(_Bool)arg5 systemRecording:(_Bool)arg6 captureEnabled:(_Bool)arg7 listenerEndpoint:(NSXPCListenerEndpoint *)arg8 withHandler:(void (^)(NSError *, _Bool, _Bool))arg9;\n@end\n'
p422
sS'BBRemoteDataProvider'
p423
S'@protocol BBRemoteDataProvider <BBDataProvider>\n@end\n'
p424
ssS'usr/libexec/wcd'
p425
(dp426
S'WCXPCPrivateManagerDaemonProtocol'
p427
S'@protocol WCXPCPrivateManagerDaemonProtocol <NSObject>\n- (void)reconnect;\n- (void)fakeIncomingPayloadOnSubService:(NSString *)arg1 ofType:(NSString *)arg2 clientData:(NSData *)arg3 resource:(NSURL *)arg4 resourceSandboxToken:(NSData *)arg5 completionHandler:(void (^)(NSError *))arg6;\n@end\n'
p428
sS'NSXPCListenerDelegate'
p429
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p430
sS'IDSServiceDelegate'
p431
S'@protocol IDSServiceDelegate <NSObject>\n\n@optional\n- (void)service:(IDSService *)arg1 didSwitchActivePairedDevice:(IDSDevice *)arg2 acknowledgementBlock:(void (^)(void))arg3;\n- (void)serviceAllowedTrafficClassifiersDidReset:(IDSService *)arg1;\n- (void)serviceSpaceDidBecomeAvailable:(IDSService *)arg1;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 inviteReceivedForSession:(IDSSession *)arg3 fromID:(NSString *)arg4 withContext:(NSData *)arg5;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 inviteReceivedForSession:(IDSSession *)arg3 fromID:(NSString *)arg4 withOptions:(NSDictionary *)arg5;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 inviteReceivedForSession:(IDSSession *)arg3 fromID:(NSString *)arg4;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 identifier:(NSString *)arg3 hasBeenDeliveredWithContext:(id)arg4;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 identifier:(NSString *)arg3 didSendWithSuccess:(_Bool)arg4 error:(NSError *)arg5 context:(IDSMessageContext *)arg6;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 identifier:(NSString *)arg3 didSendWithSuccess:(_Bool)arg4 error:(NSError *)arg5;\n- (void)service:(IDSService *)arg1 connectedDevicesChanged:(NSArray *)arg2;\n- (void)service:(IDSService *)arg1 nearbyDevicesChanged:(NSArray *)arg2;\n- (void)service:(IDSService *)arg1 devicesChanged:(NSArray *)arg2;\n- (void)service:(IDSService *)arg1 activeAccountsChanged:(NSSet *)arg2;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingResourceAtURL:(NSURL *)arg3 metadata:(NSDictionary *)arg4 fromID:(NSString *)arg5 context:(IDSMessageContext *)arg6;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingResourceAtURL:(NSURL *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingUnhandledProtobuf:(IDSProtobuf *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingData:(NSData *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingMessage:(NSDictionary *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;\n@end\n'
p432
sS'PKComplicationXPCServer'
p433
S'@protocol PKComplicationXPCServer\n- (void)complicationUnregister;\n- (void)complicationRegister;\n@end\n'
p434
sS'WCDPKClientDelegate'
p435
S'@protocol WCDPKClientDelegate <NSObject>\n- (void)clientRequestingComplicationUnregister:(WCDPKClient *)arg1;\n- (void)clientRequestingComplicationRegister:(WCDPKClient *)arg1;\n- (void)clientXPCConnectionDidDisconnect:(WCDPKClient *)arg1;\n@end\n'
p436
sS'WCXPCManagerDaemonProtocol'
p437
S'@protocol WCXPCManagerDaemonProtocol <NSObject>\n- (void)acknowledgeUserInfoResultIndexWithIdentifier:(NSString *)arg1 clientPairingID:(NSString *)arg2;\n- (void)acknowledgeUserInfoIndexWithIdentifier:(NSString *)arg1 clientPairingID:(NSString *)arg2;\n- (void)acknowledgeFileResultIndexWithIdentifier:(NSString *)arg1 clientPairingID:(NSString *)arg2;\n- (void)acknowledgeFileIndexWithIdentifier:(NSString *)arg1 clientPairingID:(NSString *)arg2;\n- (void)cancelAllOutstandingMessages;\n- (void)cancelSendWithIdentifier:(NSString *)arg1;\n- (void)transferUserInfo:(WCSessionUserInfoTransfer *)arg1 withURL:(NSURL *)arg2 clientPairingID:(NSString *)arg3 errorHandler:(void (^)(NSError *))arg4;\n- (void)transferFile:(WCSessionFileTransfer *)arg1 sandboxToken:(NSData *)arg2 clientPairingID:(NSString *)arg3 errorHandler:(void (^)(NSError *))arg4;\n- (void)updateApplicationContext:(NSData *)arg1 clientPairingID:(NSString *)arg2 errorHandler:(void (^)(NSError *))arg3;\n- (void)sendMessage:(WCMessage *)arg1 clientPairingID:(NSString *)arg2 acceptanceHandler:(void (^)(_Bool, _Bool))arg3;\n- (void)sessionReadyForInitialStateForClientPairingID:(NSString *)arg1 supportsActiveDeviceSwitch:(_Bool)arg2 withErrorHandler:(void (^)(NSError *))arg3;\n@end\n'
p438
sS'APSConnectionDelegate'
p439
S'@protocol APSConnectionDelegate <NSObject>\n- (void)connection:(APSConnection *)arg1 didReceivePublicToken:(NSData *)arg2;\n\n@optional\n- (void)connectionDidReconnect:(APSConnection *)arg1;\n- (void)connection:(APSConnection *)arg1 didChangeConnectedStatus:(_Bool)arg2;\n- (void)connection:(APSConnection *)arg1 didFailToSendOutgoingMessage:(APSOutgoingMessage *)arg2 error:(NSError *)arg3;\n- (void)connection:(APSConnection *)arg1 didSendOutgoingMessage:(APSOutgoingMessage *)arg2;\n- (void)connection:(APSConnection *)arg1 didReceiveMessageForTopic:(NSString *)arg2 userInfo:(NSDictionary *)arg3;\n- (void)connection:(APSConnection *)arg1 didReceiveIncomingMessage:(APSIncomingMessage *)arg2;\n- (void)connection:(APSConnection *)arg1 didReceiveToken:(NSData *)arg2 forTopic:(NSString *)arg3 identifier:(NSString *)arg4;\n@end\n'
p440
sS'WCDClientDelegate'
p441
S'@protocol WCDClientDelegate <NSObject>\n- (void)clientReachabilityDidChange:(NSObject *)arg1;\n- (void)clientXPCConnectionDidDisconnect:(NSObject *)arg1;\n@end\n'
p442
sS'NSXPCConnectionDelegate'
p443
S'@protocol NSXPCConnectionDelegate <NSObject>\n\n@optional\n- (void)connection:(NSXPCConnection *)arg1 handleInvocation:(NSInvocation *)arg2 isReply:(_Bool)arg3;\n- (id <NSSecureCoding>)replacementObjectForXPCConnection:(NSXPCConnection *)arg1 encoder:(NSXPCCoder *)arg2 object:(id)arg3;\n@end\n'
p444
sS'WCDSystemObserver'
p445
S'@protocol WCDSystemObserver <NSObject>\n\n@optional\n- (void)systemObserverProcessStateChangedForBundleID:(NSString *)arg1;\n- (void)systemObserverAppDidTerminateForBundleID:(NSString *)arg1;\n- (void)systemObserverAppDidSuspendForBundleID:(NSString *)arg1;\n- (void)systemObserverWatchAppUIStatesChanged:(NSDictionary *)arg1;\n- (void)systemObserverActiveComplicationsChanged;\n- (void)systemObserverRemainingComplicationUserInfoTransfersReset;\n- (void)systemObserverComplicationsInstalledChanged;\n- (void)systemObserverWatchAppsInstalledChanged;\n- (void)systemObserverInstalledApplicationsChanged;\n- (void)systemObserverRemoteFirstUnlockedChanged;\n- (void)systemObserverPairedListChanged;\n- (void)systemObserverActiveDeviceConnectedChanged;\n- (void)systemObserverActiveDeviceSwitchStarted;\n- (void)systemObserverInitialSetUpComplete;\n@end\n'
p446
ssS'System/Library/AppRemovalServices/com.apple.mobileme.fmf1.appremoval.xpc/com.apple.mobileme.fmf1.appremoval'
p447
(dp448
sS'System/Library/AppRemovalServices/com.apple.Maps.appremoval.xpc/com.apple.Maps.appremoval'
p449
(dp450
sS'System/Library/PrivateFrameworks/CoreSuggestions.framework/reversetemplated'
p451
(dp452
sS'System/Library/PrivateFrameworks/InstallCoordination.framework/Support/installcoordinationd'
p453
(dp454
S'IXClientProtocol'
p455
S'@protocol IXClientProtocol <NSObject>\n- (oneway void)_remote_IXSPromisedOutOfBandStreamingZipTransfer:(NSUUID *)arg1 setArchiveBytesConsumed:(unsigned long long)arg2;\n- (oneway void)_remote_IXSPromisedStreamingZipTransfer:(NSUUID *)arg1 consumeExtractedBytesAtPath:(NSURL *)arg2 completion:(void (^)(NSError *))arg3;\n- (oneway void)_remote_IXSPromisedStreamingZipTransfer:(NSUUID *)arg1 setArchiveBytesConsumed:(unsigned long long)arg2;\n- (oneway void)_remote_IXSPromisedTransferToPath:(NSUUID *)arg1 setShouldCopy:(_Bool)arg2;\n- (oneway void)_remote_IXSPromisedTransferToPath:(NSUUID *)arg1 setTransferPath:(NSURL *)arg2;\n- (oneway void)_remote_IXSPlaceholder:(NSUUID *)arg1 setConfigurationCompleteWithCompletion:(void (^)(NSError *))arg2;\n- (oneway void)_remote_IXSPlaceholder:(NSUUID *)arg1 getPlugInPlaceholderPromises:(void (^)(NSArray *, NSError *))arg2;\n- (oneway void)_remote_IXSPlaceholder:(NSUUID *)arg1 hasPlugInPlaceholderPromises:(void (^)(_Bool, NSError *))arg2;\n- (oneway void)_remote_IXSPlaceholder:(NSUUID *)arg1 setPlugInPlaceholderPromiseUUIDs:(NSArray *)arg2 completion:(void (^)(NSError *))arg3;\n- (oneway void)_remote_IXSPlaceholder:(NSUUID *)arg1 getEntitlementsPromise:(void (^)(IXDataPromiseSeed *, NSError *))arg2;\n- (oneway void)_remote_IXSPlaceholder:(NSUUID *)arg1 hasEntitlementsPromise:(void (^)(_Bool, NSError *))arg2;\n- (oneway void)_remote_IXSPlaceholder:(NSUUID *)arg1 setEntitlementsPromiseUUID:(NSUUID *)arg2 completion:(void (^)(NSError *))arg3;\n- (oneway void)_remote_IXSPlaceholder:(NSUUID *)arg1 getLocalizationDictionary:(void (^)(NSDictionary *, NSError *))arg2;\n- (oneway void)_remote_IXSPlaceholder:(NSUUID *)arg1 setLocalizationPromiseUUID:(NSUUID *)arg2 completion:(void (^)(NSError *))arg3;\n- (oneway void)_remote_IXSPlaceholder:(NSUUID *)arg1 getIconPromise:(void (^)(IXDataPromiseSeed *, NSError *))arg2;\n- (oneway void)_remote_IXSPlaceholder:(NSUUID *)arg1 hasIconPromise:(void (^)(_Bool, NSError *))arg2;\n- (oneway void)_remote_IXSPlaceholder:(NSUUID *)arg1 setIconPromiseUUID:(NSUUID *)arg2 completion:(void (^)(NSError *))arg3;\n- (oneway void)_remote_IXSPlaceholder:(NSUUID *)arg1 getAttributesWithCompletion:(void (^)(IXPlaceholderAttributes *, NSError *))arg2;\n- (oneway void)_remote_IXSPlaceholder:(NSUUID *)arg1 setAttributes:(IXPlaceholderAttributes *)arg2 completion:(void (^)(NSError *))arg3;\n- (oneway void)_remote_IXSPlaceholder:(NSUUID *)arg1 getLaunchProhibitedWithCompletion:(void (^)(_Bool, NSError *))arg2;\n- (oneway void)_remote_IXSPlaceholder:(NSUUID *)arg1 setLaunchProhibited:(_Bool)arg2 completion:(void (^)(NSError *))arg3;\n- (oneway void)_remote_IXSPlaceholder:(NSUUID *)arg1 getSinfDataWithCompletion:(void (^)(NSData *, NSError *))arg2;\n- (oneway void)_remote_IXSPlaceholder:(NSUUID *)arg1 setSinfPromiseUUID:(NSUUID *)arg2 completion:(void (^)(NSError *))arg3;\n- (oneway void)_remote_IXSPlaceholder:(NSUUID *)arg1 getMetadataWithCompletion:(void (^)(MIStoreMetadata *, NSError *))arg2;\n- (oneway void)_remote_IXSPlaceholder:(NSUUID *)arg1 setMetadataPromiseUUID:(NSUUID *)arg2 completion:(void (^)(NSError *))arg3;\n- (oneway void)_remote_IXSOwnedDataPromise:(NSUUID *)arg1 getStagedPath:(void (^)(NSURL *, NSError *))arg2;\n- (oneway void)_remote_IXSOwnedDataPromise:(NSUUID *)arg1 setStagedPath:(NSURL *)arg2;\n- (oneway void)_remote_IXSDataPromise:(NSUUID *)arg1 getErrorInfo:(void (^)(unsigned long long, NSError *))arg2;\n- (oneway void)_remote_IXSDataPromise:(NSUUID *)arg1 resetWithCompletion:(void (^)(NSError *))arg2;\n- (oneway void)_remote_IXSDataPromise:(NSUUID *)arg1 cancelForReason:(NSError *)arg2 client:(unsigned long long)arg3 completion:(void (^)(NSError *))arg4;\n- (oneway void)_remote_IXSDataPromise:(NSUUID *)arg1 setIsComplete:(_Bool)arg2 completion:(void (^)(NSError *))arg3;\n- (oneway void)_remote_IXSDataPromise:(NSUUID *)arg1 getIsComplete:(void (^)(_Bool, NSError *))arg2;\n- (oneway void)_remote_IXSDataPromise:(NSUUID *)arg1 setPercentComplete:(double)arg2;\n- (oneway void)_remote_IXSDataPromise:(NSUUID *)arg1 getPercentComplete:(void (^)(double, NSError *))arg2;\n- (oneway void)_remote_IXSCoordinatedAppInstall:(NSUUID *)arg1 getCoordinationState:(void (^)(unsigned long long, NSError *))arg2;\n- (oneway void)_remote_IXSCoordinatedAppInstall:(NSUUID *)arg1 prioritizeWithCompletion:(void (^)(NSError *))arg2;\n- (oneway void)_remote_IXSCoordinatedAppInstall:(NSUUID *)arg1 getIsPausedWithCompletion:(void (^)(_Bool, NSError *))arg2;\n- (oneway void)_remote_IXSCoordinatedAppInstall:(NSUUID *)arg1 setIsPaused:(_Bool)arg2 completion:(void (^)(NSError *))arg3;\n- (oneway void)_remote_IXSCoordinatedAppInstall:(NSUUID *)arg1 fireObserversWithCompletion:(void (^)(NSError *))arg2;\n- (oneway void)_remote_IXSCoordinatedAppInstall:(NSUUID *)arg1 getErrorInfo:(void (^)(unsigned long long, NSError *))arg2;\n- (oneway void)_remote_IXSCoordinatedAppInstall:(NSUUID *)arg1 getIsComplete:(void (^)(_Bool, NSError *))arg2;\n- (oneway void)_remote_IXSCoordinatedAppInstall:(NSUUID *)arg1 getPreparationPromise:(void (^)(IXDataPromiseSeed *, NSError *))arg2;\n- (oneway void)_remote_IXSCoordinatedAppInstall:(NSUUID *)arg1 setPreparationPromiseUUID:(NSUUID *)arg2 completion:(void (^)(NSError *))arg3;\n- (oneway void)_remote_IXSCoordinatedAppInstall:(NSUUID *)arg1 getUserDataRestoreShouldBegin:(void (^)(_Bool, NSError *))arg2;\n- (oneway void)_remote_IXSCoordinatedAppInstall:(NSUUID *)arg1 hasUserDataPromise:(void (^)(_Bool, NSError *))arg2;\n- (oneway void)_remote_IXSCoordinatedAppInstall:(NSUUID *)arg1 getUserDataPromise:(void (^)(IXDataPromiseSeed *, NSError *))arg2;\n- (oneway void)_remote_IXSCoordinatedAppInstall:(NSUUID *)arg1 setUserDataPromiseUUID:(NSUUID *)arg2 completion:(void (^)(NSError *))arg3;\n- (oneway void)_remote_IXSCoordinatedAppInstall:(NSUUID *)arg1 hasInitialODRAssetPromises:(void (^)(_Bool, NSError *))arg2;\n- (oneway void)_remote_IXSCoordinatedAppInstall:(NSUUID *)arg1 getInitialODRAssetPromises:(void (^)(NSArray *, NSError *))arg2;\n- (oneway void)_remote_IXSCoordinatedAppInstall:(NSUUID *)arg1 setInitialODRAssetPromiseUUIDs:(NSArray *)arg2 completion:(void (^)(NSError *))arg3;\n- (oneway void)_remote_IXSCoordinatedAppInstall:(NSUUID *)arg1 isUserInitiated:(void (^)(_Bool, NSError *))arg2;\n- (oneway void)_remote_IXSCoordinatedAppInstall:(NSUUID *)arg1 setUserInitiated:(_Bool)arg2 completion:(void (^)(NSError *))arg3;\n- (oneway void)_remote_IXSCoordinatedAppInstall:(NSUUID *)arg1 hasAutoEnabledExtensionTypes:(void (^)(_Bool, NSError *))arg2;\n- (oneway void)_remote_IXSCoordinatedAppInstall:(NSUUID *)arg1 setAutoEnabledExtensionTypes:(NSArray *)arg2 completion:(void (^)(NSError *))arg3;\n- (oneway void)_remote_IXSCoordinatedAppInstall:(NSUUID *)arg1 hasInstallOptions:(void (^)(_Bool, NSError *))arg2;\n- (oneway void)_remote_IXSCoordinatedAppInstall:(NSUUID *)arg1 setInstallOptionsPromiseUUID:(NSUUID *)arg2 completion:(void (^)(NSError *))arg3;\n- (oneway void)_remote_IXSCoordinatedAppInstall:(NSUUID *)arg1 setAppAssetPromiseDRI:(unsigned long long)arg2 completion:(void (^)(NSError *))arg3;\n- (oneway void)_remote_IXSCoordinatedAppInstall:(NSUUID *)arg1 getAppAssetPromiseDRI:(void (^)(unsigned long long, NSError *))arg2;\n- (oneway void)_remote_IXSCoordinatedAppInstall:(NSUUID *)arg1 appAssetPromiseHasBegunFulfillment:(void (^)(_Bool, NSError *))arg2;\n- (oneway void)_remote_IXSCoordinatedAppInstall:(NSUUID *)arg1 hasAppAssetPromise:(void (^)(_Bool, NSError *))arg2;\n- (oneway void)_remote_IXSCoordinatedAppInstall:(NSUUID *)arg1 getAppAssetPromise:(void (^)(IXDataPromiseSeed *, NSError *))arg2;\n- (oneway void)_remote_IXSCoordinatedAppInstall:(NSUUID *)arg1 setAppAssetPromiseUUID:(NSUUID *)arg2 completion:(void (^)(NSError *))arg3;\n- (oneway void)_remote_IXSCoordinatedAppInstall:(NSUUID *)arg1 hasPlaceholderPromise:(void (^)(_Bool, NSError *))arg2;\n- (oneway void)_remote_IXSCoordinatedAppInstall:(NSUUID *)arg1 getPlaceholderPromise:(void (^)(IXDataPromiseSeed *, NSError *))arg2;\n- (oneway void)_remote_IXSCoordinatedAppInstall:(NSUUID *)arg1 setPlaceholderPromiseUUID:(NSUUID *)arg2 completion:(void (^)(NSError *))arg3;\n- (oneway void)_remote_IXSCoordinatedAppInstall:(NSUUID *)arg1 cancelForReason:(NSError *)arg2 client:(unsigned long long)arg3 completion:(void (^)(NSError *))arg4;\n- (void)_remote_displayUserPresentableErrorForApps:(NSArray *)arg1 code:(long long)arg2;\n- (void)_remote_displayUserPresentableErrorForApp:(NSString *)arg1 code:(long long)arg2;\n- (void)_remote_registerTransientObserver:(NSXPCListenerEndpoint *)arg1 forClientIdentifiers:(NSSet *)arg2 respondingToSelectors:(unsigned long long)arg3;\n- (void)_remote_registerObserverMachServiceName:(NSString *)arg1 forClientIdentifiers:(NSSet *)arg2 respondingToSelectors:(unsigned long long)arg3;\n- (void)_remote_uninstallAppWithBundleID:(NSString *)arg1 requestUserConfirmation:(_Bool)arg2 completion:(void (^)(NSError *))arg3;\n- (void)_remote_prioritizeCoordinatorForAppWithBundleID:(NSString *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)_remote_setIsPaused:(_Bool)arg1 forCoordinatorForAppWithBundleID:(NSString *)arg2 completion:(void (^)(NSError *))arg3;\n- (void)_remote_cancelCoordinatorsForAppsWithBundleIDs:(NSArray *)arg1 reason:(NSError *)arg2 client:(unsigned long long)arg3 completion:(void (^)(NSError *))arg4;\n- (void)_remote_cancelCoordinatorForAppWithBundleID:(NSString *)arg1 reason:(NSError *)arg2 client:(unsigned long long)arg3 completion:(void (^)(NSError *))arg4;\n- (void)_remote_setRemovability:(unsigned long long)arg1 forAppWithBundleID:(NSString *)arg2 completion:(void (^)(NSError *))arg3;\n- (void)_remote_removabilityForAppWithBundleID:(NSString *)arg1 completion:(void (^)(unsigned long long, NSError *))arg2;\n- (void)_remote_setTestingEnabled:(_Bool)arg1 completion:(void (^)(NSError *))arg2;\n- (void)_remote_pingDaemonWithCompletion:(void (^)(NSError *))arg1;\n- (void)_remote_killDaemonForTestingWithCompletion:(void (^)(NSError *))arg1;\n- (void)_remote_purgeRegisteredCoordinatorsAndPromisesForCreator:(unsigned long long)arg1 completion:(void (^)(NSError *))arg2;\n- (void)_remote_fetchRegisteredDataPromiseInfoForCreator:(unsigned long long)arg1 completion:(void (^)(NSArray *, NSError *))arg2;\n- (void)_remote_fetchSeedsForCoordinatorsWithIntent:(unsigned long long)arg1 completion:(void (^)(NSArray *, NSError *))arg2;\n- (void)_remote_removeObserverForCoordinatorWithUUID:(NSUUID *)arg1;\n- (void)_remote_addObserversForCoordinatorsWithUUIDs:(NSSet *)arg1 fireObserverMethods:(_Bool)arg2;\n- (void)_remote_createAppInstallCoordinatorWithSeed:(IXAppInstallCoordinatorSeed *)arg1 createIfNotExisting:(_Bool)arg2 completion:(void (^)(IXAppInstallCoordinatorSeed *, _Bool, NSError *))arg3;\n- (void)_remote_removeObserverForDataPromiseWithUUID:(NSUUID *)arg1;\n- (void)_remote_addObserversForDataPromisesWithUUIDs:(NSSet *)arg1;\n- (void)_remote_createOutOfBandStreamingZipTransferDataPromiseWithSeed:(IXPromisedOutOfBandStreamingZipTransferSeed *)arg1 completion:(void (^)(IXPromisedOutOfBandStreamingZipTransferSeed *, NSError *))arg2;\n- (void)_remote_createOutOfBandTransferPromiseWithSeed:(IXPromisedOutOfBandTransferSeed *)arg1 completion:(void (^)(IXPromisedOutOfBandTransferSeed *, NSError *))arg2;\n- (void)_remote_createInMemoryDictionaryPromiseWithSeed:(IXPromisedInMemoryDictionarySeed *)arg1 dictionary:(NSDictionary *)arg2 completion:(void (^)(IXPromisedInMemoryDictionarySeed *, NSError *))arg3;\n- (void)_remote_createInMemoryDataPromiseWithSeed:(IXPromisedInMemoryDataSeed *)arg1 data:(NSData *)arg2 completion:(void (^)(IXPromisedInMemoryDataSeed *, NSError *))arg3;\n- (void)_remote_createStreamingZipTransferDataPromiseWithSeed:(IXPromisedStreamingZipTransferSeed *)arg1 completion:(void (^)(IXPromisedStreamingZipTransferSeed *, NSError *))arg2;\n- (void)_remote_createTransferToPathDataPromiseWithSeed:(IXPromisedTransferToPathSeed *)arg1 completion:(void (^)(IXPromisedTransferToPathSeed *, NSError *))arg2;\n- (void)_remote_createPlaceholderDataPromiseWithSeed:(IXPlaceholderSeed *)arg1 completion:(void (^)(IXPlaceholderSeed *, NSError *))arg2;\n@end\n'
p456
ssS'Applications/WebContentAnalysisUI.app/WebContentAnalysisUI'
p457
(dp458
sS'System/Library/PrivateFrameworks/ManagedConfiguration.framework/Support/teslad'
p459
(dp460
S'MCTeslaServiceInterface'
p461
S'@protocol MCTeslaServiceInterface <NSObject>\n- (void)unenrollWithCompletionBlock:(void (^)(_Bool, NSDictionary *, NSError *))arg1;\n- (void)fetchConfigurationWithCompletionBlock:(void (^)(_Bool, NSDictionary *, NSError *))arg1;\n- (void)provisionallyEnrollWithNonce:(NSString *)arg1 completionBlock:(void (^)(_Bool, NSDictionary *, NSError *))arg2;\n@end\n'
p462
sS'NSURLSessionDelegate'
p463
S'@protocol NSURLSessionDelegate <NSObject>\n\n@optional\n- (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession *)arg1;\n- (void)URLSession:(NSURLSession *)arg1 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg2 completionHandler:(void (^)(long long, NSURLCredential *))arg3;\n- (void)URLSession:(NSURLSession *)arg1 didBecomeInvalidWithError:(NSError *)arg2;\n@end\n'
p464
sS'NSURLSessionDataDelegate'
p465
S'@protocol NSURLSessionDataDelegate <NSURLSessionTaskDelegate>\n\n@optional\n- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 willCacheResponse:(NSCachedURLResponse *)arg3 completionHandler:(void (^)(NSCachedURLResponse *))arg4;\n- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didReceiveData:(NSData *)arg3;\n- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didBecomeStreamTask:(NSURLSessionStreamTask *)arg3;\n- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didBecomeDownloadTask:(NSURLSessionDownloadTask *)arg3;\n- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didReceiveResponse:(NSURLResponse *)arg3 completionHandler:(void (^)(long long))arg4;\n@end\n'
p466
sS'NSURLSessionTaskDelegate'
p467
S'@protocol NSURLSessionTaskDelegate <NSURLSessionDelegate>\n\n@optional\n- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didCompleteWithError:(NSError *)arg3;\n- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didFinishCollectingMetrics:(NSURLSessionTaskMetrics *)arg3;\n- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;\n- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 needNewBodyStream:(void (^)(NSInputStream *))arg3;\n- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg3 completionHandler:(void (^)(long long, NSURLCredential *))arg4;\n- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 willPerformHTTPRedirection:(NSHTTPURLResponse *)arg3 newRequest:(NSURLRequest *)arg4 completionHandler:(void (^)(NSURLRequest *))arg5;\n- (void)URLSession:(NSURLSession *)arg1 taskIsWaitingForConnectivity:(NSURLSessionTask *)arg2;\n- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 willBeginDelayedRequest:(NSURLRequest *)arg3 completionHandler:(void (^)(long long, NSURLRequest *))arg4;\n@end\n'
p468
ssS'System/Library/PrivateFrameworks/CoreSuggestions.framework/suggestd'
p469
(dp470
sS'System/Library/PrivateFrameworks/AXMediaUtilities.framework/XPCServices/AXMediaUtilitiesService.xpc/AXMediaUtilitiesService'
p471
(dp472
sS'System/Library/PrivateFrameworks/PassKitCore.framework/passd'
p473
(dp474
sS'Applications/ScreenSharingViewService.app/ScreenSharingViewService'
p475
(dp476
sS'System/Library/PrivateFrameworks/SOS.framework/sosd'
p477
(dp478
sS'Applications/SiriViewService.app/SiriViewService'
p479
(dp480
sS'System/Library/PrivateFrameworks/MapsSuggestions.framework/destinationd'
p481
(dp482
S'MapsSuggestionsSourceDelegate'
p483
S'@protocol MapsSuggestionsSourceDelegate <NSObject>\n- (_Bool)detachSource:(id <MapsSuggestionsSource>)arg1;\n- (_Bool)attachSource:(id <MapsSuggestionsSource>)arg1;\n- (CLLocation *)currentBestLocation;\n- (unsigned long long)deleteEntries:(struct NSArray *)arg1 source:(struct NSString *)arg2;\n- (unsigned long long)addOrUpdateSuggestionEntries:(struct NSArray *)arg1 source:(struct NSString *)arg2 deleteMissing:(_Bool)arg3;\n@end\n'
p484
sS'NSXPCListenerDelegate'
p485
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p486
sS'MapsSuggestionsLocationUpdaterDelegate'
p487
S'@protocol MapsSuggestionsLocationUpdaterDelegate <MapsSuggestionsObject>\n- (void)updateLocation:(CLLocation *)arg1;\n@end\n'
p488
sS'MapsSuggestionsSourceProxy'
p489
S'@protocol MapsSuggestionsSourceProxy <NSObject>\n- (void)forceEarlyUpdateWithCompletionBlock:(void (^)(void))arg1;\n- (void)stopMonitoringWithCompletionBlock:(void (^)(void))arg1;\n- (void)startMonitoringWithCompletionBlock:(void (^)(void))arg1;\n@end\n'
p490
sS'MapsSuggestionsSourceDelegateProxy'
p491
S'@protocol MapsSuggestionsSourceDelegateProxy <NSObject>\n- (void)deleteEntriesData:(NSData *)arg1 sourceNameData:(NSData *)arg2 completionBlock:(void (^)(void))arg3;\n- (void)addOrUpdateSuggestionEntriesData:(NSData *)arg1 sourceNameData:(NSData *)arg2 deleteMissing:(_Bool)arg3 completionBlock:(void (^)(void))arg4;\n@end\n'
p492
sS'MapsSuggestionsSource'
p493
S'@protocol MapsSuggestionsSource <MapsSuggestionsObject>\n+ (unsigned long long)disposition;\n+ (_Bool)isEnabled;\n@property(nonatomic) __weak id <MapsSuggestionsSourceDelegate> delegate;\n- (_Bool)canProduceEntriesOfType:(unsigned long long)arg1;\n- (double)updateSuggestionEntries;\n- (void)stop;\n- (void)start;\n- (id)init;\n- (id)initWithDelegate:(id <MapsSuggestionsSourceDelegate>)arg1;\n@end\n'
p494
ssS'System/Library/Frameworks/FileProvider.framework/Support/fileproviderd'
p495
(dp496
S'NSXPCListenerDelegate'
p497
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p498
sS'APSConnectionDelegate'
p499
S'@protocol APSConnectionDelegate <NSObject>\n- (void)connection:(APSConnection *)arg1 didReceivePublicToken:(NSData *)arg2;\n\n@optional\n- (void)connectionDidReconnect:(APSConnection *)arg1;\n- (void)connection:(APSConnection *)arg1 didChangeConnectedStatus:(_Bool)arg2;\n- (void)connection:(APSConnection *)arg1 didFailToSendOutgoingMessage:(APSOutgoingMessage *)arg2 error:(NSError *)arg3;\n- (void)connection:(APSConnection *)arg1 didSendOutgoingMessage:(APSOutgoingMessage *)arg2;\n- (void)connection:(APSConnection *)arg1 didReceiveMessageForTopic:(NSString *)arg2 userInfo:(NSDictionary *)arg3;\n- (void)connection:(APSConnection *)arg1 didReceiveIncomingMessage:(APSIncomingMessage *)arg2;\n- (void)connection:(APSConnection *)arg1 didReceiveToken:(NSData *)arg2 forTopic:(NSString *)arg3 identifier:(NSString *)arg4;\n@end\n'
p500
sS'PKFileProviderXPCServer'
p501
S'@protocol PKFileProviderXPCServer\n- (void)fileProviderUnregister;\n- (void)fileProviderRegister;\n@end\n'
p502
sS'FPDProcessMonitorDelegate'
p503
S'@protocol FPDProcessMonitorDelegate <NSObject>\n- (void)processMonitor:(FPDProcessMonitor *)arg1 didBecomeForeground:(_Bool)arg2;\n@end\n'
p504
sS'FPDDaemon'
p505
S'@protocol FPDDaemon\n- (void)didUpdateAlternateContentsDocumentForDocumentAtURL:(NSURL *)arg1 completionHandler:(void (^)(NSError *))arg2;\n- (void)fetchAlternateContentsURLForDocumentURL:(NSURL *)arg1 completionHandler:(void (^)(NSURL *, NSError *))arg2;\n- (void)setAlternateContentsURL:(FPSandboxingURLWrapper *)arg1 onDocumentURL:(NSURL *)arg2 completionHandler:(void (^)(NSError *))arg3;\n- (void)setEnabled:(_Bool)arg1 forDomainIdentifier:(NSString *)arg2 providerIdentifier:(NSString *)arg3 completionHandler:(void (^)(NSError *))arg4;\n- (void)getDomainsForProviderIdentifier:(NSString *)arg1 completionHandler:(void (^)(NSArray *, NSError *))arg2;\n- (void)removeAllDomainsForProviderIdentifier:(NSString *)arg1 completionHandler:(void (^)(NSError *))arg2;\n- (void)removeDomain:(NSFileProviderDomain *)arg1 forProviderIdentifier:(NSString *)arg2 completionHandler:(void (^)(NSError *))arg3;\n- (void)addDomain:(NSFileProviderDomain *)arg1 forProviderIdentifier:(NSString *)arg2 completionHandler:(void (^)(NSError *))arg3;\n- (void)reindexAllSearchableItemsForBundleIDs:(NSArray *)arg1 acknowledgementHandler:(void (^)(void))arg2;\n- (void)reindexAllSearchableItemsWithAcknowledgementHandler:(void (^)(void))arg1;\n- (void)dumpStateTo:(NSFileHandle *)arg1 completionHandler:(void (^)(NSError *))arg2;\n- (void)fetchSupportedServicesForDocumentAtURL:(NSURL *)arg1 completionHandler:(void (^)(NSArray *, NSError *))arg2;\n- (void)updateLastUsedDate:(NSURL *)arg1 completionHandler:(void (^)(NSError *))arg2;\n- (void)trashItemAtURL:(NSURL *)arg1 completionHandler:(void (^)(NSURL *, NSError *))arg2;\n- (void)endpointForItemAtURL:(NSURL *)arg1 completionHandler:(void (^)(NSArray *, NSXPCListenerEndpoint *, NSError *))arg2;\n- (void)valuesForAttributes:(NSArray *)arg1 forItemAtURL:(NSURL *)arg2 completionHandler:(void (^)(NSDictionary *, NSError *))arg3;\n- (void)extendBookmarkForItemID:(FPItemID *)arg1 consumerID:(NSString *)arg2 completionHandler:(void (^)(NSString *, NSError *))arg3;\n- (void)itemForURL:(NSURL *)arg1 completionHandler:(void (^)(FPItem *, NSError *))arg2;\n- (void)fetchRemoteServiceEndpointCreatingProviderWithIdentifier:(NSString *)arg1 itemURL:(NSURL *)arg2 handler:(void (^)(id <FPDRemoteServiceEndpointCreatingProvider>, NSError *))arg3;\n- (void)fetchRemoteFileProviderWithIdentifier:(NSString *)arg1 handler:(void (^)(id <FPDRemoteFileProvider>, NSString *, NSError *))arg2;\n- (void)documentURLFromBookmarkableString:(NSString *)arg1 creatingPlaceholderIfMissing:(_Bool)arg2 ignoreAlternateContentsURL:(_Bool)arg3 completionHandler:(void (^)(FPSandboxingURLWrapper *, FPSandboxingURLWrapper *, NSError *))arg4;\n- (void)bookmarkableStringFromDocumentURL:(NSURL *)arg1 completionHandler:(void (^)(NSString *, NSError *))arg2;\n- (void)extendBookmarkForFileURL:(NSURL *)arg1 toConsumerID:(NSString *)arg2 completionHandler:(void (^)(NSString *, NSError *))arg3;\n- (void)providersCompletionHandler:(void (^)(NSError *, NSDictionary *))arg1;\n- (void)evictItemAtURL:(NSURL *)arg1 evenIfEnumeratingFP:(_Bool)arg2 andClearACLForConsumer:(NSString *)arg3 completionHandler:(void (^)(NSError *))arg4;\n- (void)startProvidingItemAtURL:(NSURL *)arg1 fromProviderID:(NSString *)arg2 forConsumerID:(NSString *)arg3 completionHandler:(void (^)(NSError *))arg4;\n- (void)extendSandboxForFileURL:(NSURL *)arg1 fromProviderID:(NSString *)arg2 toConsumerID:(NSString *)arg3 completionHandler:(void (^)(FPSandboxingURLWrapper *, NSError *))arg4;\n- (void)wakeUpCompletionHandler:(void (^)(NSError *))arg1;\n@end\n'
p506
ssS'System/Library/PrivateFrameworks/NotesUI.framework/XPCServices/com.apple.mobilenotes.HTMLConverter.xpc/com.apple.mobilenotes.HTMLConverter'
p507
(dp508
sS'System/Library/PrivateFrameworks/AnnotationKit.framework/XPCServices/com.apple.AnnotationKit.MigratorService.xpc/com.apple.AnnotationKit.MigratorService'
p509
(dp510
sS'System/Library/Frameworks/ExternalAccessory.framework/PlugIns/com.apple.ExternalAccessory.WACUI.appex/com.apple.ExternalAccessory.WACUI'
p511
(dp512
sS'private/var/staged_system_apps/MobileMail.app/MobileMail'
p513
(dp514
S'NSXPCListenerDelegate'
p515
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p516
ssS'System/Library/PrivateFrameworks/DeviceCheckInternal.framework/devicecheckd'
p517
(dp518
S'NSXPCListenerDelegate'
p519
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p520
sS'DCDeviceMetadataProtocol'
p521
S'@protocol DCDeviceMetadataProtocol <NSObject>\n- (void)fetchOpaqueBlobWithCompletion:(void (^)(NSData *, NSError *))arg1;\n@end\n'
p522
ssS'usr/libexec/OTATaskingAgent'
p523
(dp524
sS'System/Library/PrivateFrameworks/MediaStream.framework/Support/mstreamd'
p525
(dp526
S'MSPauseManagerDelegate'
p527
S'@protocol MSPauseManagerDelegate <NSObject>\n\n@optional\n- (void)pauseManagerDidUnpause:(MSPauseManager *)arg1;\n- (void)pauseManagerDidPause:(MSPauseManager *)arg1;\n@end\n'
p528
sS'MSPowerBudgetDelegate'
p529
S'@protocol MSPowerBudgetDelegate <NSObject>\n- (void)MSPowerBudgetGotSignificantEvent:(MSPowerBudget *)arg1;\n- (void)MSPowerBudget:(MSPowerBudget *)arg1 didRequestStorageOfPersistedValues:(NSDictionary *)arg2;\n- (NSDictionary *)MSPowerBudgetDidRequestPersistedValues:(MSPowerBudget *)arg1;\n@end\n'
p530
sS'APSConnectionDelegate'
p531
S'@protocol APSConnectionDelegate <NSObject>\n- (void)connection:(APSConnection *)arg1 didReceivePublicToken:(NSData *)arg2;\n\n@optional\n- (void)connectionDidReconnect:(APSConnection *)arg1;\n- (void)connection:(APSConnection *)arg1 didChangeConnectedStatus:(_Bool)arg2;\n- (void)connection:(APSConnection *)arg1 didFailToSendOutgoingMessage:(APSOutgoingMessage *)arg2 error:(NSError *)arg3;\n- (void)connection:(APSConnection *)arg1 didSendOutgoingMessage:(APSOutgoingMessage *)arg2;\n- (void)connection:(APSConnection *)arg1 didReceiveMessageForTopic:(NSString *)arg2 userInfo:(NSDictionary *)arg3;\n- (void)connection:(APSConnection *)arg1 didReceiveIncomingMessage:(APSIncomingMessage *)arg2;\n- (void)connection:(APSConnection *)arg1 didReceiveToken:(NSData *)arg2 forTopic:(NSString *)arg3 identifier:(NSString *)arg4;\n@end\n'
p532
sS'MSDaemonProtocols'
p533
S'@protocol MSDaemonProtocols <NSObject>\n- (void)forgetEverythingForPersonID:(NSString *)arg1;\n- (void)unpauseForUUID:(NSString *)arg1;\n- (void)pauseForUUID:(NSString *)arg1;\n- (void)abortAllActivityForPersonID:(NSString *)arg1;\n- (void)resetServerStateForPersonID:(NSString *)arg1;\n- (void)refreshServerSideConfigurationForPersonID:(NSString *)arg1;\n- (void)serverSideConfigurationForPersonID:(NSString *)arg1 reply:(void (^)(NSDictionary *))arg2;\n- (void)pollForSubscriptionUpdatesTriggeredByPushNotificationForPersonID:(NSString *)arg1;\n- (void)retryOutstandingActivities;\n- (void)pollForSubscriptionUpdatesForPersonID:(NSString *)arg1;\n- (void)deleteAssetCollections:(NSArray *)arg1 personID:(NSString *)arg2;\n- (void)dequeueAssetCollectionWithGUIDs:(NSArray *)arg1 personID:(NSString *)arg2 reply:(void (^)(NSDictionary *))arg3;\n- (void)enqueueAssetCollections:(NSArray *)arg1 personID:(NSString *)arg2 reply:(void (^)(NSDictionary *))arg3;\n- (void)isBusyCompletionBlock:(void (^)(_Bool))arg1;\n@end\n'
p534
sS'NSXPCListenerDelegate'
p535
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p536
ssS'System/Library/PrivateFrameworks/PairedSync.framework/Support/pairedsyncd'
p537
(dp538
S'NSXPCListenerDelegate'
p539
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p540
sS'PSYSyncStateProviderInterface'
p541
S'@protocol PSYSyncStateProviderInterface <NSObject>\n- (oneway void)registerSyncStateObserverIfNeeded;\n- (oneway void)requestDeviceSyncStateEntriesForPairingIDs:(NSArray *)arg1 completion:(void (^)(NSDictionary *))arg2;\n@end\n'
p542
sS'PSDSyncInitiatorDelegate'
p543
S'@protocol PSDSyncInitiatorDelegate <NSObject>\n- (void)syncInitiatorStateChangedTo:(unsigned long long)arg1;\n@end\n'
p544
sS'PSYSyncSessionProviderInterface'
p545
S'@protocol PSYSyncSessionProviderInterface <NSObject>\n- (oneway void)requestActiveSyncSessionWithCompletion:(void (^)(PSYSyncSession *, NSSet *, NSError *))arg1;\n- (oneway void)checkin:(void (^)(_Bool))arg1;\n@end\n'
p546
sS'PSDSchedulerObserver'
p547
S'@protocol PSDSchedulerObserver <NSObject>\n\n@optional\n- (void)scheduler:(PSDScheduler *)arg1 didClearSyncSession:(PSYSyncSession *)arg2 withBlock:(void (^)(void))arg3;\n- (void)scheduler:(PSDScheduler *)arg1 didUpdateSyncSessionWithUpdate:(PSYSyncSessionUpdate *)arg2;\n- (void)scheduler:(PSDScheduler *)arg1 willStartSyncSession:(PSYSyncSession *)arg2;\n@end\n'
p548
ssS'private/var/staged_system_apps/Music.app/Music'
p549
(dp550
sS'usr/libexec/seld'
p551
(dp552
sS'System/Library/PrivateFrameworks/Pasteboard.framework/Support/pasted'
p553
(dp554
S'NSXPCListenerDelegate'
p555
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p556
sS'PBClientToServerProtocol'
p557
S'@protocol PBClientToServerProtocol <NSObject>\n- (void)getAllPasteboardsCompletionBlock:(void (^)(NSArray *, NSError *))arg1;\n- (void)performJanitorialTasksCompletionBlock:(void (^)(void))arg1;\n- (void)didPasteContentsFromPasteboardWithName:(NSString *)arg1 UUID:(NSUUID *)arg2 completionBlock:(void (^)(void))arg3;\n- (void)requestItemFromPasteboardWithName:(NSString *)arg1 UUID:(NSUUID *)arg2 itemIndex:(unsigned long long)arg3 typeIdentifier:(NSString *)arg4 completionBlock:(void (^)(NSData *, PBSecurityScopedURLWrapper *, NSError *))arg5;\n- (void)deletePersistentPasteboardWithName:(NSString *)arg1 completionBlock:(void (^)(unsigned long long, NSError *))arg2;\n- (void)savePasteboard:(PBItemCollection *)arg1 dataProviderEndpoint:(NSXPCListenerEndpoint *)arg2 completionBlock:(void (^)(unsigned long long, long long, NSError *))arg3;\n- (void)localGeneralPasteboardCompletionBlock:(void (^)(PBItemCollection *, NSError *))arg1;\n- (void)pasteboardWithName:(NSString *)arg1 createIfNeeded:(_Bool)arg2 completionBlock:(void (^)(PBItemCollection *, NSError *))arg3;\n- (void)helloCompletionBlock:(void (^)(void))arg1;\n@end\n'
p558
sS'UAPasteboardClientProtocol'
p559
S'@protocol UAPasteboardClientProtocol <NSObject>\n- (void)pasteboardWillBeFetched:(void (^)(void))arg1;\n- (void)remotePasteboardAvailable:(_Bool)arg1;\n@end\n'
p560
ssS'System/Library/PrivateFrameworks/AssistantServices.framework/XPCServices/com.apple.siri.acousticsignature.xpc/com.apple.siri.acousticsignature'
p561
(dp562
sS'System/Library/PrivateFrameworks/AssistantServices.framework/assistant_service'
p563
(dp564
S'NSXPCListenerDelegate'
p565
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p566
sS'ASServicesMonitorDelegate'
p567
S'@protocol ASServicesMonitorDelegate\n- (void)serviceMonitorWillCrashAssistantServiceDueToPluginAtPath:(NSString *)arg1 reply:(void (^)(void))arg2;\n@end\n'
p568
sS'ASSyncConnectionDelegate'
p569
S'@protocol ASSyncConnectionDelegate\n- (void)sendSyncChunksWithPreAnchor:(NSString *)arg1 postAnchor:(NSString *)arg2 updates:(NSArray *)arg3 deletes:(NSArray *)arg4 validity:(NSString *)arg5 forRequestUUID:(NSUUID *)arg6 reply:(void (^)(_Bool))arg7;\n@end\n'
p570
sS'AFServiceHelper'
p571
S'@protocol AFServiceHelper <NSObject>\n- (_Bool)isTimeoutSuspended;\n- (void)handleCommand:(SABaseCommand *)arg1 completion:(void (^)(SABaseCommand *, NSError *))arg2;\n- (_Bool)isDeviceLockedWithPasscode;\n- (NSString *)assistantLocalizedStringForKey:(NSString *)arg1 table:(NSString *)arg2 bundle:(NSBundle *)arg3;\n- (void)dismissAssistant;\n- (_Bool)openSensitiveURL:(NSURL *)arg1;\n@end\n'
p572
sS'AFProviderService'
p573
S'@protocol AFProviderService <NSObject>\n- (oneway void)runMaintenanceWorkForServicePath:(NSString *)arg1 className:(NSString *)arg2 completion:(void (^)(void))arg3;\n- (oneway void)preheatBundleForServicePath:(NSString *)arg1;\n- (oneway void)clearDomainObjectsForServicePath:(NSString *)arg1 className:(NSString *)arg2;\n- (oneway void)fetchCurrentSyncSnapshotForServicePath:(NSString *)arg1 className:(NSString *)arg2 key:(NSString *)arg3 completion:(void (^)(AFSyncSnapshot *))arg4;\n- (oneway void)beginSyncForServicePath:(NSString *)arg1 className:(NSString *)arg2 requestUUID:(NSUUID *)arg3 info:(AFSyncInfo *)arg4 reply:(void (^)(void))arg5;\n- (oneway void)doCommandForServicePath:(NSString *)arg1 className:(NSString *)arg2 infoDictionary:(NSDictionary *)arg3 reply:(void (^)(NSDictionary *, NSArray *, NSError *))arg4;\n@end\n'
p574
ssS'System/Library/PrivateFrameworks/TelephonyUtilities.framework/callservicesd'
p575
(dp576
sS'System/Library/AppRemovalServices/com.apple.tips.appremoval.xpc/com.apple.tips.appremoval'
p577
(dp578
S'LSAppRemovalServiceProtocol'
p579
S'@protocol LSAppRemovalServiceProtocol <NSObject>\n- (void)removeAppWithReply:(void (^)(NSError *))arg1;\n@end\n'
p580
ssS'System/Library/PrivateFrameworks/NanoSystemSettings.framework/nanosystemsettingsd'
p581
(dp582
S'IDSServiceDelegate'
p583
S'@protocol IDSServiceDelegate <NSObject>\n\n@optional\n- (void)service:(IDSService *)arg1 didSwitchActivePairedDevice:(IDSDevice *)arg2 acknowledgementBlock:(void (^)(void))arg3;\n- (void)serviceAllowedTrafficClassifiersDidReset:(IDSService *)arg1;\n- (void)serviceSpaceDidBecomeAvailable:(IDSService *)arg1;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 inviteReceivedForSession:(IDSSession *)arg3 fromID:(NSString *)arg4 withContext:(NSData *)arg5;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 inviteReceivedForSession:(IDSSession *)arg3 fromID:(NSString *)arg4 withOptions:(NSDictionary *)arg5;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 inviteReceivedForSession:(IDSSession *)arg3 fromID:(NSString *)arg4;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 identifier:(NSString *)arg3 hasBeenDeliveredWithContext:(id)arg4;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 identifier:(NSString *)arg3 didSendWithSuccess:(_Bool)arg4 error:(NSError *)arg5 context:(IDSMessageContext *)arg6;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 identifier:(NSString *)arg3 didSendWithSuccess:(_Bool)arg4 error:(NSError *)arg5;\n- (void)service:(IDSService *)arg1 connectedDevicesChanged:(NSArray *)arg2;\n- (void)service:(IDSService *)arg1 nearbyDevicesChanged:(NSArray *)arg2;\n- (void)service:(IDSService *)arg1 devicesChanged:(NSArray *)arg2;\n- (void)service:(IDSService *)arg1 activeAccountsChanged:(NSSet *)arg2;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingResourceAtURL:(NSURL *)arg3 metadata:(NSDictionary *)arg4 fromID:(NSString *)arg5 context:(IDSMessageContext *)arg6;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingResourceAtURL:(NSURL *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingUnhandledProtobuf:(IDSProtobuf *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingData:(NSData *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingMessage:(NSDictionary *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;\n@end\n'
p584
sS'NSXPCListenerDelegate'
p585
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p586
sS'NSSServerProtocol'
p587
S'@protocol NSSServerProtocol <NSObject>\n- (void)enableAirplaneMode:(_Bool)arg1 completionHandler:(void (^)(NSError *))arg2;\n@end\n'
p588
sS'NSSConnectionHandlerDelegate'
p589
S'@protocol NSSConnectionHandlerDelegate <NSObject>\n- (void)connectionHandlerLostConnection:(NSSConnectionHandler *)arg1;\n@end\n'
p590
sS'NSSIDSServiceDelegate'
p591
S'@protocol NSSIDSServiceDelegate\n- (_Bool)messageIdentifier:(NSString *)arg1 hasBeenDeliveredWithContext:(id)arg2;\n- (_Bool)messageIdentifier:(NSString *)arg1 didSendWithSuccess:(_Bool)arg2 error:(NSError *)arg3;\n@end\n'
p592
ssS'private/var/staged_system_apps/MobileMail.app/PlugIns/DiagnosticExtension.appex/DiagnosticExtension'
p593
(dp594
sS'System/Library/PrivateFrameworks/DataDetectorsUI.framework/XPCServices/com.apple.datadetectors.AddToRecentsService.xpc/com.apple.datadetectors.AddToRecentsService'
p595
(dp596
sS'usr/sbin/filecoordinationd'
p597
(dp598
sS'usr/libexec/pkd'
p599
(dp600
sS'System/Library/Frameworks/ReplayKit.framework/PlugIns/RPBroadcastActivityViewControllerExtension.appex/RPBroadcastActivityViewControllerExtension'
p601
(dp602
S'NSXPCConnectionDelegate'
p603
S'@protocol NSXPCConnectionDelegate <NSObject>\n\n@optional\n- (void)connection:(NSXPCConnection *)arg1 handleInvocation:(NSInvocation *)arg2 isReply:(_Bool)arg3;\n- (id <NSSecureCoding>)replacementObjectForXPCConnection:(NSXPCConnection *)arg1 encoder:(NSXPCCoder *)arg2 object:(id)arg3;\n@end\n'
p604
sS'RPClientProtocol'
p605
S'@protocol RPClientProtocol <NSObject>\n- (oneway void)recordingTimerDidUpdate:(NSString *)arg1;\n- (oneway void)recordingLockInterrupted:(NSError *)arg1;\n- (oneway void)captureHandlerWithAudioSample:(NSData *)arg1 absdData:(NSData *)arg2 itemCount:(long long)arg3 bufferType:(long long)arg4 timingData:(NSData *)arg5;\n- (oneway void)captureHandlerWithSample:(RPIOSurfaceObject *)arg1 timingData:(NSData *)arg2;\n- (oneway void)updateBroadcastURL:(NSURL *)arg1;\n- (oneway void)updateBroadcastServiceInfo:(NSDictionary *)arg1;\n- (oneway void)stopRecordingWithError:(NSError *)arg1 movieURL:(NSURL *)arg2;\n- (oneway void)updateScreenRecordingState:(_Bool)arg1;\n@end\n'
p606
sS'RPDaemonProtocol'
p607
S'@protocol RPDaemonProtocol <NSObject>\n- (oneway void)reportCameraUsage:(int)arg1;\n- (oneway void)setMicrophoneEnabledPersistent:(_Bool)arg1;\n- (oneway void)setBroadcastURL:(NSString *)arg1;\n- (oneway void)setHasUserConsentForMicrophone:(_Bool)arg1;\n- (oneway void)setHasUserConsentForCamera:(_Bool)arg1;\n- (oneway void)synchronousGetCurrentState:(void (^)(NSDictionary *))arg1;\n- (oneway void)clientDidResignActive;\n- (oneway void)clientDidBecomeActive;\n- (oneway void)discardRecordingWithHandler:(void (^)(void))arg1;\n- (oneway void)updateProcessIDForAudioCaptureWithPID:(int)arg1;\n- (oneway void)setMicrophoneEnabled:(_Bool)arg1;\n- (oneway void)resumeRecordingWithWindowLayerContextID:(unsigned int)arg1;\n- (oneway void)pauseRecording;\n- (oneway void)saveVideoToCameraRoll:(NSURL *)arg1 handler:(void (^)(NSError *))arg2;\n- (oneway void)stopRecordingWithStartClipDuration:(double)arg1 endClipDuration:(double)arg2 handler:(void (^)(NSURL *, NSError *))arg3;\n- (oneway void)stopRecordingWithHandler:(void (^)(NSURL *, NSError *))arg1;\n- (oneway void)getSystemBroadcastExtensionInfo:(void (^)(NSArray *, NSError *))arg1;\n- (oneway void)getCurrentBroadcastImages:(void (^)(UIImage *, UIImage *))arg1;\n- (oneway void)setupBroadcastWithHostBundleID:(NSString *)arg1 broadcastExtensionBundleID:(NSString *)arg2 broadcastConfigurationData:(NSData *)arg3 userInfo:(NSDictionary *)arg4 handler:(void (^)(NSError *))arg5;\n- (oneway void)startRecordingWindowLayerContextIDs:(NSArray *)arg1 windowSize:(struct CGSize)arg2 microphoneEnabled:(_Bool)arg3 cameraEnabled:(_Bool)arg4 broadcast:(_Bool)arg5 systemRecording:(_Bool)arg6 captureEnabled:(_Bool)arg7 listenerEndpoint:(NSXPCListenerEndpoint *)arg8 withHandler:(void (^)(NSError *, _Bool, _Bool))arg9;\n@end\n'
p608
ssS'System/Library/AppRemovalServices/com.apple.podcasts.appremoval.xpc/com.apple.podcasts.appremoval'
p609
(dp610
sS'System/Library/Frameworks/Social.framework/XPCServices/com.apple.facebook.xpc/com.apple.facebook'
p611
(dp612
sS'usr/libexec/tzd'
p613
(dp614
sS'System/Library/PrivateFrameworks/PersonaKit.framework/personad'
p615
(dp616
S'NSXPCListenerDelegate'
p617
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p618
ssS'System/Library/PrivateFrameworks/CompassUI.framework/XPCServices/CompassCalibration.xpc/CompassCalibration'
p619
(dp620
sS'System/Library/Frameworks/IdentityLookup.framework/XPCServices/com.apple.IdentityLookup.MessageFilter.xpc/com.apple.IdentityLookup.MessageFilter'
p621
(dp622
sS'System/Library/PrivateFrameworks/CallHistory.framework/Support/CallHistorySyncHelper'
p623
(dp624
S'NSXPCListenerDelegate'
p625
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p626
sS'SyncProtocol'
p627
S'@protocol SyncProtocol <NSObject>\n- (void)moveCallsFromTempDatabase;\n- (void)bootUp:(void (^)(unsigned char))arg1;\n- (void)migrateCallDB:(NSArray *)arg1 withReply:(void (^)(_Bool))arg2;\n- (void)clearSyncToken:(void (^)(NSString *))arg1;\n- (void)sync:(void (^)(NSString *))arg1;\n- (void)appendTransactions:(NSArray *)arg1;\n- (void)resetCallTimers:(void (^)(_Bool))arg1;\n@end\n'
p628
ssS'System/Library/PrivateFrameworks/VoiceMemos.framework/Support/voicememod'
p629
(dp630
S'NSXPCListenerDelegate'
p631
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p632
sS'NSXPCConnectionDelegate'
p633
S'@protocol NSXPCConnectionDelegate <NSObject>\n\n@optional\n- (void)connection:(NSXPCConnection *)arg1 handleInvocation:(NSInvocation *)arg2 isReply:(_Bool)arg3;\n- (id <NSSecureCoding>)replacementObjectForXPCConnection:(NSXPCConnection *)arg1 encoder:(NSXPCCoder *)arg2 object:(id)arg3;\n@end\n'
p634
sS'RCSSavedRecordingServiceProtocol'
p635
S'@protocol RCSSavedRecordingServiceProtocol <NSObject>\n- (oneway void)updateSearchMetadataWithRecordingURIsToInsert:(NSArray *)arg1 recordingURIsToUpdate:(NSArray *)arg2 recordingURIsToDelete:(NSArray *)arg3 completionBlock:(void (^)(NSError *))arg4;\n- (oneway void)clearAndReloadSearchMetadataWithCompletionBlock:(void (^)(NSError *))arg1;\n- (oneway void)reloadExistingSearchMetadataWithCompletionBlock:(void (^)(NSError *))arg1;\n- (oneway void)fetchCompositionAVURLsBeingModified:(void (^)(NSSet *))arg1;\n- (oneway void)fetchCompositionAVURLsBeingExported:(void (^)(NSSet *))arg1;\n- (oneway void)enableOrphanHandlingWithCompletionBlock:(void (^)(NSError *))arg1;\n- (oneway void)disableOrphanHandlingWithCompletionBlock:(void (^)(NSError *))arg1;\n- (oneway void)enableOrphanedFragmentCleanupForCompositionAVURL:(NSURL *)arg1;\n- (oneway void)disableOrphanedFragmentCleanupForCompositionAVURL:(NSURL *)arg1 completionBlock:(void (^)(NSError *))arg2;\n- (oneway void)endAccessSessionWithToken:(RCSSavedRecordingAccessToken *)arg1;\n- (oneway void)removeAllUserDataWithCompletion:(void (^)(NSError *))arg1;\n- (oneway void)prepareToTrimCompositionAVURL:(NSURL *)arg1 accessRequestHandler:(void (^)(RCSSavedRecordingAccessToken *, NSError *))arg2;\n- (oneway void)prepareToExportCompositionAVURL:(NSURL *)arg1 cacheWaveform:(_Bool)arg2 accessRequestHandler:(void (^)(RCSSavedRecordingAccessToken *, NSError *))arg3;\n- (oneway void)prepareToPreviewCompositionAVURL:(NSURL *)arg1 accessRequestHandler:(void (^)(RCSSavedRecordingAccessToken *, NSError *))arg2;\n- (oneway void)prepareToCaptureToCompositionAVURL:(NSURL *)arg1 accessRequestHandler:(void (^)(RCSSavedRecordingAccessToken *, NSError *))arg2;\n- (oneway void)importRecordingWithSourceAudioURL:(NSURL *)arg1 name:(NSString *)arg2 date:(NSDate *)arg3 importCompletionBlock:(void (^)(NSURL *, NSError *))arg4;\n@end\n'
p636
sS'AssetAccessSessionControllerDelegate'
p637
S'@protocol AssetAccessSessionControllerDelegate <NSObject>\n- (void)assetAccessSessionController:(AssetAccessSessionController *)arg1 sessionDidChangedFromActiveSessions:(NSArray *)arg2 toActiveSessions:(NSArray *)arg3;\n@end\n'
p638
ssS'System/Library/Frameworks/LocalAuthentication.framework/Support/coreauthd'
p639
(dp640
sS'System/Library/PrivateFrameworks/PairedUnlock.framework/pairedunlockd'
p641
(dp642
S'NSXPCListenerDelegate'
p643
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p644
sS'PUUnlockServer'
p645
S'@protocol PUUnlockServer <NSObject>\n- (void)requestDeviceSetWristDetectionDisabled:(_Bool)arg1 completion:(void (^)(NSError *))arg2;\n- (void)queryRemoteDeviceState:(void (^)(PURemoteDeviceState *, NSError *))arg1;\n- (void)didCompleteRemoteAction:(_Bool)arg1 error:(NSError *)arg2;\n- (void)requestRemoteDeviceRemoveLockout;\n- (void)requestRemoteDeviceUnlockNotification;\n- (void)requestRemoteDeviceRemoteAction:(long long)arg1 type:(long long)arg2;\n- (void)disableOnlyRemoteUnlock;\n- (void)enableOnlyRemoteUnlockWithPasscode:(NSString *)arg1;\n- (void)unpairForUnlock;\n- (void)pairForUnlockWithPasscode:(NSString *)arg1;\n- (void)checkIn;\n@end\n'
p646
sS'PUPairedSyncObserverDelegate'
p647
S'@protocol PUPairedSyncObserverDelegate <NSObject>\n- (void)syncObserverRequestsWristDetectionReset:(PUPairedSyncObserver *)arg1;\n@end\n'
p648
sS'MCProfileConnectionObserver'
p649
S'@protocol MCProfileConnectionObserver <NSObject>\n\n@optional\n- (void)profileConnectionDidReceiveAppWhitelistChangedNotification:(MCProfileConnection *)arg1 userInfo:(NSDictionary *)arg2;\n- (void)profileConnectionDidReceiveDefaultsChangedNotification:(MCProfileConnection *)arg1 userInfo:(NSDictionary *)arg2;\n- (void)profileConnectionDidReceiveEffectiveSettingsChangedNotification:(MCProfileConnection *)arg1 userInfo:(NSDictionary *)arg2;\n- (void)profileConnectionDidReceiveProfileListChangedNotification:(MCProfileConnection *)arg1 userInfo:(NSDictionary *)arg2;\n- (void)profileConnectionDidReceivePasscodePolicyChangedNotification:(MCProfileConnection *)arg1 userInfo:(NSDictionary *)arg2;\n- (void)profileConnectionDidReceivePasscodeChangedNotification:(MCProfileConnection *)arg1 userInfo:(NSDictionary *)arg2;\n- (void)profileConnectionDidReceiveRestrictionChangedNotification:(MCProfileConnection *)arg1 userInfo:(NSDictionary *)arg2;\n@end\n'
p650
sS'PUPeerDelegate'
p651
S'@protocol PUPeerDelegate <NSObject>\n- (void)peer:(PUPeer *)arg1 wantsNotificationOfNextUnlock:(_Bool)arg2;\n- (void)peer:(PUPeer *)arg1 remoteDeviceRequestsRemoteAction:(long long)arg2 type:(long long)arg3 existingPasscode:(NSString *)arg4 completionHandler:(void (^)(PURemoteDeviceState *, NSError *))arg5;\n- (void)peer:(PUPeer *)arg1 didNotifyRemoteState:(PURemoteDeviceState *)arg2 error:(NSError *)arg3;\n- (void)peerRemoteDeviceDidUnlock:(PUPeer *)arg1;\n- (void)peer:(PUPeer *)arg1 didPairForUnlock:(_Bool)arg2 error:(NSError *)arg3;\n@end\n'
p652
ssS'System/Library/Frameworks/MobileCoreServices.framework/XPCServices/lsdiconservice.xpc/lsdiconservice'
p653
(dp654
sS'System/Library/PrivateFrameworks/iOSDiagnostics.framework/iosdiagnosticsd'
p655
(dp656
sS'System/Library/PrivateFrameworks/AssistantServices.framework/assistantd'
p657
(dp658
S'AFAnalyticsObservationService'
p659
S'@protocol AFAnalyticsObservationService <NSObject>\n- (oneway void)flushWithCompletion:(void (^)(void))arg1;\n- (oneway void)observeWithCompletion:(void (^)(void))arg1;\n@end\n'
p660
sS'AFSettingsService'
p661
S'@protocol AFSettingsService <NSObject>\n- (oneway void)getDevicesWithAvailablePHSAssetsForLanguage:(NSString *)arg1 completion:(void (^)(NSArray *))arg2;\n- (oneway void)disableAndDeleteCloudSyncWithCompletion:(void (^)(NSError *))arg1;\n- (oneway void)fetchExperimentContextWithCompletion:(void (^)(AFExperimentContext *, NSError *))arg1;\n- (oneway void)fetchExperimentConfigurationsWithCompletion:(void (^)(NSArray *, NSError *))arg1;\n- (oneway void)sendMetricsToServerWithCompletion:(void (^)(NSError *))arg1;\n- (oneway void)resetAnalyticsStoreWithCompletion:(void (^)(NSError *))arg1;\n- (oneway void)purgeAnalyticsStoreWithCompletion:(void (^)(NSError *))arg1;\n- (oneway void)fetchEventRecordsFromAnalyticsStoreAtPath:(NSString *)arg1 completion:(void (^)(NSArray *, NSError *))arg2;\n- (oneway void)setDESPolicyCDNOverride:(NSString *)arg1 completion:(void (^)(NSError *))arg2;\n- (oneway void)disableDESWithCompletion:(void (^)(NSError *))arg1;\n- (oneway void)setDESLotteryWinOverrideEnabled:(_Bool)arg1 completion:(void (^)(NSError *))arg2;\n- (oneway void)setDESRecordingAlwaysIsEnabled:(_Bool)arg1 completion:(void (^)(NSError *))arg2;\n- (oneway void)runLiveAdaptationRecipeEvaluationWithBaseURL:(NSURL *)arg1 completion:(void (^)(NSError *))arg2;\n- (oneway void)runAdaptationRecipeEvaluation:(NSDictionary *)arg1 language:(NSString *)arg2 completion:(void (^)(NSArray *, NSArray *))arg3;\n- (oneway void)stopAllAudioPlaybackRequests:(_Bool)arg1;\n- (oneway void)stopAudioPlaybackRequest:(AFAudioPlaybackRequest *)arg1 immediately:(_Bool)arg2;\n- (oneway void)startAudioPlaybackRequest:(AFAudioPlaybackRequest *)arg1 completion:(void (^)(NSError *))arg2;\n- (oneway void)getPeerIdentifiers:(void (^)(NSArray *))arg1;\n- (oneway void)startRemoteRequest:(AFRequestInfo *)arg1 onPeer:(NSString *)arg2 completion:(void (^)(NSError *))arg3;\n- (oneway void)startUIRequestWithSpeechAudioFileURL:(NSURL *)arg1;\n- (oneway void)startUIRequestWithText:(NSString *)arg1;\n- (oneway void)setOfflineDictationProfileOverridePath:(NSString *)arg1 completion:(void (^)(NSError *))arg2;\n- (oneway void)createOfflineSpeechProfileWithLanguage:(NSString *)arg1 JSONData:(NSData *)arg2 completion:(void (^)(NSData *, NSError *))arg3;\n- (oneway void)updateOfflineSpeechProfileWithLanguage:(NSString *)arg1 completion:(void (^)(NSError *))arg2;\n- (oneway void)getOfflineDictationStatusWithCompletion:(void (^)(NSDictionary *, NSError *))arg1;\n- (oneway void)setLanguage:(NSString *)arg1 withCompletion:(void (^)(void))arg2;\n- (oneway void)setOutputVoice:(AFVoiceInfo *)arg1 withCompletion:(void (^)(void))arg2;\n- (oneway void)getAvailableVoicesIncludingAssetInfo:(_Bool)arg1 completion:(void (^)(NSArray *))arg2;\n- (oneway void)_runServiceMaintenance;\n- (oneway void)_startDeepSyncVerificationForKeys:(NSArray *)arg1;\n- (void)_setSyncVerificationNeededAndFullReportNeeded:(_Bool)arg1 shouldPostNotification:(_Bool)arg2 completion:(void (^)(NSArray *))arg3;\n- (oneway void)_fetchPeerData:(void (^)(void))arg1;\n- (oneway void)_syncDataWithAnchorKeys:(NSArray *)arg1 forceReset:(_Bool)arg2 reason:(NSString *)arg3 reply:(void (^)(NSArray *))arg4;\n- (oneway void)_clearSyncNeededForKey:(NSString *)arg1;\n- (oneway void)_setSyncNeededForReason:(NSString *)arg1;\n- (oneway void)barrierWithReply:(void (^)(void))arg1;\n- (oneway void)_killDaemon;\n- (oneway void)setDictationEnabled:(_Bool)arg1;\n- (oneway void)setAssistantEnabled:(_Bool)arg1;\n- (oneway void)setActiveAccountIdentifier:(NSString *)arg1;\n- (oneway void)deleteAccountWithIdentifier:(NSString *)arg1;\n- (oneway void)saveAccountWithMessageDictionary:(NSDictionary *)arg1 setActive:(_Bool)arg2;\n- (oneway void)retrieveAccountMessageDictionariesWithReply:(void (^)(NSArray *))arg1;\n- (oneway void)fetchSupportedLanguagesWithReply:(void (^)(NSArray *, NSError *))arg1;\n@end\n'
p662
sS'CSSpeechControllerDelegate'
p663
S'@protocol CSSpeechControllerDelegate <NSObject>\n- (void)speechControllerLPCMRecordBufferAvailable:(CSSpeechController *)arg1 buffer:(NSData *)arg2;\n- (void)speechControllerRecordBufferAvailable:(CSSpeechController *)arg1 buffers:(NSArray *)arg2 recordedAt:(unsigned long long)arg3;\n\n@optional\n- (void)speechControllerRequestsOperation:(unsigned long long)arg1 forReason:(unsigned long long)arg2;\n- (void)speechControllerEndRecordInterruption:(CSSpeechController *)arg1;\n- (void)speechControllerBeginRecordInterruption:(CSSpeechController *)arg1 withContext:(NSDictionary *)arg2;\n- (void)speechControllerBeginRecordInterruption:(CSSpeechController *)arg1;\n- (void)speechControllerRecordHardwareConfigurationDidChange:(CSSpeechController *)arg1 toConfiguration:(long long)arg2;\n- (void)speechControllerDidDetectEndpoint:(CSSpeechController *)arg1 ofType:(long long)arg2 atTime:(double)arg3;\n- (void)speechControllerDidDetectStartpoint:(CSSpeechController *)arg1;\n- (void)speechControllerDidStopRecording:(CSSpeechController *)arg1 forReason:(long long)arg2;\n- (void)speechControllerDidStartRecording:(CSSpeechController *)arg1 successfully:(_Bool)arg2 error:(NSError *)arg3;\n- (void)speechControllerDidDetectVoiceTriggerTwoShot:(CSSpeechController *)arg1 atTime:(double)arg2;\n@end\n'
p664
sS'AFAnalyticsService'
p665
S'@protocol AFAnalyticsService <NSObject>\n- (oneway void)stageEvents:(NSArray *)arg1 completion:(void (^)(void))arg2;\n\n@optional\n- (oneway void)stageEvents:(NSArray *)arg1;\n- (oneway void)stageEvent:(AFAnalyticsEvent *)arg1;\n@end\n'
p666
sS'NSXPCListenerDelegate'
p667
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p668
sS'ADAudioStateListening'
p669
S'@protocol ADAudioStateListening <NSObject>\n- (void)audioStateAnnouncer:(id <ADAudioStateAnnouncing>)arg1 didChangeAudioStateFrom:(AFAudioState *)arg2 to:(AFAudioState *)arg3;\n@end\n'
p670
sS'ADCommandCenterRequestDelegate'
p671
S'@protocol ADCommandCenterRequestDelegate <NSObject>\n- (void)adRequestEncounteredIntermediateError:(NSError *)arg1;\n- (void)adRequestDidCompleteWithSuccess:(_Bool)arg1 error:(NSError *)arg2;\n- (void)adRequestDidReceiveCommand:(AceObject<SAAceCommand> *)arg1 reply:(void (^)(AceObject<SAAceCommand> *))arg2;\n- (void)adRequestWillReceiveCommand:(AceObject<SAAceCommand> *)arg1;\n@end\n'
p672
sS'CSEndpointAnalyzerDelegate'
p673
S'@protocol CSEndpointAnalyzerDelegate <NSObject>\n- (void)endpointer:(id <CSEndpointAnalyzer>)arg1 didDetectHardEndpointAtTime:(double)arg2 withMetrics:(CSEndpointerMetrics *)arg3;\n- (void)endpointer:(id <CSEndpointAnalyzer>)arg1 didDetectStartpointAtTime:(double)arg2;\n@end\n'
p674
sS'ADCommandCenterClient'
p675
S'@protocol ADCommandCenterClient <ADCommandCenterRequestDelegate, ADCommandCenterSpeechDelegate>\n- (void)adAudioPlaybackRequestDidStop:(AFAudioPlaybackRequest *)arg1 error:(NSError *)arg2;\n- (void)adAudioPlaybackRequestDidNotStart:(AFAudioPlaybackRequest *)arg1 error:(NSError *)arg2;\n- (void)adAudioPlaybackRequestDidStart:(AFAudioPlaybackRequest *)arg1;\n- (void)adAudioPlaybackRequestWillStart:(AFAudioPlaybackRequest *)arg1;\n- (void)adStartUIRequestWithText:(NSString *)arg1 completion:(void (^)(_Bool))arg2;\n- (void)adHandleIntent:(INIntent *)arg1 inBackgroundAppWithBundleId:(NSString *)arg2 reply:(void (^)(INIntentResponse *, NSError *))arg3;\n- (void)adExtensionRequestFinishedForApplication:(NSString *)arg1 error:(NSError *)arg2;\n- (void)adExtensionRequestWillStartForApplication:(NSString *)arg1;\n- (void)adWantsToCacheImage:(INImage *)arg1;\n- (void)adQuickStopWasHandledWithActions:(unsigned long long)arg1;\n- (void)adRequestRequestedDismissAssistant;\n- (void)adServerRequestsTTSStateUnmuted:(_Bool)arg1;\n- (void)adInvalidateCurrentUserActivity;\n- (void)adSetUserActivityInfo:(NSDictionary *)arg1 webpageURL:(NSURL *)arg2;\n- (void)adAcousticIDRequestDidFinishSuccessfully:(_Bool)arg1;\n- (void)adMusicWasDetected;\n- (void)adAcousticIDRequestWillStart;\n- (_Bool)adTextToSpeechIsMuted;\n- (void)adGetBulletinContext:(void (^)(NSArray *))arg1;\n- (void)adRequestRequestedOpenURL:(NSURL *)arg1 completion:(void (^)(_Bool))arg2;\n- (void)adRequestRequestedOpenApplicationWithBundleID:(NSString *)arg1 URL:(NSURL *)arg2 completion:(void (^)(_Bool))arg3;\n@end\n'
p676
sS'ADHandsFreeStateChangedObserver'
p677
S'@protocol ADHandsFreeStateChangedObserver\n- (void)adShouldSpeakStateDidChange:(_Bool)arg1;\n@end\n'
p678
sS'SiriCoreLocalSpeechRecognizerDelegate'
p679
S'@protocol SiriCoreLocalSpeechRecognizerDelegate <NSObject>\n- (void)localSpeechRecognizer:(SiriCoreLocalSpeechRecognizer *)arg1 didCompletionRecognitionWithStatistics:(NSDictionary *)arg2 error:(NSError *)arg3;\n- (void)localSpeechRecognizer:(SiriCoreLocalSpeechRecognizer *)arg1 didRecognizePackage:(AFSpeechPackage *)arg2;\n- (void)localSpeechRecognizer:(SiriCoreLocalSpeechRecognizer *)arg1 didRecognizeRawEagerRecognitionCandidate:(AFSpeechRecognition *)arg2;\n- (void)localSpeechRecognizer:(SiriCoreLocalSpeechRecognizer *)arg1 didProcessAudioDuration:(double)arg2;\n- (void)localSpeechRecognizer:(SiriCoreLocalSpeechRecognizer *)arg1 didRecognizeTokens:(NSArray *)arg2;\n@end\n'
p680
sS'ADCommandCenterSyncDelegate'
p681
S'@protocol ADCommandCenterSyncDelegate <NSObject>\n- (void)adSyncVerificationServerReport:(NSDictionary *)arg1;\n- (void)adSyncVerificationPartialResult:(NSDictionary *)arg1;\n@end\n'
p682
sS'ADCommandCenterSpeechDelegate'
p683
S'@protocol ADCommandCenterSpeechDelegate <NSObject>\n- (_Bool)adWaitingForAudioFile;\n- (void)adSpeechRecordingDidRecognizePhrases:(NSArray *)arg1 sessionUUID:(NSString *)arg2 refId:(NSString *)arg3;\n- (void)adSpeechRecordingDidRecognizeTokens:(NSArray *)arg1 sessionUUID:(NSString *)arg2;\n- (void)adSpeechRecognizedPartialResult:(SASSpeechPartialResult *)arg1 usingSpeechModel:(NSString *)arg2;\n- (void)adSpeechRecognitionDidFail:(NSError *)arg1 sessionUUID:(NSString *)arg2;\n- (void)adSpeechRecognized:(SASSpeechRecognized *)arg1 usingSpeechModel:(NSString *)arg2 sessionUUID:(NSString *)arg3;\n- (void)adSpeechRecordingDidFail:(NSError *)arg1 sessionUUID:(NSString *)arg2;\n- (void)adSpeechRecordingDidCancelWithSessionUUID:(NSString *)arg1;\n- (void)adSpeechRecordingDidEndWithSessionUUID:(NSString *)arg1;\n- (void)adSpeechRecordingDidChangeAVRecordRoute:(NSString *)arg1 sessionUUID:(NSString *)arg2;\n- (void)adSpeechRecordingDidBeginOnAVRecordRoute:(NSString *)arg1 audioSessionID:(unsigned int)arg2 sessionUUID:(NSString *)arg3;\n- (void)adSpeechRecordingWillBeginWithInputAudioPowerXPCWrapper:(AFXPCWrapper *)arg1 sessionUUID:(NSString *)arg2;\n\n@optional\n- (void)adSpeechRecordingDidRecognizePhrases:(NSArray *)arg1 utterances:(NSArray *)arg2;\n- (void)adSpeechRecognitionWillBeginRecognitionUpdateForTask:(NSString *)arg1;\n- (void)adSpeechRecognitionDidFinishUpdateWithError:(NSError *)arg1;\n- (void)adSpeechRecordingPerformTwoShotPromptWithType:(long long)arg1 sessionUUID:(NSString *)arg2 completion:(void (^)(double, double, NSError *))arg3;\n- (void)adSpeechRecordingDidDetectStartPointWithSessionUUID:(NSString *)arg1;\n- (void)adSpeechDidFindVoiceSearchFinalResult:(SASVoiceSearchFinalResult *)arg1;\n- (void)adSpeechDidFindVoiceSearchPartialResult:(SASVoiceSearchPartialResult *)arg1;\n- (void)adPronunciationRecognized:(SASPronunciationRecognized *)arg1 usingSpeechModel:(NSString *)arg2 sessionUUID:(NSString *)arg3;\n- (void)adAudioFileFinishedWriting:(NSFileHandle *)arg1 error:(NSError *)arg2 sessionUUID:(NSString *)arg3;\n- (void)adSpeechRecognizedStructuredResult:(SAStructuredDictationResult *)arg1 usingSpeechModel:(NSString *)arg2 sessionUUID:(NSString *)arg3;\n@end\n'
p684
sS'ADAcousticFingerprinterDelegate'
p685
S'@protocol ADAcousticFingerprinterDelegate <NSObject>\n- (void)acousticFingerprinter:(ADAcousticFingerprinter *)arg1 hasFingerprint:(NSData *)arg2 duration:(double)arg3;\n@end\n'
p686
sS'PSYSyncCoordinatorDelegate'
p687
S'@protocol PSYSyncCoordinatorDelegate <NSObject>\n\n@optional\n- (void)syncCoordinatorDidReceiveStartSyncCommand:(PSYSyncCoordinator *)arg1;\n- (void)supportsMigrationSync;\n- (void)syncCoordinatorDidChangeSyncRestriction:(PSYSyncCoordinator *)arg1;\n- (void)syncCoordinator:(PSYSyncCoordinator *)arg1 didInvalidateSyncSession:(PSYServiceSyncSession *)arg2;\n- (void)syncCoordinator:(PSYSyncCoordinator *)arg1 beginSyncSession:(PSYServiceSyncSession *)arg2;\n@end\n'
p688
sS'AFClientLiteRemoteCommandHandling'
p689
S'@protocol AFClientLiteRemoteCommandHandling\n- (oneway void)handleRemoteCommand:(SABaseCommand *)arg1 isOneWay:(_Bool)arg2 completion:(void (^)(_Bool, NSError *))arg3;\n@end\n'
p690
sS'ADSpeechCapturing'
p691
S'@protocol ADSpeechCapturing <NSObject>\n- (void)enforcePreviousEndpointHint;\n- (void)updateEndpointHintForDuration:(double)arg1 completion:(void (^)(_Bool, NSArray *))arg2;\n- (void)updateServerEndpointFeatures:(CSServerEndpointFeatures *)arg1;\n- (void)playRecordingStartAlert;\n- (void)getLastStartpointTimestampAndCurrentTime:(void (^)(double, double))arg1;\n- (void)setIsDriving:(_Bool)arg1;\n- (void)forceSuccessAudioAlertOnStop;\n- (void)setFingerprintingEnabled:(_Bool)arg1;\n- (void)cancelSpeechCaptureSuppressingAlert:(_Bool)arg1;\n- (void)stopSpeechCaptureForEvent:(long long)arg1 suppressAlert:(_Bool)arg2;\n- (void)setFingerprintWasRecognized;\n- (void)setSpeechWasRecognizedForElapsedTime:(double)arg1 isFinal:(_Bool)arg2;\n- (void)setSpeechRequestOptions:(AFSpeechRequestOptions *)arg1;\n- (void)suspendAutomaticEndpointingInRange:(struct AFTimeRange)arg1;\n- (void)setUseAutomaticEndpointing:(_Bool)arg1;\n- (void)releaseAudioSession;\n- (void)setDelegate:(id <ADSpeechCapturingDelegate>)arg1;\n- (id)initWithQueue:(NSObject<OS_dispatch_queue> *)arg1;\n- (id)init;\n@end\n'
p692
sS'AFClientService'
p693
S'@protocol AFClientService <NSObject>\n- (oneway void)_sendFeedbackToAppPreferencesPredictorForMetricsContext:(NSString *)arg1 selectedBundleId:(NSString *)arg2;\n- (oneway void)_refreshAssistantValidation;\n- (oneway void)_startSpeechWithURL:(NSURL *)arg1 isNarrowBand:(_Bool)arg2;\n- (oneway void)_requestBarrierWithReply:(void (^)(void))arg1;\n- (oneway void)_barrierWithReply:(void (^)(void))arg1;\n- (oneway void)_clearAssistantInfoForAccountIdentifier:(NSString *)arg1;\n- (oneway void)_fetchAppContextForApplicationInfo:(AFApplicationInfo *)arg1 reply:(void (^)(NSArray *))arg2;\n- (oneway void)_broadcastCommandDictionary:(NSDictionary *)arg1;\n- (oneway void)_performTaskCommandDictionary:(NSDictionary *)arg1 forBundleIdentifier:(NSString *)arg2 reply:(void (^)(NSDictionary *, NSError *))arg3;\n- (oneway void)_performCommandDictionary:(NSDictionary *)arg1 forBundleIdentifier:(NSString *)arg2 reply:(void (^)(NSDictionary *, NSError *))arg3;\n- (oneway void)_sendLargeData:(NSData *)arg1 reply:(void (^)(NSString *, NSData *))arg2;\n- (oneway void)_pingServiceForIdentifier:(NSString *)arg1 reply:(void (^)(NSDictionary *))arg2;\n- (oneway void)_listInstalledServicesWithReply:(void (^)(NSDictionary *))arg1;\n- (oneway void)adviseSessionArbiterToContinueWithPreviousWinner:(_Bool)arg1;\n- (oneway void)reportIssueForError:(NSError *)arg1 type:(long long)arg2 context:(NSDictionary *)arg3;\n- (oneway void)updateSpeechSynthesisRecord:(AFSpeechSynthesisRecord *)arg1;\n- (oneway void)endUpdateOutputAudioPower;\n- (oneway void)beginUpdateOutputAudioPowerWithReply:(void (^)(AFXPCWrapper *))arg1;\n- (oneway void)stopAllAudioPlaybackRequests:(_Bool)arg1;\n- (oneway void)stopAudioPlaybackRequest:(AFAudioPlaybackRequest *)arg1 immediately:(_Bool)arg2;\n- (oneway void)startAudioPlaybackRequest:(AFAudioPlaybackRequest *)arg1 reply:(void (^)(NSError *))arg2;\n- (oneway void)getSerializedCachedObjectsWithIdentifiers:(NSSet *)arg1 completion:(void (^)(NSDictionary *))arg2;\n- (oneway void)getDeferredObjectsWithIdentifiers:(NSArray *)arg1 completion:(void (^)(NSArray *, NSError *))arg2;\n- (oneway void)recordCancellationMetrics;\n- (oneway void)recordFailureMetricsForError:(NSError *)arg1;\n- (oneway void)recordSuccessMetrics;\n- (oneway void)recordUIMetrics:(AFMetrics *)arg1;\n- (oneway void)recordRequestMetric:(NSString *)arg1 withTimestamp:(double)arg2;\n- (oneway void)telephonyRequestCompleted;\n- (oneway void)prepareForPhoneCall;\n- (oneway void)setAlertContextDirty;\n- (oneway void)setOverriddenApplicationContext:(NSString *)arg1 withContext:(id)arg2;\n- (oneway void)setApplicationContextForApplicationInfos:(NSArray *)arg1 withRefId:(NSString *)arg2;\n- (oneway void)setApplicationContext:(SASetApplicationContext *)arg1;\n- (oneway void)willSetApplicationContextWithRefId:(NSString *)arg1;\n- (oneway void)rollbackClearContext;\n- (oneway void)clearContext;\n- (oneway void)performGenericAceCommand:(NSDictionary *)arg1 interruptOutstandingRequest:(_Bool)arg2 reply:(void (^)(_Bool))arg3;\n- (oneway void)requestStateUpdateWithReply:(void (^)(_Bool, unsigned int))arg1;\n- (oneway void)stopSpeechWithOptions:(AFSpeechRequestOptions *)arg1;\n- (oneway void)rollbackRequest;\n- (oneway void)cancelRequest;\n- (oneway void)updateSpeechOptions:(AFSpeechRequestOptions *)arg1;\n- (oneway void)continuePendingSpeechRequestWithId:(unsigned long long)arg1 fromTimestamp:(double)arg2;\n- (oneway void)startAcousticIDRequestWithOptions:(AFSpeechRequestOptions *)arg1 context:(NSString *)arg2 completion:(void (^)(NSError *))arg3;\n- (oneway void)startSpeechPronunciationRequestWithOptions:(AFSpeechRequestOptions *)arg1 context:(SASPronunciationContext *)arg2 completion:(void (^)(NSError *))arg3;\n- (oneway void)startRecordingForPendingSpeechRequestWithOptions:(AFSpeechRequestOptions *)arg1 requestId:(unsigned long long)arg2 completion:(void (^)(NSError *))arg3;\n- (oneway void)startRequestWithInfo:(AFRequestInfo *)arg1 completion:(void (^)(NSError *))arg2;\n- (oneway void)endSession;\n- (oneway void)didDismissUI;\n- (oneway void)willPresentUIWithReply:(void (^)(void))arg1;\n- (oneway void)setConfiguration:(AFClientConfiguration *)arg1;\n- (oneway void)setCarDNDActive:(_Bool)arg1;\n- (oneway void)setIsStark:(_Bool)arg1;\n- (oneway void)setLockState:(_Bool)arg1 showingLockScreen:(_Bool)arg2;\n- (oneway void)forceAudioSessionInactive;\n- (oneway void)forceAudioSessionActiveWithCompletion:(void (^)(unsigned int, NSError *))arg1;\n- (oneway void)forceAudioSessionActive;\n- (oneway void)boostedPreheatWithStyle:(long long)arg1 completion:(void (^)(void))arg2;\n- (oneway void)preheatWithStyle:(long long)arg1 forOptions:(AFSpeechRequestOptions *)arg2;\n@end\n'
p694
sS'AFDictationService'
p695
S'@protocol AFDictationService <NSObject>\n- (oneway void)requestOfflineDictationSupportForLanguage:(NSString *)arg1 completion:(void (^)(_Bool, NSError *))arg2;\n- (oneway void)getInstalledOfflineLanguagesWithCompletion:(void (^)(NSArray *))arg1;\n- (oneway void)_sendEngagementFeedback:(long long)arg1 voiceQueryIdentifier:(NSString *)arg2;\n- (oneway void)_startDictationWithURL:(NSURL *)arg1 isNarrowBand:(_Bool)arg2 language:(NSString *)arg3 options:(AFDictationOptions *)arg4;\n- (oneway void)recordFailureMetricsForError:(NSError *)arg1;\n- (oneway void)endSession;\n- (oneway void)preheatWithRecordDeviceIdentifier:(NSString *)arg1;\n- (oneway void)preheat;\n- (oneway void)sendSpeechCorrectionInfo:(AFSpeechCorrectionInfo *)arg1 forCorrectionContext:(NSDictionary *)arg2;\n- (oneway void)updateSpeechOptions:(AFSpeechRequestOptions *)arg1;\n- (oneway void)addRecordedSpeechSampleData:(NSData *)arg1;\n- (oneway void)startRecordedAudioDictationWithOptions:(AFDictationOptions *)arg1 language:(NSString *)arg2 narrowband:(_Bool)arg3;\n- (oneway void)stopSpeechWithOptions:(AFSpeechRequestOptions *)arg1;\n- (oneway void)cancelSpeech;\n- (oneway void)startDictationWithLanguageCode:(NSString *)arg1 options:(AFDictationOptions *)arg2 speechOptions:(AFSpeechRequestOptions *)arg3;\n- (oneway void)startRecordingForPendingDictationWithLanguageCode:(NSString *)arg1 options:(AFDictationOptions *)arg2 speechOptions:(AFSpeechRequestOptions *)arg3 reply:(void (^)(NSXPCListenerEndpoint *))arg4;\n- (oneway void)startRequestActivityWithCompletion:(void (^)(void))arg1;\n@end\n'
p696
ssS'System/Library/PrivateFrameworks/IAP.framework/Support/iaptransportd'
p697
(dp698
sS'System/Library/Frameworks/UIKit.framework/PlugIns/com.apple.UIKit.ShareUI.appex/com.apple.UIKit.ShareUI'
p699
(dp700
sS'System/Library/PrivateFrameworks/CarKit.framework/Support/carkitd'
p701
(dp702
sS'System/Library/PrivateFrameworks/NanoAppRegistry.framework/Support/nanoappregistryd'
p703
(dp704
S'NSXPCListenerDelegate'
p705
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p706
ssS'System/Library/PrivateFrameworks/VideoProcessing.framework/mediaanalysisd'
p707
(dp708
S'NSXPCListenerDelegate'
p709
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p710
sS'VCPStorageServiceProtocol'
p711
S'@protocol VCPStorageServiceProtocol\n- (void)registerClient:(NSString *)arg1 withReply:(void (^)(NSString *))arg2;\n- (void)storeAnalysis:(NSDictionary *)arg1 forAsset:(NSString *)arg2 withReply:(void (^)(void))arg3;\n@end\n'
p712
sS'VCPMediaAnalysisServerProtocol'
p713
S'@protocol VCPMediaAnalysisServerProtocol\n- (void)cancelAllRequests;\n- (void)cancelRequest:(int)arg1;\n- (void)requestAnalysis:(int)arg1 forAssets:(NSArray *)arg2 realTime:(_Bool)arg3 withReply:(void (^)(NSDictionary *, NSError *))arg4;\n@end\n'
p714
sS'VCPRealTimeAnalysisServerProtocol'
p715
S'@protocol VCPRealTimeAnalysisServerProtocol\n- (void)requestAnalysis:(unsigned long long)arg1 ofIOSurface:(IOSurface *)arg2 withReply:(void (^)(NSDictionary *, NSError *))arg3;\n@end\n'
p716
ssS'System/Library/PrivateFrameworks/iCloudQuotaDaemon.framework/PlugIns/ICQFollowup.appex/ICQFollowup'
p717
(dp718
sS'Applications/AdSheet.app/AdSheet'
p719
(dp720
S'NSXPCListenerDelegate'
p721
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p722
sS'ADClientStateDelegate'
p723
S'@protocol ADClientStateDelegate <NSObject>\n- (void)clientStateDidChange:(ADClientState *)arg1;\n@end\n'
p724
sS'ADSOptInConnection_RPC'
p725
S'@protocol ADSOptInConnection_RPC\n- (void)_remote_getiAdIDsWithCompletionHandler:(void (^)(NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, NSString *))arg1;\n@end\n'
p726
sS'ADSSession_RPC'
p727
S'@protocol ADSSession_RPC\n- (void)_remote_reportPreRollDidStopForAdSpaceWithIdentifier:(NSString *)arg1;\n- (void)_remote_reportPreRollDidStartForAdSpaceWithIdentifier:(NSString *)arg1;\n- (void)_remote_userDidSkipPrerollForAdSpaceWithIdentifier:(NSString *)arg1;\n- (void)_remote_playbackFailedForURL:(NSString *)arg1 forAdSpaceWithIdentifier:(NSString *)arg2;\n- (void)_remote_playbackFinishedForContentHash:(NSData *)arg1 forAdSpaceWithIdentifier:(NSString *)arg2;\n- (void)_remote_playbackResumedForAdSpaceWithIdentifier:(NSString *)arg1;\n- (void)_remote_playbackPausedForAdSpaceWithIdentifier:(NSString *)arg1;\n- (void)_remote_playbackStartedForImpressionSource:(int)arg1 forAdSpaceWithIdentifier:(NSString *)arg2;\n- (void)_remote_disablePolicyEngine;\n- (void)_remote_enablePolicyEngine;\n- (void)_remote_signatureForRequestData:(NSData *)arg1 completionHandler:(void (^)(NSString *))arg2;\n- (void)_remote_segmentDataForSignedInUser:(void (^)(NSString *, NSString *, double, NSError *))arg1;\n- (void)_remote_reportPrivacyAdMarkWasTappedForAdSpaceWithIdentifier:(NSString *)arg1;\n- (void)_remote_reportPrivacyAdTransparencyDidLinkOutForAdSpaceWithIdentifier:(NSString *)arg1;\n- (void)_remote_reportPrivacyAdTransparencyDidRenderTransparencyForAdSpaceWithIdentifier:(NSString *)arg1;\n- (void)_remote_reportPrivacyAdTransparencyDidDisappearForAdSpaceWithIdentifier:(NSString *)arg1;\n- (void)_remote_reportPrivacyAdTransparencyDidAppearForAdSpaceWithIdentifier:(NSString *)arg1;\n- (void)_remote_reportContentImpressionForAdSpaceWithIdenfier:(NSString *)arg1;\n- (void)_remote_actionCompletedWithSystemEvent:(int)arg1 forAdSpaceWithIdentifier:(NSString *)arg2 completionHandler:(void (^)(void))arg3;\n- (void)_remote_reportSystemEvent:(int)arg1 forAdSpaceWithIdentifier:(NSString *)arg2;\n- (void)_remote_bannerBeginActionForAdSpaceWithIdentifier:(NSString *)arg1 FromFrame:(NSValue *)arg2 tapLocation:(NSValue *)arg3 completionHandler:(void (^)(_Bool))arg4;\n- (void)_remote_determineActionForAdSpaceWithIdentifier:(NSString *)arg1 ForTapAtLocation:(NSValue *)arg2 inFrame:(NSValue *)arg3 withMRAIDAction:(ADMRAIDAction *)arg4 completeHandler:(void (^)(ADAdActionPublicAttributes *))arg5;\n- (void)_priv_adSpaceDidDisappearForAdSpaceIdentifier:(NSString *)arg1;\n- (void)_priv_adSpaceDidAppearForAdSpaceIdentifier:(NSString *)arg1;\n- (void)_priv_setServerURL:(NSURL *)arg1 forAdSpaceWithIdentifier:(NSString *)arg2;\n- (void)_remote_reportNativeClickEventForAdSpaceWithIdentifier:(NSString *)arg1;\n- (void)_remote_bannerRefuseActionForAdSpaceWithIdentifier:(NSString *)arg1;\n- (void)_remote_bannerCancelActionForAdSpaceWithIdentifier:(NSString *)arg1;\n- (void)_remote_setSelectedAdFrame:(NSValue *)arg1 withContentFrame:(NSValue *)arg2 atScale:(float)arg3 forAdSpaceWithIdentifier:(NSString *)arg4;\n- (void)_remote_setAdSpaceType:(int)arg1 forAdSpaceWithIdentifier:(NSString *)arg2;\n- (void)_remote_sendAdspaceStatusEventForAdSpaceWithIdentifier:(NSString *)arg1 withAdSpaceInfo:(ADAdSpaceEventInfo *)arg2;\n- (void)_remote_setVisibility:(long long)arg1 forAdSpaceWithIdentifier:(NSString *)arg2 withAdSpaceInfo:(ADAdSpaceEventInfo *)arg3;\n- (void)_remote_setAuthenticationUserName:(NSString *)arg1 forAdSpaceWithIdentifier:(NSString *)arg2;\n- (void)_remote_setSection:(NSString *)arg1 forAdSpaceWithIdentifier:(NSString *)arg2;\n- (void)_remote_closeAdSpaceWithIdentifier:(NSString *)arg1;\n- (void)_remote_reportTotalCreativeRequestCount:(long long)arg1 forAdSpaceWithIdentifier:(NSString *)arg2;\n- (void)_remote_requestAdSpaceWithConfiguration:(ADAdSpaceConfiguration *)arg1;\n- (void)_remote_addClientToSegments:(NSArray *)arg1 replaceExisting:(_Bool)arg2 privateSegment:(_Bool)arg3;\n- (void)_remote_requestAttributionDetailsWithBlock:(void (^)(NSDictionary *))arg1;\n- (void)_remote_lookupAdConversionDetails:(void (^)(NSDate *, NSDate *))arg1;\n- (void)_remote_determineAppInstallAttributionWithCompletionHandler:(void (^)(_Bool))arg1;\n- (void)_remote_reportPrerollRequest;\n- (void)_reportSubscriptionEventWithType:(long long)arg1 withQToken:(NSString *)arg2 sourceIdentifier:(NSString *)arg3 eventTime:(double)arg4 info:(NSDictionary *)arg5;\n- (void)_remote_setClientLinkedOnVersion:(NSString *)arg1;\n@end\n'
p728
ssS'usr/libexec/coreduetd'
p729
(dp730
sS'usr/libexec/nsurlsessiond'
p731
(dp732
S'NSURLSessionDelegateOptions_Internal'
p733
S'@protocol NSURLSessionDelegateOptions_Internal\n- (_Bool)_delegateOptions_clientImplementsCollectingMetrics;\n@end\n'
p734
sS'NSURLSessionTaskDelegatePrivate'
p735
S'@protocol NSURLSessionTaskDelegatePrivate <NSURLSessionTaskDelegate>\n\n@optional\n- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 _conditionalRequirementsChanged:(_Bool)arg3;\n- (void)URLSession:(NSURLSession *)arg1 _taskIsWaitingForConnection:(NSURLSessionTask *)arg2;\n- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 _isWaitingForConnectionWithReason:(long long)arg3;\n- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 _isWaitingForConnectionWithError:(NSError *)arg3;\n- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 _willSendRequestForEstablishedConnection:(NSURLRequest *)arg3 completionHandler:(void (^)(NSURLRequest *))arg4;\n- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 _schemeUpgraded:(NSURLRequest *)arg3 completionHandler:(void (^)(NSURLRequest *))arg4;\n@end\n'
p736
sS'NDBackgroundSessionProtocol'
p737
S'@protocol NDBackgroundSessionProtocol <NSObject>\n- (void)avAggregateAssetDownloadTaskWithDownloadToken:(unsigned long long)arg1 serializedMediaSelections:(NSArray *)arg2 assetTitle:(NSString *)arg3 assetArtworkData:(NSData *)arg4 options:(NSDictionary *)arg5 childDownloadSessionIdentifier:(NSString *)arg6 identifier:(unsigned long long)arg7 uniqueIdentifier:(NSString *)arg8 reply:(void (^)(_Bool))arg9;\n- (void)avAssetDownloadTaskWithDownloadToken:(unsigned long long)arg1 URL:(NSURL *)arg2 destinationURL:(NSURL *)arg3 temporaryDestinationURL:(NSURL *)arg4 assetTitle:(NSString *)arg5 assetArtworkData:(NSData *)arg6 options:(NSDictionary *)arg7 identifier:(unsigned long long)arg8 uniqueIdentifier:(NSString *)arg9 reply:(void (^)(_Bool))arg10;\n- (void)setPropertyOnStreamWithIdentifier:(unsigned long long)arg1 propDict:(NSDictionary *)arg2 propKey:(NSString *)arg3 withReply:(void (^)(_Bool))arg4;\n- (void)invalidateWithReply:(void (^)(void))arg1;\n- (void)resetStorageWithReply:(void (^)(void))arg1;\n- (void)setBytesPerSecondLimit:(long long)arg1 forTaskWithIdentifier:(unsigned long long)arg2;\n- (void)setLoadingPoolPriority:(double)arg1 forTaskWithIdentifier:(unsigned long long)arg2;\n- (void)setPriority:(long long)arg1 forTaskWithIdentifier:(unsigned long long)arg2;\n- (void)setDescription:(NSString *)arg1 forTask:(unsigned long long)arg2;\n- (void)resumeTaskWithIdentifier:(unsigned long long)arg1 withProperties:(NSDictionary *)arg2;\n- (void)suspendTaskWithIdentifier:(unsigned long long)arg1;\n- (void)cancelTaskWithIdentifier:(unsigned long long)arg1 byProducingResumeData:(void (^)(NSData *))arg2;\n- (void)cancelTaskWithIdentifier:(unsigned long long)arg1;\n- (void)downloadTaskWithResumeData:(NSData *)arg1 identifier:(unsigned long long)arg2 uniqueIdentifier:(NSString *)arg3 reply:(void (^)(_Bool))arg4;\n- (void)dataTaskWithRequest:(NSURLRequest *)arg1 originalRequest:(NSURLRequest *)arg2 identifier:(unsigned long long)arg3 uniqueIdentifier:(NSString *)arg4 reply:(void (^)(_Bool))arg5;\n- (void)uploadTaskWithRequest:(NSURLRequest *)arg1 originalRequest:(NSURLRequest *)arg2 fromFile:(NSURL *)arg3 sandboxExtensionData:(NSData *)arg4 identifier:(unsigned long long)arg5 uniqueIdentifier:(NSString *)arg6 potentialCredentials:(NSDictionary *)arg7 reply:(void (^)(_Bool))arg8;\n- (void)downloadTaskWithRequest:(NSURLRequest *)arg1 originalRequest:(NSURLRequest *)arg2 downloadFilePath:(NSString *)arg3 identifier:(unsigned long long)arg4 uniqueIdentifier:(NSString *)arg5 reply:(void (^)(_Bool))arg6;\n@end\n'
p738
sS'NDCallbackQueueDelegate'
p739
S'@protocol NDCallbackQueueDelegate <NSObject>\n- (NSString *)descriptionForTaskWithIdentifier:(unsigned long long)arg1;\n- (id <NSXPCProxyCreating><NDBackgroundSessionClient>)getClientProxy;\n- (void)clientAcknowledgedTerminalCallbackForTask:(unsigned long long)arg1;\n- (void)errorOccurredDuringAuthCallbackDelivery:(NSError *)arg1 completionHandler:(void (^)(long long, NSURLCredential *))arg2;\n- (void)errorOccurredDuringFinishedCallbackDelivery:(NSError *)arg1;\n- (void)wakeUpClient;\n@end\n'
p740
sS'NSURLSessionDownloadDelegate_Private'
p741
S'@protocol NSURLSessionDownloadDelegate_Private <NSURLSessionDownloadDelegate>\n- (NSURL *)_URLSession:(NSURLSession *)arg1 downloadTaskNeedsDownloadDirectory:(NSURLSessionDownloadTask *)arg2;\n- (void)_URLSession:(NSURLSession *)arg1 downloadTask:(NSURLSessionDownloadTask *)arg2 didReceiveResponse:(NSURLResponse *)arg3;\n@end\n'
p742
sS'NDCredentialStorageDelegate'
p743
S'@protocol NDCredentialStorageDelegate <NSObject>\n- (id <NSXPCProxyCreating><NDBackgroundSessionClient>)getClientProxy;\n@end\n'
p744
sS'NDApplicationObserver'
p745
S'@protocol NDApplicationObserver <NSObject>\n\n@optional\n- (void)applicationEndedExtendedNonDiscretionaryBackgroundGracePeriod:(NDApplication *)arg1;\n- (void)applicationEndedNonDiscretionaryBackgroundGracePeriod:(NDApplication *)arg1;\n- (void)applicationNoLongerInForeground:(NDApplication *)arg1;\n- (void)applicationEnteredForeground:(NDApplication *)arg1;\n- (void)applicationWasSuspended:(NDApplication *)arg1;\n- (void)backgroundUpdatesDisabledForApplication:(NDApplication *)arg1;\n- (void)applicationWasQuitFromAppSwitcher:(NDApplication *)arg1;\n@end\n'
p746
sS'NSURLSessionDelegate_Internal'
p747
S'@protocol NSURLSessionDelegate_Internal <NSURLSessionDelegate>\n- (void)_URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 getAuthHeadersForResponse:(NSURLResponse *)arg3 completionHandler:(void (^)(_Bool, NSDictionary *))arg4;\n\n@optional\n- (void)_URLSession:(NSURLSession *)arg1 needConnectedSocketToHost:(NSString *)arg2 port:(unsigned long long)arg3 completionHandler:(void (^)(int, struct))arg4;\n- (void)_URLSession:(NSURLSession *)arg1 companionAvailabilityChanged:(_Bool)arg2;\n- (void)_URLSession:(NSURLSession *)arg1 openFileAtPath:(NSString *)arg2 mode:(int)arg3 completionHandler:(void (^)(int))arg4;\n@end\n'
p748
sS'NSURLSessionDownloadDelegate'
p749
S'@protocol NSURLSessionDownloadDelegate <NSURLSessionTaskDelegate>\n- (void)URLSession:(NSURLSession *)arg1 downloadTask:(NSURLSessionDownloadTask *)arg2 didFinishDownloadingToURL:(NSURL *)arg3;\n\n@optional\n- (void)URLSession:(NSURLSession *)arg1 downloadTask:(NSURLSessionDownloadTask *)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4;\n- (void)URLSession:(NSURLSession *)arg1 downloadTask:(NSURLSessionDownloadTask *)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;\n@end\n'
p750
sS'NDBackgroundSessionDelegate'
p751
S'@protocol NDBackgroundSessionDelegate <NSObject>\n- (void)sessionCompleted:(NDBackgroundSession *)arg1 withCompletionHandler:(void (^)(void))arg2;\n@end\n'
p752
sS'NSURLSessionDataDelegate_Internal'
p753
S'@protocol NSURLSessionDataDelegate_Internal <NSURLSessionDataDelegate>\n- (void)_URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didReceiveData:(NSData *)arg3 completionHandler:(void (^)(void))arg4;\n@end\n'
p754
sS'NDBackgroundSessionManagerProtocol'
p755
S'@protocol NDBackgroundSessionManagerProtocol <NSObject>\n- (void)obliterateAllSessionsWithReply:(void (^)(void))arg1;\n- (void)getActiveSessionIdentifiersWithReply:(void (^)(NSArray *))arg1;\n- (void)okayToSendPendingCallbacksForIdentifier:(NSString *)arg1 reply:(void (^)(void))arg2;\n- (void)releaseAssertionForSession:(NSString *)arg1 reply:(void (^)(void))arg2;\n- (void)sendPendingCallbacksForIdentifier:(NSString *)arg1 reply:(void (^)(void))arg2;\n- (void)createSessionWithConfiguration:(NSURLSessionConfiguration *)arg1 clientProxy:(id <NDBackgroundSessionClient>)arg2 cachesDirectory:(NSURL *)arg3 options:(NSDictionary *)arg4 reply:(void (^)(id <NDBackgroundSessionProtocol>, NSDictionary *, _Bool))arg5;\n- (void)dropBoost;\n- (void)boost;\n@end\n'
p756
ssS'usr/libexec/locationd'
p757
(dp758
S'CLRoutineMonitorServiceProtocol'
p759
S'@protocol CLRoutineMonitorServiceProtocol <CLIntersiloServiceProtocol>\n- (void)stopMonitoringScenarioTriggerOfType:(unsigned long long)arg1 forClient:(byref id <CLRoutineMonitorClientProtocol>)arg2;\n- (void)startMonitoringScenarioTriggerOfType:(unsigned long long)arg1 forClient:(byref id <CLRoutineMonitorClientProtocol>)arg2;\n- (void)fetchLocationOfInterestAtLocation:(CLLocation *)arg1 withHandler:(void (^)(RTLocationOfInterest *, NSError *))arg2;\n- (void)stopLeechingLowConfidenceVisitsForClient:(byref id <CLRoutineMonitorClientProtocol>)arg1;\n- (void)startLeechingLowConfidenceVisitsForClient:(byref id <CLRoutineMonitorClientProtocol>)arg1;\n- (void)stopLeechingVisitsForClient:(byref id <CLRoutineMonitorClientProtocol>)arg1;\n- (void)startLeechingVisitsForClient:(byref id <CLRoutineMonitorClientProtocol>)arg1;\n- (void)stopMonitoringVisitsForClient:(byref id <CLRoutineMonitorClientProtocol>)arg1;\n- (void)startMonitoringVisitsForClient:(byref id <CLRoutineMonitorClientProtocol>)arg1;\n- (void)fetchPredictedLocationsOfInterestOnDate:(NSDate *)arg1 withReply:(void (^)(NSArray *, NSError *))arg2;\n- (void)fetchNextPredictedLocationsOfInterestFromLocation:(CLLocation *)arg1 startDate:(NSDate *)arg2 timeInterval:(double)arg3 withReply:(void (^)(NSArray *, NSError *))arg4;\n- (void)fetchRecentLocationsOfInterestWithReply:(void (^)(NSArray *, NSError *))arg1;\n- (void)fetchLocationsOfInterestOfType:(long long)arg1 withReply:(void (^)(NSArray *, NSError *))arg2;\n- (void)fetchLocationsOfInterestWithinDistance:(double)arg1 ofLocation:(CLLocation *)arg2 withReply:(void (^)(NSArray *, NSError *))arg3;\n- (void)fetchLocationsOfInterestAssociatedToIdentifier:(NSString *)arg1 withReply:(void (^)(NSArray *, NSError *))arg2;\n- (void)fetchRoutineModeFromLocation:(CLLocation *)arg1 withReply:(void (^)(long long, NSError *))arg2;\n@end\n'
p760
sS'CLLocationManagerRoutineServerInterface'
p761
S'@protocol CLLocationManagerRoutineServerInterface <NSObject>\n- (void)stopUpdatingPredictedApplications;\n- (void)startUpdatingPredictedApplications;\n- (void)fetchPredictedApplicationsAtLocation:(CLLocation *)arg1 reply:(void (^)(NSArray *, NSError *))arg2;\n- (void)stopUpdatingLocation;\n- (void)startUpdatingLocation;\n@end\n'
p762
sS'NSXPCListenerDelegate'
p763
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p764
sS'NSFileManagerDelegate'
p765
S'@protocol NSFileManagerDelegate <NSObject>\n\n@optional\n- (_Bool)fileManager:(NSFileManager *)arg1 shouldProceedAfterError:(NSError *)arg2 removingItemAtURL:(NSURL *)arg3;\n- (_Bool)fileManager:(NSFileManager *)arg1 shouldProceedAfterError:(NSError *)arg2 removingItemAtPath:(NSString *)arg3;\n- (_Bool)fileManager:(NSFileManager *)arg1 shouldRemoveItemAtURL:(NSURL *)arg2;\n- (_Bool)fileManager:(NSFileManager *)arg1 shouldRemoveItemAtPath:(NSString *)arg2;\n- (_Bool)fileManager:(NSFileManager *)arg1 shouldProceedAfterError:(NSError *)arg2 linkingItemAtURL:(NSURL *)arg3 toURL:(NSURL *)arg4;\n- (_Bool)fileManager:(NSFileManager *)arg1 shouldProceedAfterError:(NSError *)arg2 linkingItemAtPath:(NSString *)arg3 toPath:(NSString *)arg4;\n- (_Bool)fileManager:(NSFileManager *)arg1 shouldLinkItemAtURL:(NSURL *)arg2 toURL:(NSURL *)arg3;\n- (_Bool)fileManager:(NSFileManager *)arg1 shouldLinkItemAtPath:(NSString *)arg2 toPath:(NSString *)arg3;\n- (_Bool)fileManager:(NSFileManager *)arg1 shouldProceedAfterError:(NSError *)arg2 movingItemAtURL:(NSURL *)arg3 toURL:(NSURL *)arg4;\n- (_Bool)fileManager:(NSFileManager *)arg1 shouldProceedAfterError:(NSError *)arg2 movingItemAtPath:(NSString *)arg3 toPath:(NSString *)arg4;\n- (_Bool)fileManager:(NSFileManager *)arg1 shouldMoveItemAtURL:(NSURL *)arg2 toURL:(NSURL *)arg3;\n- (_Bool)fileManager:(NSFileManager *)arg1 shouldMoveItemAtPath:(NSString *)arg2 toPath:(NSString *)arg3;\n- (_Bool)fileManager:(NSFileManager *)arg1 shouldProceedAfterError:(NSError *)arg2 copyingItemAtURL:(NSURL *)arg3 toURL:(NSURL *)arg4;\n- (_Bool)fileManager:(NSFileManager *)arg1 shouldProceedAfterError:(NSError *)arg2 copyingItemAtPath:(NSString *)arg3 toPath:(NSString *)arg4;\n- (_Bool)fileManager:(NSFileManager *)arg1 shouldCopyItemAtURL:(NSURL *)arg2 toURL:(NSURL *)arg3;\n- (_Bool)fileManager:(NSFileManager *)arg1 shouldCopyItemAtPath:(NSString *)arg2 toPath:(NSString *)arg3;\n@end\n'
p766
sS'CLLocationSmootherServerInterface'
p767
S'@protocol CLLocationSmootherServerInterface <NSObject>\n\n@optional\n- (void)smoothLocations:(NSArray *)arg1 handler:(void (^)(NSArray *, NSError *))arg2;\n- (void)smoothLocations:(NSArray *)arg1 useType:(NSNumber *)arg2;\n@end\n'
p768
sS'CLDiagnosticManagerServiceProtocol'
p769
S'@protocol CLDiagnosticManagerServiceProtocol <CLIntersiloServiceProtocol>\n- (void)unregisterFileForCollection:(NSURL *)arg1;\n- (void)registerFileForCollection:(NSURL *)arg1;\n@end\n'
p770
sS'CLSuggestedActionClientProtocol'
p771
S'@protocol CLSuggestedActionClientProtocol <CLIntersiloClientProtocol>\n- (void)onPredictedApplications:(NSArray *)arg1;\n@end\n'
p772
sS'CLIntersiloClientProtocol'
p773
S'@protocol CLIntersiloClientProtocol <CLIntersiloProxyDelegateProtocol>\n@end\n'
p774
sS'CLSmootherMonitorServiceProtocol'
p775
S'@protocol CLSmootherMonitorServiceProtocol <CLIntersiloServiceProtocol>\n@end\n'
p776
ssS'System/Library/PrivateFrameworks/GenerationalStorage.framework/revisiond'
p777
(dp778
S'NSXPCListenerDelegate'
p779
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p780
ssS'System/Library/PrivateFrameworks/AppConduit.framework/Support/appconduitd'
p781
(dp782
S'ACXDeviceConnectionProtocol'
p783
S'@protocol ACXDeviceConnectionProtocol <NSObject>\n- (void)updatePreferencesForApplicationWithIdentifier:(NSString *)arg1 preferences:(NSDictionary *)arg2 forDeviceWithPairingID:(NSUUID *)arg3 completion:(void (^)(NSError *))arg4;\n- (void)fetchProvisioningProfilesForApplicationWithBundleID:(NSString *)arg1 forDeviceWithPairingID:(NSUUID *)arg2 completion:(void (^)(NSDictionary *, NSError *))arg3;\n- (void)fetchProvisioningProfilesForDeviceWithPairingID:(NSUUID *)arg1 completion:(void (^)(NSDictionary *, NSError *))arg2;\n- (void)removeProvisioningProfileWithID:(NSString *)arg1 fromDeviceWithPairingID:(NSUUID *)arg2 completion:(void (^)(_Bool, NSError *))arg3;\n- (void)installProvisioningProfileWithData:(NSData *)arg1 onDeviceWithPairingID:(NSUUID *)arg2 completion:(void (^)(_Bool, NSError *))arg3;\n- (void)disableObservers;\n- (void)enableObservers;\n- (void)getAlwaysInstallForDeviceWithPairingID:(NSUUID *)arg1 completion:(void (^)(_Bool))arg2;\n- (void)removeApplication:(NSString *)arg1 fromDeviceWithPairingID:(NSUUID *)arg2 completion:(void (^)(long long))arg3;\n- (void)installApplication:(NSString *)arg1 withProvisioningProfileInfo:(NSDictionary *)arg2 forTestFlight:(_Bool)arg3 onDeviceWithPairingID:(NSUUID *)arg4 completion:(void (^)(long long, NSError *))arg5;\n- (void)retryPendingAppInstallationsOnDeviceWithPairingID:(NSUUID *)arg1;\n- (void)cancelPendingInstallations;\n- (void)installAllApplications;\n- (void)fetchWatchAppBundleIDForCompanionAppBundleID:(NSString *)arg1 completion:(void (^)(NSString *, NSError *))arg2;\n- (void)fetchWatchAppBundleURLWithinCompanionAppWithWatchAppIdentifier:(NSString *)arg1 completion:(void (^)(NSURL *, NSError *))arg2;\n- (void)fetchInfoForApplicationWithBundleID:(NSString *)arg1 forDeviceWithPairingID:(NSUUID *)arg2 completion:(void (^)(NSDictionary *, NSError *))arg3;\n- (void)fetchApplicationWithContainingApplicationBundleID:(NSString *)arg1 completion:(void (^)(NSDictionary *, NSError *))arg2;\n- (void)fetchInstalledCompatibleApplicationsForDeviceWithPairingID:(NSUUID *)arg1 completion:(void (^)(NSDictionary *, NSError *))arg2;\n- (void)activeComplicationsForDeviceWithPairingID:(NSUUID *)arg1 completion:(void (^)(NSArray *, NSError *))arg2;\n- (void)fetchInstalledComplicationsForDeviceWithPairingID:(NSUUID *)arg1 completion:(void (^)(NSDictionary *, NSError *))arg2;\n- (void)fetchInstalledApplicationsForDeviceWithPairingID:(NSUUID *)arg1 completion:(void (^)(NSDictionary *, NSError *))arg2;\n@end\n'
p784
ssS'System/Library/PrivateFrameworks/UserActivity.framework/Agents/useractivityd'
p785
(dp786
S'UAUserActivityClientProtocol'
p787
S'@protocol UAUserActivityClientProtocol <NSObject>\n- (void)doGetLoggingFileForClient:(NSString *)arg1 options:(NSDictionary *)arg2 completionHandler:(void (^)(NSFileHandle *, NSError *))arg3;\n- (void)doDetermineIfUserActivityIsCurrent:(NSUUID *)arg1 completionHandler:(void (^)(_Bool, NSString *, int, NSString *, NSError *))arg2;\n- (void)doGetCurrentUserActivityInfo:(void (^)(NSUUID *, NSString *, NSError *))arg1;\n- (void)doPinUserActivityInfo:(UAUserActivityInfo *)arg1 completionHandler:(void (^)(NSUUID *, NSError *))arg2;\n- (void)doMarkUserActivityAsDirty:(NSUUID *)arg1 forceImmediate:(_Bool)arg2 webpageURL:(NSURL *)arg3 expiration:(NSDate *)arg4 hasiCloudDocument:(_Bool)arg5 hasUnsynchronizediCloudDoc:(_Bool)arg6;\n- (void)doRemoveDynamicUserActivity:(NSString *)arg1 matching:(NSString *)arg2;\n- (void)doAddDynamicUserActivity:(NSString *)arg1 matching:(NSString *)arg2;\n- (void)doDeleteUserActivityWithUUID:(NSUUID *)arg1;\n- (void)doUpdateUserActivityWithUUID:(NSUUID *)arg1 setActive:(_Bool)arg2;\n- (void)doUpdateUserActivityInfo:(UAUserActivityInfo *)arg1 makeCurrent:(_Bool)arg2 completionHandler:(void (^)(NSError *))arg3;\n- (void)doFetchUserActivityInfoWithUUID:(NSUUID *)arg1 completionHandler:(void (^)(UAUserActivityInfo *, NSError *))arg2;\n- (void)doInitializeWithClientVersion:(long long)arg1 clientInfo:(NSDictionary *)arg2 completionHandler:(void (^)(long long, NSDictionary *, NSError *))arg3;\n@end\n'
p788
sS'SFCompanionAdvertiserDelegate'
p789
S'@protocol SFCompanionAdvertiserDelegate <NSObject>\n\n@optional\n- (void)advertiser:(SFCompanionAdvertiser *)arg1 didReceiveInputStream:(NSInputStream *)arg2 outputStream:(NSOutputStream *)arg3;\n@end\n'
p790
sS'UAResumableActivitiesSysdiagnoseSupportProtocol'
p791
S'@protocol UAResumableActivitiesSysdiagnoseSupportProtocol <NSObject>\n- (void)doCopyRecentActions:(NSDictionary *)arg1 completionHandler:(void (^)(NSArray *))arg2;\n- (void)doGetSysdiagnoseStringsIncludingPrivateData:(_Bool)arg1 completionHandler:(void (^)(NSArray *))arg2;\n- (void)doNOP:(NSString *)arg1 withCompletionHandler:(void (^)(NSString *, NSError *))arg2;\n@end\n'
p792
sS'NSXPCListenerDelegate'
p793
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p794
sS'UAUserActivityDebugLoggingProtocol'
p795
S'@protocol UAUserActivityDebugLoggingProtocol <NSObject>\n- (void)doGetLoggingFileForClient:(NSString *)arg1 options:(NSDictionary *)arg2 completionHandler:(void (^)(NSFileHandle *, NSError *))arg3;\n@end\n'
p796
sS'UABestAppSuggestionManagerProtocol'
p797
S'@protocol UABestAppSuggestionManagerProtocol <NSObject>\n- (void)doLaunchFollowUp:(NSUUID *)arg1 interactionType:(unsigned long long)arg2 cancelled:(_Bool)arg3;\n- (void)doQueueFetchOfPayloadForBestAppSuggestion:(NSUUID *)arg1 completionHandler:(void (^)(NSError *))arg2;\n- (void)doUnregisterForBestAppChangeNotification;\n- (void)doRegisterForBestAppChangeNotification;\n- (void)doRemoveBestAppSuggestion:(NSUUID *)arg1 options:(NSDictionary *)arg2;\n- (void)doDetermineBestAppSuggestions:(long long)arg1 completionHandler:(void (^)(NSArray *, NSError *))arg2;\n- (void)doDetermineBestAppSuggestionWithCompletionHandler:(void (^)(NSUUID *, unsigned long long, NSString *, NSString *, NSDate *, double, NSString *, NSString *, NSString *))arg1;\n- (void)doStartBestAppSuggestion:(double)arg1;\n- (void)doConnected;\n@end\n'
p798
sS'UASharedPasteboardControllProtocol'
p799
S'@protocol UASharedPasteboardControllProtocol <NSObject>\n- (void)startConnection:(int)arg1;\n@end\n'
p800
sS'UAResumableActivitiesAdministrativeProtocol'
p801
S'@protocol UAResumableActivitiesAdministrativeProtocol <NSObject>\n- (void)doGetSFActivityAdvertisement:(NSDictionary *)arg1 completionHandler:(void (^)(NSData *, NSDate *, NSUUID *, NSError *))arg2;\n- (void)doSetLocalPasteboardReflection:(_Bool)arg1;\n- (void)doSetRemotePasteboardAvalible:(_Bool)arg1;\n- (void)doReplayCommands:(NSArray *)arg1 completionHandler:(void (^)(_Bool, NSError *))arg2;\n- (void)getCurrentPeersAndClear:(_Bool)arg1 completionHandler:(void (^)(UAPingResults *))arg2;\n- (void)stopAdvertisingPing;\n- (void)startAdvertisingPingWithTimeInterval:(double)arg1;\n- (void)doSetupRendevous:(NSString *)arg1 domain:(NSString *)arg2 activate:(_Bool)arg3;\n- (void)doSetupNetworkedPairs:(NSString *)arg1 port:(long long)arg2;\n- (void)doBroadcastPing:(void (^)(UAPingResults *))arg1;\n- (void)doWillSaveDelegate:(NSUUID *)arg1 completionHandler:(void (^)(NSError *))arg2;\n- (void)doSetDefaults:(NSString *)arg1 value:(NSObject<NSSecureCoding> *)arg2;\n- (void)doCopyDefaults:(_Bool)arg1 completionHandler:(void (^)(NSDictionary *, NSError *))arg2;\n- (void)doCopySimulatorStatusString:(NSDictionary *)arg1 completionHandler:(void (^)(NSString *))arg2;\n- (void)doInjectBTLE:(NSUUID *)arg1 type:(unsigned long long)arg2 identifier:(NSString *)arg3 title:(NSString *)arg4 activityPayload:(NSData *)arg5 frameworkPayload:(NSData *)arg6 payloadDelay:(double)arg7;\n- (void)doGetCurrentAdvertisedItemUUID:(void (^)(NSUUID *))arg1;\n- (void)doTerminateServer;\n- (void)doCopyDynamicUserActivitiesString:(NSDictionary *)arg1 completionHandler:(void (^)(NSString *))arg2;\n- (void)doCopyStatusString:(NSString *)arg1 options:(NSDictionary *)arg2 completionHandler:(void (^)(NSString *))arg3;\n- (void)doCopyRecentActions:(NSDictionary *)arg1 completionHandler:(void (^)(NSArray *))arg2;\n- (void)doCopyDebuggingInfo:(NSDictionary *)arg1 completionHandler:(void (^)(NSDictionary *))arg2;\n- (void)doCopyEnabledUUIDsWithCompletionHandler:(void (^)(NSArray *))arg1;\n- (void)doCopyAllUUIDsOfType:(unsigned long long)arg1 withCompletionHandler:(void (^)(NSArray *))arg2;\n- (void)doCopyAdvertisedUUIDWithCompletionHandler:(void (^)(NSUUID *))arg1;\n- (void)doFindMatchingUserActivityForString:(NSString *)arg1 withCompletionHandler:(void (^)(NSUUID *))arg2;\n- (void)doSetDebugOption:(NSString *)arg1 value:(id)arg2;\n- (void)doNOP:(NSString *)arg1 withCompletionHandler:(void (^)(NSString *, NSError *))arg2;\n@end\n'
p802
sS'UASharedPasteboardManagerProtocol'
p803
S'@protocol UASharedPasteboardManagerProtocol <NSObject>\n- (void)setReturnPasteboardDataEarlyWithCompletion:(void (^)(_Bool))arg1;\n- (void)fetchRemotePasteboardForProcess:(int)arg1 withCompletion:(void (^)(UASharedPasteboardInfo *, NSError *))arg2;\n- (void)fetchRemotePasteboardTypesForProcess:(int)arg1 withCompletion:(void (^)(UASharedPasteboardInfo *, NSError *))arg2;\n- (void)localPasteboardTypesDidChange:(UASharedPasteboardInfo *)arg1 forGeneration:(unsigned long long)arg2;\n- (void)clearLocalPasteboardInformation;\n- (void)fetchRemotePasteboardStatus:(void (^)(_Bool))arg1;\n@end\n'
p804
sS'UASharedPasteboardAUXProtocol'
p805
S'@protocol UASharedPasteboardAUXProtocol <NSObject>\n- (void)setReturnPasteboardDataEarlyWithCompletion:(void (^)(_Bool))arg1;\n@end\n'
p806
ssS'usr/libexec/pipelined'
p807
(dp808
S'CLIndoorProtocolPrivate'
p809
S'@protocol CLIndoorProtocolPrivate <CLIndoorProtocol>\n- (void)changeLocationGroups:(NSArray *)arg1;\n- (void)selectLocationGroup:(NSString *)arg1;\n- (void)selectLocationGroups:(NSArray *)arg1;\n- (void)playbackDatarun:(NSString *)arg1;\n- (void)setApiKey:(NSString *)arg1 onServer:(NSString *)arg2;\n- (void)setApiKey:(NSString *)arg1;\n@end\n'
p810
ssS'usr/libexec/keybagd'
p811
(dp812
S'NSXPCListenerDelegate'
p813
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p814
sS'BDBubbled'
p815
S'@protocol BDBubbled <NSObject>\n- (void)bubbleShouldPop;\n@end\n'
p816
sS'RDClient'
p817
S'@protocol RDClient <NSObject>\n- (void)bubbleDidPop;\n- (void)uploadContentWithCompletionHandler:(void (^)(void))arg1;\n- (void)userSwitchTaskListDidUpdate;\n- (void)readyToSwitchToUser:(NSDictionary *)arg1 completionHandler:(void (^)(void))arg2;\n- (void)willSwitchToUser:(NSDictionary *)arg1 completionHandler:(void (^)(void))arg2;\n@end\n'
p818
ssS'System/Library/AppRemovalServices/com.apple.stocks.appremoval.xpc/com.apple.stocks.appremoval'
p819
(dp820
sS'System/Library/PrivateFrameworks/CloudPhotoLibrary.framework/XPCServices/com.apple.Photos.CPLDiagnose.xpc/com.apple.Photos.CPLDiagnose'
p821
(dp822
sS'System/Library/PrivateFrameworks/NotesUI.framework/XPCServices/com.apple.mobilenotes.NotesImporter.xpc/com.apple.mobilenotes.NotesImporter'
p823
(dp824
sS'usr/libexec/sharingd'
p825
(dp826
S'SDConnectionManagerDelegate'
p827
S'@protocol SDConnectionManagerDelegate <NSObject>\n- (void)connectionManagerDidInvalidate:(SDConnectionManager *)arg1;\n@end\n'
p828
sS'SDUnlockXPCSesssionDelegate'
p829
S'@protocol SDUnlockXPCSesssionDelegate <NSObject>\n- (void)unlockSessionDidFinish:(SDUnlockXPCSession *)arg1;\n@end\n'
p830
sS'NSXPCListenerDelegate'
p831
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p832
sS'SDCompanionStreamDelegate'
p833
S'@protocol SDCompanionStreamDelegate <NSObject>\n\n@optional\n- (void)companionStreamClosedStreams:(SDCompanionStream *)arg1;\n- (void)continuationStream:(SDCompanionStream *)arg1 connectedToService:(SFCompanionService *)arg2 withFileHandle:(NSFileHandle *)arg3 acceptHandler:(void (^)(_Bool))arg4;\n@end\n'
p834
sS'SDXPCInterface'
p835
S'@protocol SDXPCInterface\n- (void)userNotificationPresent:(SFUserNotification *)arg1;\n- (void)pairTLSClient:(_Bool)arg1 completion:(void (^)(NSError *))arg2;\n- (void)sessionSendTLSEncryptedObject:(NSDictionary *)arg1;\n- (void)sessionSendResponse:(SFResponseMessage *)arg1;\n- (void)sessionSendRequest:(SFRequestMessage *)arg1;\n- (void)sessionSendFrameType:(unsigned char)arg1 data:(NSData *)arg2;\n- (void)sessionSendEvent:(SFEventMessage *)arg1;\n- (void)sessionReceivedTLSData:(NSData *)arg1 type:(unsigned char)arg2;\n- (void)sessionActivate:(SFSession *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)serviceSendTLSEncryptedObject:(NSDictionary *)arg1 toPeer:(NSUUID *)arg2;\n- (void)serviceSendResponse:(SFResponseMessage *)arg1;\n- (void)serviceSendRequest:(SFRequestMessage *)arg1;\n- (void)serviceSendFrameType:(unsigned char)arg1 data:(NSData *)arg2 peer:(NSUUID *)arg3;\n- (void)serviceSendEvent:(SFEventMessage *)arg1;\n- (void)servicePairTLSWithPeer:(NSUUID *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)serviceUpdate:(SFService *)arg1;\n- (void)serviceActivateTLSWithCompletion:(void (^)(NSError *))arg1;\n- (void)serviceActivate:(SFService *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)serviceReceivedTLSData:(NSData *)arg1 type:(unsigned char)arg2 peer:(NSUUID *)arg3;\n- (void)remoteInteractionSessionSetText:(NSString *)arg1;\n- (void)remoteInteractionSessionInsertText:(NSString *)arg1;\n- (void)remoteInteractionSessionDeleteTextBackward;\n- (void)remoteInteractionSessionCommitText;\n- (void)remoteInteractionSessionClearText;\n- (void)remoteInteractionSessionActivate:(SFRemoteInteractionSession *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)nfcTagReaderUIActivateWithEndpoint:(NSXPCListenerEndpoint *)arg1 params:(NSDictionary *)arg2 completion:(void (^)(NSError *))arg3;\n- (void)diagnosticUnlockTestServer;\n- (void)diagnosticUnlockTestClientWithDevice:(SFBLEDevice *)arg1;\n- (void)diagnosticShow:(NSString *)arg1 completion:(void (^)(NSString *))arg2;\n- (void)diagnosticMockStop:(void (^)(NSError *))arg1;\n- (void)diagnosticMockStart:(void (^)(NSError *))arg1;\n- (void)diagnosticMock:(NSString *)arg1 device:(SFBLEDevice *)arg2 completion:(void (^)(NSError *))arg3;\n- (void)diagnosticLogControl:(NSString *)arg1 completion:(void (^)(NSString *))arg2;\n- (void)diagnosticControl:(NSString *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)diagnosticBLEModeWithCompletion:(void (^)(NSError *))arg1;\n- (void)bluetoothUserInteraction;\n- (void)deviceDiscoveryFastScanCancel:(NSString *)arg1;\n- (void)deviceDiscoveryFastScanTrigger:(NSString *)arg1;\n- (void)deviceDiscoveryUpdate:(SFDeviceDiscovery *)arg1;\n- (void)deviceDiscoveryActivate:(SFDeviceDiscovery *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)coordinatedAlertsRequestFinish;\n- (void)coordinatedAlertsRequestStart:(SFCoordinatedAlertRequest *)arg1 completion:(void (^)(NSError *, _Bool, NSDictionary *))arg2;\n- (void)wifiPasswordSharingAvailabilityWithCompletion:(void (^)(unsigned int, NSError *))arg1;\n- (void)triggerHomeKitDeviceDetectedWithURL:(NSURL *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)showDevicePickerWithInfo:(NSDictionary *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)setupDevice:(SFDevice *)arg1 homeIdentifier:(NSUUID *)arg2 completion:(void (^)(NSError *))arg3;\n- (void)retriggerProximitySetup:(void (^)(NSError *))arg1;\n- (void)retriggerProximityPairing:(void (^)(NSError *))arg1;\n- (void)reenableProxCardType:(unsigned char)arg1 completion:(void (^)(NSError *))arg2;\n- (void)preventExitForLocaleReason:(NSString *)arg1;\n- (void)openSetupURL:(NSURL *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)appleIDInfoWithCompletion:(void (^)(NSString *, NSData *, NSError *))arg1;\n- (void)activityStateWithCompletion:(void (^)(unsigned long long, NSError *))arg1;\n- (void)activateAssertionWithIdentifier:(NSString *)arg1;\n- (void)displayStringForContactIdentifier:(NSString *)arg1 deviceIdentifier:(NSUUID *)arg2 completion:(void (^)(NSString *, _Bool, NSError *))arg3;\n- (void)displayNameForEmailHash:(NSString *)arg1 phoneHash:(NSString *)arg2 completion:(void (^)(NSString *, NSError *))arg3;\n- (void)contactIDForEmailHash:(NSString *)arg1 phoneHash:(NSString *)arg2 completion:(void (^)(NSString *, NSError *))arg3;\n- (void)statusInfoWithCompletion:(void (^)(NSDictionary *, NSError *))arg1;\n- (void)requestWithInfo:(NSDictionary *)arg1 completion:(void (^)(NSString *, NSError *))arg2;\n- (void)myAccountWithCompletion:(void (^)(SFAppleIDAccount *, NSError *))arg1;\n- (void)appleIDListWithCompletion:(void (^)(NSArray *, NSError *))arg1;\n- (void)addAppleID:(NSString *)arg1 withCompletion:(void (^)(NSError *))arg2;\n- (void)accountForAppleID:(NSString *)arg1 withCompletion:(void (^)(SFAppleIDAccount *, NSError *))arg2;\n@end\n'
p836
sS'SDXPCDaemonProtocol'
p837
S'@protocol SDXPCDaemonProtocol <NSObject>\n- (void)establishConnectionWithCompletionHandler:(void (^)(void))arg1;\n@end\n'
p838
sS'SDCompanionPublisherProtocol'
p839
S'@protocol SDCompanionPublisherProtocol <NSObject>\n\n@optional\n- (void)manager:(SDStreamManager *)arg1 connectedToService:(SFCompanionService *)arg2 withFileHandle:(NSFileHandle *)arg3 acceptHandler:(void (^)(_Bool))arg4;\n- (void)publisher:(SDStreamManager *)arg1 companionStreamForService:(SFCompanionService *)arg2 streamHandler:(SDStreamHandler *)arg3;\n- (void)publisher:(SDStreamManager *)arg1 didConnectToService:(SFCompanionService *)arg2 withStreamHandler:(SDStreamHandler *)arg3;\n@end\n'
p840
sS'NSXPCConnectionDelegate'
p841
S'@protocol NSXPCConnectionDelegate <NSObject>\n\n@optional\n- (void)connection:(NSXPCConnection *)arg1 handleInvocation:(NSInvocation *)arg2 isReply:(_Bool)arg3;\n- (id <NSSecureCoding>)replacementObjectForXPCConnection:(NSXPCConnection *)arg1 encoder:(NSXPCCoder *)arg2 object:(id)arg3;\n@end\n'
p842
sS'SFCompanionXPCManagerProtocol'
p843
S'@protocol SFCompanionXPCManagerProtocol <NSObject>\n- (void)createHotspotSessionForClientProxy:(id <SFRemoteHotspotClient>)arg1 reply:(void (^)(id <SFRemoteHotspotProtocol>, NSError *))arg2;\n- (void)appleAccountSignedOut;\n- (void)appleAccountSignedIn;\n- (void)createUnlockManagerWithReply:(void (^)(id <SFUnlockProtocol>, NSError *))arg1;\n- (void)createContinuityScannerForClientProxy:(id <SFContinuityScannerClient>)arg1 reply:(void (^)(id <SFContinuityScannerProtocol>, NSError *))arg2;\n- (void)createActivityAdvertiserForClientProxy:(id <SFActivityAdvertiserClient>)arg1 reply:(void (^)(id <SFActivityAdvertiserProtocol>, NSError *))arg2;\n- (void)createStreamsForMessage:(NSDictionary *)arg1 reply:(void (^)(NSFileHandle *, NSError *))arg2;\n- (void)createCompanionServiceManagerWithIdentifier:(NSString *)arg1 clientProxy:(id <SFCompanionServiceManagerClient>)arg2 reply:(void (^)(id <SFCompanionServiceManagerProtocol>, NSString *, NSString *, NSString *, NSError *))arg3;\n@end\n'
p844
ssS'System/Library/AppRemovalServices/com.apple.VoiceMemos.appremoval.xpc/com.apple.VoiceMemos.appremoval'
p845
(dp846
sS'Applications/AccountAuthenticationDialog.app/AccountAuthenticationDialog'
p847
(dp848
S'OOPAWebViewControllerDelegate'
p849
S'@protocol OOPAWebViewControllerDelegate <NSObject>\n- (void)webViewController:(OOPAWebViewController *)arg1 didFinishWithSuccess:(_Bool)arg2 response:(NSDictionary *)arg3;\n@end\n'
p850
sS'UIApplicationDelegate'
p851
S'@protocol UIApplicationDelegate <NSObject>\n\n@optional\n@property(retain, nonatomic) UIWindow *window;\n- (void)application:(UIApplication *)arg1 userDidAcceptCloudKitShareWithMetadata:(CKShareMetadata *)arg2;\n- (void)application:(UIApplication *)arg1 didUpdateUserActivity:(NSUserActivity *)arg2;\n- (void)application:(UIApplication *)arg1 didFailToContinueUserActivityWithType:(NSString *)arg2 error:(NSError *)arg3;\n- (_Bool)application:(UIApplication *)arg1 continueUserActivity:(NSUserActivity *)arg2 restorationHandler:(void (^)(NSArray *))arg3;\n- (_Bool)application:(UIApplication *)arg1 willContinueUserActivityWithType:(NSString *)arg2;\n- (void)application:(UIApplication *)arg1 didDecodeRestorableStateWithCoder:(NSCoder *)arg2;\n- (void)application:(UIApplication *)arg1 willEncodeRestorableStateWithCoder:(NSCoder *)arg2;\n- (_Bool)application:(UIApplication *)arg1 shouldRestoreApplicationState:(NSCoder *)arg2;\n- (_Bool)application:(UIApplication *)arg1 shouldSaveApplicationState:(NSCoder *)arg2;\n- (UIViewController *)application:(UIApplication *)arg1 viewControllerWithRestorationIdentifierPath:(NSArray *)arg2 coder:(NSCoder *)arg3;\n- (_Bool)application:(UIApplication *)arg1 shouldAllowExtensionPointIdentifier:(NSString *)arg2;\n- (unsigned long long)application:(UIApplication *)arg1 supportedInterfaceOrientationsForWindow:(UIWindow *)arg2;\n- (void)applicationProtectedDataDidBecomeAvailable:(UIApplication *)arg1;\n- (void)applicationProtectedDataWillBecomeUnavailable:(UIApplication *)arg1;\n- (void)applicationWillEnterForeground:(UIApplication *)arg1;\n- (void)applicationDidEnterBackground:(UIApplication *)arg1;\n- (void)application:(UIApplication *)arg1 handleIntent:(INIntent *)arg2 completionHandler:(void (^)(INIntentResponse *))arg3;\n- (void)applicationShouldRequestHealthAuthorization:(UIApplication *)arg1;\n- (void)application:(UIApplication *)arg1 handleWatchKitExtensionRequest:(NSDictionary *)arg2 reply:(void (^)(NSDictionary *))arg3;\n- (void)application:(UIApplication *)arg1 handleEventsForBackgroundURLSession:(NSString *)arg2 completionHandler:(void (^)(void))arg3;\n- (void)application:(UIApplication *)arg1 performActionForShortcutItem:(UIApplicationShortcutItem *)arg2 completionHandler:(void (^)(_Bool))arg3;\n- (void)application:(UIApplication *)arg1 performFetchWithCompletionHandler:(void (^)(unsigned long long))arg2;\n- (void)application:(UIApplication *)arg1 didReceiveRemoteNotification:(NSDictionary *)arg2 fetchCompletionHandler:(void (^)(unsigned long long))arg3;\n- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forLocalNotification:(UILocalNotification *)arg3 withResponseInfo:(NSDictionary *)arg4 completionHandler:(void (^)(void))arg5;\n- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forRemoteNotification:(NSDictionary *)arg3 completionHandler:(void (^)(void))arg4;\n- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forRemoteNotification:(NSDictionary *)arg3 withResponseInfo:(NSDictionary *)arg4 completionHandler:(void (^)(void))arg5;\n- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forLocalNotification:(UILocalNotification *)arg3 completionHandler:(void (^)(void))arg4;\n- (void)application:(UIApplication *)arg1 didReceiveLocalNotification:(UILocalNotification *)arg2;\n- (void)application:(UIApplication *)arg1 didReceiveRemoteNotification:(NSDictionary *)arg2;\n- (void)application:(UIApplication *)arg1 didFailToRegisterForRemoteNotificationsWithError:(NSError *)arg2;\n- (void)application:(UIApplication *)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)arg2;\n- (void)application:(UIApplication *)arg1 didRegisterUserNotificationSettings:(UIUserNotificationSettings *)arg2;\n- (void)application:(UIApplication *)arg1 didChangeStatusBarFrame:(struct CGRect)arg2;\n- (void)application:(UIApplication *)arg1 willChangeStatusBarFrame:(struct CGRect)arg2;\n- (void)application:(UIApplication *)arg1 didChangeStatusBarOrientation:(long long)arg2;\n- (void)application:(UIApplication *)arg1 willChangeStatusBarOrientation:(long long)arg2 duration:(double)arg3;\n- (void)applicationSignificantTimeChange:(UIApplication *)arg1;\n- (void)applicationWillTerminate:(UIApplication *)arg1;\n- (void)applicationDidReceiveMemoryWarning:(UIApplication *)arg1;\n- (_Bool)application:(UIApplication *)arg1 openURL:(NSURL *)arg2 options:(NSDictionary *)arg3;\n- (_Bool)application:(UIApplication *)arg1 openURL:(NSURL *)arg2 sourceApplication:(NSString *)arg3 annotation:(id)arg4;\n- (_Bool)application:(UIApplication *)arg1 handleOpenURL:(NSURL *)arg2;\n- (void)applicationWillResignActive:(UIApplication *)arg1;\n- (void)applicationDidBecomeActive:(UIApplication *)arg1;\n- (_Bool)application:(UIApplication *)arg1 didFinishLaunchingWithOptions:(NSDictionary *)arg2;\n- (_Bool)application:(UIApplication *)arg1 willFinishLaunchingWithOptions:(NSDictionary *)arg2;\n- (void)applicationDidFinishLaunching:(UIApplication *)arg1;\n@end\n'
p852
ssS'System/Library/PrivateFrameworks/StoreBookkeeperClient.framework/Support/storebookkeeperd'
p853
(dp854
S'NSXPCListenerDelegate'
p855
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p856
sS'SBCPlaybackPositionServiceProtocol_Internal'
p857
S'@protocol SBCPlaybackPositionServiceProtocol_Internal <SBCPlaybackPositionServiceProtocol, SBCDomainSyncServiceProtocol_Internal>\n- (oneway void)setClientConfiguration:(SBCClientConfiguration *)arg1;\n@end\n'
p858
sS'SBDPushNotificationControllerDelegate'
p859
S'@protocol SBDPushNotificationControllerDelegate <NSObject>\n\n@optional\n- (void)pushNotificationController:(SBDPushNotificationController *)arg1 didReceiveUpdateRequestForBookkeeperDomain:(NSString *)arg2 toDomainRevision:(NSString *)arg3;\n@end\n'
p860
sS'SBCPlaybackPositionServiceProtocol'
p861
S'@protocol SBCPlaybackPositionServiceProtocol <SBCDomainSyncServiceProtocol, SBCDomainValueServiceProtocol>\n@end\n'
p862
ssS'System/Library/AppRemovalServices/com.apple.MobileStore.appremoval.xpc/com.apple.MobileStore.appremoval'
p863
(dp864
sS'usr/libexec/nfcd'
p865
(dp866
S'_NFSessionCallbacks'
p867
S'@protocol _NFSessionCallbacks\n\n@optional\n- (void)handleInvalidatedXPCWithConnectionUserInfo:(NSDictionary *)arg1;\n- (void)handleRequestService:(NSData *)arg1 express:(_Bool)arg2;\n- (void)handleExpressModeTimeout;\n- (void)handleExpressModeExited;\n- (void)handleExpressModeStarted;\n- (void)handleFelicaStateEvent:(NSDictionary *)arg1 appletAID:(NSString *)arg2;\n- (void)handleRemoteTagsDetected:(NSArray *)arg1;\n- (void)handleHostCardReaderDetected:(NFHostCardEmulationDeviceHandle *)arg1;\n- (void)handleTransactionEndEvent:(NFContactlessPaymentEndEvent *)arg1;\n- (void)handleTransactionStartEvent:(NFContactlessPaymentStartEvent *)arg1;\n- (void)handleTimerExpiredEvent:(NSArray *)arg1;\n- (void)handleButtonActivationEvent:(NSString *)arg1;\n- (void)handleSelectEvent:(NSString *)arg1;\n- (void)handleSecureElementEndOfOperation;\n- (void)handleFieldReset;\n- (void)handleTechnologyDetected:(NFTechnologyEvent *)arg1;\n- (void)handleFieldChanged:(_Bool)arg1;\n@end\n'
p868
sS'NFSessionInterface'
p869
S'@protocol NFSessionInterface\n- (oneway void)endSession:(void (^)(void))arg1;\n@end\n'
p870
ssS'System/Library/AppRemovalServices/com.apple.weather.appremoval.xpc/com.apple.weather.appremoval'
p871
(dp872
sS'System/Library/PrivateFrameworks/iTunesStore.framework/Support/itunesstored'
p873
(dp874
S'pjRPsXEyBJiXQnH9'
p875
S'@protocol pjRPsXEyBJiXQnH9 <NSObject>\n- (void)getScoreMessageWithIdentifier:(NSString *)arg1 nonce:(NSData *)arg2 completion:(void (^)(NSData *, NSError *))arg3;\n- (void)computeScoresUsingSettings:(VD9LmqazgfzMqjuy *)arg1 completion:(void (^)(NSString *, NSData *, NSError *))arg2;\n@end\n'
p876
sS'UMUserSwitchStakeholder'
p877
S'@protocol UMUserSwitchStakeholder <NSObject>\n- (void)willSwitchUser;\n@end\n'
p878
ssS'System/Library/PrivateFrameworks/PhotoAnalysis.framework/Support/photoanalysisd'
p879
(dp880
sS'System/Library/PrivateFrameworks/DocumentManagerUICore.framework/PlugIns/RecentsAppPopover.appex/RecentsAppPopover'
p881
(dp882
sS'System/Library/PrivateFrameworks/ClassroomKit.framework/XPCServices/ScreenshotService.xpc/ScreenshotService'
p883
(dp884
sS'System/Library/PrivateFrameworks/CloudPhotoServices.framework/Support/CloudPhotoDerivativeGenerator'
p885
(dp886
sS'private/var/staged_system_apps/News.app/PlugIns/NewsToday.appex/NewsToday'
p887
(dp888
sS'System/Library/PrivateFrameworks/DiskSpaceDiagnostics.framework/XPCServices/FilesystemMetadataSnapshotService.xpc/FilesystemMetadataSnapshotService'
p889
(dp890
sS'System/Library/Frameworks/WatchKit.framework/Support/companionappd'
p891
(dp892
S'NSXPCListenerDelegate'
p893
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p894
sS'SPDaemonManagerTransactionObserver'
p895
S'@protocol SPDaemonManagerTransactionObserver <NSObject>\n\n@optional\n- (void)daemonManagerWillEndXPCTransaction;\n- (void)daemonManagerDidBeginXPCTransaction;\n@end\n'
p896
sS'SPLocalServerProtocol'
p897
S'@protocol SPLocalServerProtocol <NSObject>\n- (void)wakeExtensionForWatchApp:(NSString *)arg1;\n- (void)hideUserNotification;\n- (void)showUserNotification:(long long)arg1 applicationName:(NSString *)arg2;\n- (void)xcodeWillInstallSockPuppetAppWithCompanionAppIdentifier:(NSString *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)getCompanionExtensionPIDForCompanionAppWithIdentifier:(NSString *)arg1 completion:(void (^)(NSError *, int))arg2;\n- (void)getSockPuppetAppRunningStatusForCompanionAppWithIdentifier:(NSString *)arg1 completion:(void (^)(NSError *, _Bool))arg2;\n- (void)terminateSockPuppetAppForCompanionAppWithIdentifier:(NSString *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)launchSockPuppetAppForCompanionAppWithIdentifier:(NSString *)arg1 options:(NSDictionary *)arg2 completion:(void (^)(_Bool, NSError *))arg3;\n- (void)activeComplicationsWithCompletion:(void (^)(NSArray *))arg1;\n- (void)fetchInstalledApplicationsWithCompletion:(void (^)(NSDictionary *))arg1;\n@end\n'
p898
sS'SPTransportDelegate'
p899
S'@protocol SPTransportDelegate <NSObject>\n- (_Bool)unlockedSinceBoot;\n\n@optional\n- (NSDate *)dateOfFirstUnlock;\n- (void)didReceiveSecureData;\n- (void)incomingProtobuf:(IDSProtobuf *)arg1;\n- (void)logDataSent:(unsigned long long)arg1 application:(NSString *)arg2;\n- (void)incomingData:(NSData *)arg1;\n@end\n'
p900
sS'SPCompanionAppServerProtocol'
p901
S'@protocol SPCompanionAppServerProtocol <NSObject>\n- (void)extensionWithIdentifier:(NSString *)arg1 gotUnknownInterfaceController:(NSString *)arg2;\n- (void)launchCompanionAppForGizmoAppWithIdentifier:(NSString *)arg1 withUserInfoData:(NSData *)arg2 reply:(void (^)(NSDictionary *, NSError *, long long, NSString *))arg3;\n- (void)requestTimingData:(NSString *)arg1 timingMetaData:(NSDictionary *)arg2;\n- (void)fetchNotificationForNotificationID:(NSString *)arg1 completion:(void (^)(NSDictionary *, NSData *, NSData *, NSError *))arg2;\n- (void)sendData:(NSData *)arg1 identifier:(NSString *)arg2 clientIdentifiers:(NSArray *)arg3 reply:(void (^)(NSData *, NSError *))arg4;\n- (void)sendData:(NSData *)arg1 identifier:(NSString *)arg2 clientIdentifiers:(NSArray *)arg3;\n- (void)sendCacheRequest:(NSData *)arg1 identifier:(NSString *)arg2;\n@end\n'
p902
ssS'System/Library/AppRemovalServices/com.apple.Music.appremoval.xpc/com.apple.Music.appremoval'
p903
(dp904
sS'System/Library/PrivateFrameworks/UIFoundation.framework/XPCServices/com.apple.uifoundation-bundle-helper.xpc/com.apple.uifoundation-bundle-helper'
p905
(dp906
sS'usr/libexec/nanoregistrylaunchd'
p907
(dp908
S'NSXPCListenerDelegate'
p909
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p910
sS'NRLaunchDaemonXPCDaemonDelegate'
p911
S'@protocol NRLaunchDaemonXPCDaemonDelegate <NSObject>\n- (void)xpcGetBackupHashWithCompletion:(void (^)(NSData *, NSError *))arg1;\n- (void)xpcUnquarantineDataWithStoreUUID:(NSUUID *)arg1 services:(NSSet *)arg2 completion:(void (^)(NSError *))arg3;\n- (void)xpcDeleteQuarantinedDataWithStoreUUID:(NSUUID *)arg1 completion:(void (^)(void))arg2;\n- (void)xpcQuarantineDataWithStoreUUID:(NSUUID *)arg1 services:(NSSet *)arg2 completion:(void (^)(NSError *))arg3;\n- (void)xpcCleanupPairingStoreWithUUIDs:(NSArray *)arg1 withCompletion:(void (^)(NSError *))arg2;\n- (void)xpcDeletePairedStoreWithUUID:(NSUUID *)arg1 withCompletion:(void (^)(NSError *))arg2;\n- (void)xpcEnableNanoDaemonsWithBool:(_Bool)arg1 withCompletion:(void (^)(NSError *))arg2;\n@end\n'
p912
ssS'System/Library/Frameworks/Social.framework/XPCServices/com.apple.weibo.xpc/com.apple.weibo'
p913
(dp914
sS'usr/libexec/wifivelocityd'
p915
(dp916
S'NSXPCListenerDelegate'
p917
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p918
sS'W5XPCConnectionDelegate'
p919
S'@protocol W5XPCConnectionDelegate <NSObject>\n- (void)xpcConnection:(W5XPCConnection *)arg1 cancelWiFiSnifferWithUUID:(NSUUID *)arg2 peerID:(NSString *)arg3 reply:(void (^)(NSError *))arg4;\n- (void)xpcConnection:(W5XPCConnection *)arg1 cancelPerformanceTestWithUUID:(NSUUID *)arg2 peerID:(NSString *)arg3 reply:(void (^)(NSError *))arg4;\n- (void)xpcConnection:(W5XPCConnection *)arg1 cancelCollectLogsWithUUID:(NSUUID *)arg2 peerID:(NSString *)arg3 reply:(void (^)(NSError *))arg4;\n- (void)xpcConnection:(W5XPCConnection *)arg1 cancelDiagnosticsWithUUID:(NSUUID *)arg2 peerID:(NSString *)arg3 reply:(void (^)(NSError *))arg4;\n- (void)xpcConnection:(W5XPCConnection *)arg1 runPerformanceTest:(W5PerfConfiguration *)arg2 uuid:(NSUUID *)arg3 reply:(void (^)(NSError *, W5PerfResult *))arg4;\n- (void)xpcConnection:(W5XPCConnection *)arg1 runWiFiSnifferOnChannel:(W5WiFiChannel *)arg2 duration:(double)arg3 peer:(W5Peer *)arg4 uuid:(NSUUID *)arg5 reply:(void (^)(NSError *, NSURL *))arg6;\n- (void)xpcConnection:(W5XPCConnection *)arg1 collectLogItems:(NSArray *)arg2 compress:(_Bool)arg3 peer:(W5Peer *)arg4 uuid:(NSUUID *)arg5 reply:(void (^)(NSError *, NSArray *, NSURL *))arg6;\n- (void)xpcConnection:(W5XPCConnection *)arg1 setDebugConfiguration:(W5DebugConfiguration *)arg2 peer:(W5Peer *)arg3 reply:(void (^)(NSError *))arg4;\n- (void)xpcConnection:(W5XPCConnection *)arg1 queryDebugConfigurationForPeer:(W5Peer *)arg2 reply:(void (^)(NSError *, W5DebugConfiguration *))arg3;\n- (void)xpcConnection:(W5XPCConnection *)arg1 runDiagnosticsTests:(NSArray *)arg2 peer:(W5Peer *)arg3 uuid:(NSUUID *)arg4 reply:(void (^)(NSError *, NSArray *))arg5;\n- (void)xpcConnection:(W5XPCConnection *)arg1 queryStatusForPeer:(W5Peer *)arg2 reply:(void (^)(NSError *, W5Status *))arg3;\n- (void)xpcConnection:(W5XPCConnection *)arg1 queryLocalPeerAndReply:(void (^)(NSError *, W5Peer *))arg2;\n- (void)xpcConnection:(W5XPCConnection *)arg1 queryPeerCacheAndReply:(void (^)(NSError *, NSArray *))arg2;\n- (void)xpcConnection:(W5XPCConnection *)arg1 stopMonitoringEvents:(NSArray *)arg2 reply:(void (^)(NSError *))arg3;\n- (void)xpcConnection:(W5XPCConnection *)arg1 startMonitoringEvents:(NSArray *)arg2 reply:(void (^)(NSError *))arg3;\n- (void)xpcConnection:(W5XPCConnection *)arg1 stopBrowsingAndReply:(void (^)(NSError *))arg2;\n- (void)xpcConnection:(W5XPCConnection *)arg1 startBrowsingAndReply:(void (^)(NSError *))arg2;\n@end\n'
p920
ssS'System/Library/PrivateFrameworks/BookLibrary.framework/Support/bookassetd'
p921
(dp922
S'NSXPCListenerDelegate'
p923
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p924
ssS'usr/libexec/nsurlstoraged'
p925
(dp926
S'NetworkStorageXPCProtocol'
p927
S'@protocol NetworkStorageXPCProtocol\n- (void)performSchemaCheckAndUpdate;\n- (void)setMinSizeForVMCachedResource:(long long)arg1;\n- (void)currentDiskUsageWithCompletionHandler:(void (^)(long long))arg1;\n- (void)setMaxSize:(long long)arg1;\n- (void)copyAllPartitionNamesWithCompletionHandler:(void (^)(NSArray *))arg1;\n- (void)copyAllHostNamesForOptionalPartition:(NSString *)arg1 completionHandler:(void (^)(NSArray *))arg2;\n- (void)deleteAllHostNames:(NSArray *)arg1 forOptionalPartition:(NSString *)arg2;\n- (void)deleteResponsesSinceDate:(NSDate *)arg1;\n- (void)deleteAllResponses;\n- (void)deleteResponseForRequestWithKey:(NSString *)arg1 completionHandler:(void (^)(_Bool))arg2;\n- (void)addCachedResponseWithDictionary:(NSDictionary *)arg1 key:(NSString *)arg2;\n- (void)createStorageTaskManagerForPath:(NSString *)arg1 maxSize:(long long)arg2 extension:(NSData *)arg3;\n@end\n'
p928
ssS'System/Library/PrivateFrameworks/CameraUI.framework/Support/nebulad'
p929
(dp930
sS'System/Library/Frameworks/VideoSubscriberAccount.framework/Support/VideoSubscriberAccountBulletind'
p931
(dp932
sS'System/Library/PrivateFrameworks/HomeSharing.framework/Support/itunescloudd'
p933
(dp934
S'CloudPushNotificationControllerDelegate'
p935
S'@protocol CloudPushNotificationControllerDelegate <NSObject>\n- (void)pushNotificationController:(CloudPushNotificationController *)arg1 didReceivePushForService:(int)arg2 message:(ICPushNotificationMessage *)arg3;\n@end\n'
p936
sS'NSXPCListenerDelegate'
p937
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p938
sS'SSAuthenticateRequestDelegate'
p939
S'@protocol SSAuthenticateRequestDelegate <SSRequestDelegate>\n\n@optional\n- (void)authenticateRequest:(SSAuthenticateRequest *)arg1 didReceiveResponse:(SSAuthenticateResponse *)arg2;\n@end\n'
p940
ssS'usr/libexec/ProxiedCrashCopier'
p941
(dp942
sS'System/Library/Frameworks/ReplayKit.framework/PlugIns/RPVideoEditorExtension.appex/RPVideoEditorExtension'
p943
(dp944
sS'usr/libexec/installd'
p945
(dp946
S'MobileInstallerProtocol'
p947
S'@protocol MobileInstallerProtocol\n- (void)dieForTesting;\n- (void)snapshotWKAppInCompanionAppID:(NSString *)arg1 toURL:(NSURL *)arg2 options:(NSDictionary *)arg3 completion:(void (^)(NSDictionary *, NSError *))arg4;\n- (void)getAppMetadataForApp:(NSString *)arg1 completion:(void (^)(MIBundleMetadata *, NSError *))arg2;\n- (void)updatePlaceholderMetadataForApp:(NSString *)arg1 installType:(unsigned long long)arg2 failureReason:(unsigned long long)arg3 underlyingError:(NSError *)arg4 failureSource:(unsigned long long)arg5 completion:(void (^)(NSError *))arg6;\n- (void)updateAppDataProtectionWithOptions:(NSDictionary *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)updateiTunesMetadataForLSWithIdentifier:(NSString *)arg1 options:(NSDictionary *)arg2 plistData:(NSData *)arg3 completion:(void (^)(NSError *))arg4;\n- (void)updateSinfForLSWithIdentifier:(NSString *)arg1 withOptions:(NSDictionary *)arg2 sinfData:(NSData *)arg3 completion:(void (^)(NSDictionary *, NSError *))arg4;\n- (void)checkCapabilities:(NSObject *)arg1 withOptions:(NSDictionary *)arg2 completion:(void (^)(NSDictionary *, NSError *))arg3;\n- (void)listSafeHarborsOfType:(long long)arg1 withOptions:(NSDictionary *)arg2 completion:(void (^)(NSDictionary *, NSError *))arg3;\n- (void)removeSafeHarborForIdentifier:(NSString *)arg1 ofType:(long long)arg2 withOptions:(NSDictionary *)arg3 completion:(void (^)(NSError *))arg4;\n- (void)registerSafeHarborAtPath:(NSString *)arg1 forIdentifier:(NSString *)arg2 ofType:(long long)arg3 withOptions:(NSDictionary *)arg4 completion:(void (^)(NSError *))arg5;\n- (void)processRestoredContainerWithIdentifier:(NSString *)arg1 ofType:(long long)arg2 options:(NSDictionary *)arg3 completion:(void (^)(NSError *))arg4;\n- (void)fetchDiskUsageForIdentifiers:(NSArray *)arg1 withOptions:(NSDictionary *)arg2 completion:(void (^)(NSDictionary *, NSError *))arg3;\n- (void)enumerateInstalledAppsWithOptions:(NSDictionary *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)fetchInstalledAppsWithOptions:(NSDictionary *)arg1 completion:(void (^)(NSDictionary *, NSError *))arg2;\n- (void)fetchInstalledDeveloperAppsWithMountPath:(NSString *)arg1 completion:(void (^)(NSDictionary *, NSError *))arg2;\n- (void)updateSystemAppStateForIdentifier:(NSString *)arg1 appState:(int)arg2 completion:(void (^)(NSError *))arg3;\n- (void)lookupSystemAppStateWithOptions:(NSDictionary *)arg1 completion:(void (^)(NSDictionary *, NSError *))arg2;\n- (void)clearUninstalledIdentifiers:(NSArray *)arg1 withOptions:(NSDictionary *)arg2 completion:(void (^)(NSError *))arg3;\n- (void)lookupUninstalledWithOptions:(NSDictionary *)arg1 completion:(void (^)(NSDictionary *, NSError *))arg2;\n- (void)uninstallIdentifiers:(NSArray *)arg1 withOptions:(NSDictionary *)arg2 completion:(void (^)(NSDictionary *, NSError *))arg3;\n- (void)installURL:(NSURL *)arg1 withOptions:(NSDictionary *)arg2 completion:(void (^)(NSDictionary *, NSError *))arg3;\n@end\n'
p948
ssS'System/Library/PrivateFrameworks/CoreFollowUp.framework/followupd'
p949
(dp950
S'NSXPCListenerDelegate'
p951
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p952
sS'FLDaemonProtocol'
p953
S'@protocol FLDaemonProtocol <NSObject>\n- (void)postHSA2PasswordResetNotification:(FLHSA2PasswordResetNotification *)arg1 completion:(void (^)(_Bool, NSError *))arg2;\n- (void)didActivateHSA2LoginNotificationNotification:(FLHSA2LoginNotification *)arg1;\n- (void)tearDownHSA2LoginNotificationWithPushMessageID:(NSString *)arg1;\n- (void)postHSA2PasswordChangeForAppleID:(NSString *)arg1 completion:(void (^)(unsigned long long, NSError *))arg2;\n- (void)postHSA2LoginCode:(NSNumber *)arg1 withNotification:(FLHSA2LoginNotification *)arg2 completion:(void (^)(unsigned long long, NSError *))arg3;\n- (void)postHSA2LoginNotification:(FLHSA2LoginNotification *)arg1 completion:(void (^)(unsigned long long, NSError *))arg2;\n- (void)clearNotificationForItem:(FLFollowUpItem *)arg1 completion:(void (^)(_Bool, NSError *))arg2;\n- (void)clearPendingFollowUpItemsForClientIdentifier:(NSString *)arg1 uniqueIdentifiers:(NSArray *)arg2 completion:(void (^)(_Bool, NSError *))arg3;\n- (void)clearPendingFollowUpItemsForClientIdentifier:(NSString *)arg1 completion:(void (^)(_Bool, NSError *))arg2;\n- (void)pendingFollowUpItemsForClientIdentifier:(NSString *)arg1 completion:(void (^)(NSArray *, NSError *))arg2;\n- (void)countOfPendingFollowUpItemsForClientIdentifier:(NSString *)arg1 completion:(void (^)(unsigned long long, NSError *))arg2;\n- (void)postFollowUpItem:(FLFollowUpItem *)arg1 completion:(void (^)(_Bool, NSError *))arg2;\n@end\n'
p954
sS'ClientInterfaceDelegate'
p955
S'@protocol ClientInterfaceDelegate <NSObject>\n- (void)clientInterface:(ClientInterface *)arg1 wasInvalidatedWithError:(NSError *)arg2;\n@end\n'
p956
ssS'System/Library/AppRemovalServices/com.apple.Bridge.appremoval.xpc/com.apple.Bridge.appremoval'
p957
(dp958
sS'System/Library/PrivateFrameworks/ToneLibrary.framework/XPCServices/com.apple.tonelibraryd.xpc/com.apple.tonelibraryd'
p959
(dp960
sS'System/Library/PrivateFrameworks/CloudPhotoLibrary.framework/Support/cloudphotod'
p961
(dp962
S'CPLResourceProgressDelegate'
p963
S'@protocol CPLResourceProgressDelegate <NSObject>\n- (void)libraryManager:(CPLLibraryManager *)arg1 uploadDidFinishForResourceTransferTask:(CPLResourceTransferTask *)arg2 withError:(NSError *)arg3;\n- (void)libraryManager:(CPLLibraryManager *)arg1 uploadDidStartForResourceTransferTask:(CPLResourceTransferTask *)arg2;\n- (void)libraryManager:(CPLLibraryManager *)arg1 backgroundDownloadDidFinishForResource:(CPLResource *)arg2;\n- (void)libraryManager:(CPLLibraryManager *)arg1 inMemoryDownloadDidFinishForResourceTransferTask:(CPLResourceTransferTask *)arg2 data:(NSData *)arg3 withError:(NSError *)arg4;\n- (void)libraryManager:(CPLLibraryManager *)arg1 downloadDidFinishForResourceTransferTask:(CPLResourceTransferTask *)arg2 withError:(NSError *)arg3;\n- (void)libraryManager:(CPLLibraryManager *)arg1 downloadDidStartForResourceTransferTask:(CPLResourceTransferTask *)arg2;\n\n@optional\n- (void)sizeOfResourcesToUploadDidChangeForLibraryManager:(CPLLibraryManager *)arg1;\n- (void)libraryManager:(CPLLibraryManager *)arg1 uploadDidProgress:(float)arg2 forResourceTransferTask:(CPLResourceTransferTask *)arg3;\n- (void)libraryManager:(CPLLibraryManager *)arg1 downloadDidProgress:(float)arg2 forResourceTransferTask:(CPLResourceTransferTask *)arg3;\n- (void)libraryManager:(CPLLibraryManager *)arg1 backgroundDownloadDidFailForResource:(CPLResource *)arg2;\n@end\n'
p964
sS'CPLLibraryManagerDelegate'
p965
S'@protocol CPLLibraryManagerDelegate <NSObject>\n- (void)libraryManagerHasChangesToPull:(CPLLibraryManager *)arg1;\n- (void)libraryManagerDidStartSynchronization:(CPLLibraryManager *)arg1;\n- (void)libraryManagerStatusDidChange:(CPLLibraryManager *)arg1;\n\n@optional\n- (NSString *)displayableNameForLibraryManager:(CPLLibraryManager *)arg1;\n- (void)libraryManagerHasStatusChanges:(CPLLibraryManager *)arg1;\n- (void)libraryManagerDidChangeConfiguration:(CPLLibraryManager *)arg1;\n@end\n'
p966
sS'CPLCameraWatcherDelegate'
p967
S'@protocol CPLCameraWatcherDelegate <NSObject>\n- (void)cameraWatcherDidChangeState:(CPLCameraWatcher *)arg1;\n@end\n'
p968
sS'CPLDaemonLibraryManagerProtocol'
p969
S'@protocol CPLDaemonLibraryManagerProtocol <CPLDaemonLibraryManagerMinimalProtocol>\n- (void)acknowledgeChangedStatuses:(NSArray *)arg1;\n- (void)deleteResources:(NSArray *)arg1 checkServerIfNecessary:(_Bool)arg2 completionHandler:(void (^)(NSArray *, NSDictionary *))arg3;\n- (void)commitChangeBatch:(CPLChangeBatch *)arg1 withCompletionHandler:(void (^)(NSError *, unsigned long long, CPLPushChangeTasks *, NSString *))arg2;\n- (void)acknowledgeChangeBatch:(CPLChangeBatch *)arg1 withCompletionHandler:(void (^)(NSError *, NSString *))arg2;\n- (void)getChangeBatchWithCompletionHandler:(void (^)(NSError *, CPLChangeBatch *))arg1;\n- (void)finalizeSessionWithCompletionHandler:(void (^)(NSError *))arg1;\n- (void)beginPullSessionWithKnownLibraryVersion:(NSString *)arg1 context:(CPLChangeSessionContext *)arg2 completionHandler:(void (^)(NSError *))arg3;\n- (void)beginPushSessionWithKnownLibraryVersion:(NSString *)arg1 context:(CPLChangeSessionContext *)arg2 completionHandler:(void (^)(NSError *))arg3;\n@end\n'
p970
sS'NSXPCListenerDelegate'
p971
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p972
sS'CPLBatterySaverWatcherDelegate'
p973
S'@protocol CPLBatterySaverWatcherDelegate <NSObject>\n- (void)batterySaverWatcherDidChangeState:(CPLBatterySaverWatcher *)arg1;\n@end\n'
p974
sS'CPLDaemonLibraryManagerDelegate'
p975
S'@protocol CPLDaemonLibraryManagerDelegate <NSObject>\n- (void)startSyncTask;\n- (void)daemonLibraryManagerIsDeactivatingLibrary:(CPLDaemonLibraryManager *)arg1;\n- (void)daemonLibraryManagerHasBeenDisconnected:(CPLDaemonLibraryManager *)arg1;\n- (CPLEngineLibrary *)daemonLibraryManager:(CPLDaemonLibraryManager *)arg1 engineLibraryWithClientLibraryBaseURL:(NSURL *)arg2 cloudLibraryStateStorageURL:(NSURL *)arg3 cloudLibraryResourceStorageURL:(NSURL *)arg4 libraryIdentifier:(NSString *)arg5 error:(id *)arg6;\n@end\n'
p976
sS'CPLFileWatcherDelegate'
p977
S'@protocol CPLFileWatcherDelegate <NSObject>\n- (void)fileWatcherFileDidDisappear:(CPLFileWatcher *)arg1;\n- (void)fileWatcherFileDidAppear:(CPLFileWatcher *)arg1;\n@end\n'
p978
sS'APSConnectionDelegate'
p979
S'@protocol APSConnectionDelegate <NSObject>\n- (void)connection:(APSConnection *)arg1 didReceivePublicToken:(NSData *)arg2;\n\n@optional\n- (void)connectionDidReconnect:(APSConnection *)arg1;\n- (void)connection:(APSConnection *)arg1 didChangeConnectedStatus:(_Bool)arg2;\n- (void)connection:(APSConnection *)arg1 didFailToSendOutgoingMessage:(APSOutgoingMessage *)arg2 error:(NSError *)arg3;\n- (void)connection:(APSConnection *)arg1 didSendOutgoingMessage:(APSOutgoingMessage *)arg2;\n- (void)connection:(APSConnection *)arg1 didReceiveMessageForTopic:(NSString *)arg2 userInfo:(NSDictionary *)arg3;\n- (void)connection:(APSConnection *)arg1 didReceiveIncomingMessage:(APSIncomingMessage *)arg2;\n- (void)connection:(APSConnection *)arg1 didReceiveToken:(NSData *)arg2 forTopic:(NSString *)arg3 identifier:(NSString *)arg4;\n@end\n'
p980
sS'UMUserSyncStakeholder'
p981
S'@protocol UMUserSyncStakeholder <UMUserSwitchStakeholder>\n- (void)uploadContent;\n@end\n'
p982
sS'NSXPCConnectionDelegate'
p983
S'@protocol NSXPCConnectionDelegate <NSObject>\n\n@optional\n- (void)connection:(NSXPCConnection *)arg1 handleInvocation:(NSInvocation *)arg2 isReply:(_Bool)arg3;\n- (id <NSSecureCoding>)replacementObjectForXPCConnection:(NSXPCConnection *)arg1 encoder:(NSXPCCoder *)arg2 object:(id)arg3;\n@end\n'
p984
sS'CPLEngineLibraryOwner'
p985
S'@protocol CPLEngineLibraryOwner <NSObject>\n- (void)engineLibrary:(CPLEngineLibrary *)arg1 getStatusDictionaryWithCompletionHandler:(void (^)(NSDictionary *, NSError *))arg2;\n- (void)engineLibrary:(CPLEngineLibrary *)arg1 getStatusWithCompletionHandler:(void (^)(NSString *, NSError *))arg2;\n- (NSString *)ownerNameForEngineLibrary:(CPLEngineLibrary *)arg1;\n- (void)engineLibrary:(CPLEngineLibrary *)arg1 noteClientIsInForeground:(_Bool)arg2;\n@end\n'
p986
ssS'usr/libexec/backboardd'
p987
(dp988
S'BKSAlternateSystemAppServerProtocol'
p989
S'@protocol BKSAlternateSystemAppServerProtocol <NSObject>\n- (void)unblockSystemAppForAlternateSystemApp;\n- (void)terminateAlternateSystemAppWithBundleID:(NSString *)arg1;\n- (void)openAlternateSystemAppWithBundleID:(NSString *)arg1;\n- (void)blockSystemAppForAlternateSystemApp;\n@end\n'
p990
sS'NSXPCListenerDelegate'
p991
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p992
sS'BKEventFocusManagerServerInterface'
p993
S'@protocol BKEventFocusManagerServerInterface <NSObject>\n- (void)setObservesTouchDelivery:(_Bool)arg1 forTouchIdentifier:(unsigned int)arg2;\n- (void)setObservesFocusDeferralChanges:(_Bool)arg1;\n@end\n'
p994
sS'NSXPCConnectionDelegate'
p995
S'@protocol NSXPCConnectionDelegate <NSObject>\n\n@optional\n- (void)connection:(NSXPCConnection *)arg1 handleInvocation:(NSInvocation *)arg2 isReply:(_Bool)arg3;\n- (id <NSSecureCoding>)replacementObjectForXPCConnection:(NSXPCConnection *)arg1 encoder:(NSXPCCoder *)arg2 object:(id)arg3;\n@end\n'
p996
sS'BKSTouchDeliveryPolicyServerInterface'
p997
S'@protocol BKSTouchDeliveryPolicyServerInterface <NSObject>\n- (void)ipc_addPolicy:(BKSTouchDeliveryPolicy *)arg1;\n@end\n'
p998
ssS'System/Library/PrivateFrameworks/MediaServices.framework/Support/mediaartworkd'
p999
(dp1000
sS'usr/libexec/siriknowledged'
p1001
(dp1002
sS'private/var/staged_system_apps/Files.app/PlugIns/RecentsWidget.appex/RecentsWidget'
p1003
(dp1004
sS'System/Library/PrivateFrameworks/WatchListKit.framework/Support/watchlistd'
p1005
(dp1006
S'NSXPCListenerDelegate'
p1007
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p1008
sS'WLDClientConnectionDelegate'
p1009
S'@protocol WLDClientConnectionDelegate <NSObject>\n\n@optional\n- (void)clientConnectionDidInvalidate:(WLDClientConnection *)arg1;\n@end\n'
p1010
sS'WLKConnectionServerProtocol'
p1011
S'@protocol WLKConnectionServerProtocol <NSObject>\n- (void)ping;\n- (void)fetchSettings:(void (^)(NSDictionary *))arg1;\n- (void)postSettings:(NSDictionary *)arg1 replyHandler:(void (^)(_Bool))arg2;\n- (void)writeSettingsStore:(NSDictionary *)arg1 replyHandler:(void (^)(_Bool))arg2;\n- (void)readSettingsStore:(void (^)(NSDictionary *))arg1;\n- (void)setNextConfigurationEK:(NSString *)arg1;\n- (void)invalidateConfiguration:(void (^)(void))arg1;\n- (void)fetchConfigurationCache:(void (^)(WLKServerConfigurationResponse *))arg1;\n- (void)fetchConfiguration:(void (^)(WLKServerConfigurationResponse *))arg1;\n- (void)fetchApplications:(void (^)(NSDictionary *))arg1;\n- (void)deletePlaybackActivityWithIdentifier:(NSString *)arg1 bundleID:(NSString *)arg2;\n- (void)requestConsentForBundleID:(NSString *)arg1 forceAuth:(_Bool)arg2 replyHandler:(void (^)(_Bool))arg3;\n- (void)requestPlaybackSummaryForID:(NSNumber *)arg1 completion:(void (^)(WLKPlaybackSummary *))arg2;\n- (void)requestPlaybackSummary:(void (^)(WLKPlaybackSummary *))arg1;\n@end\n'
p1012
ssS'System/Library/AppRemovalServices/com.apple.videos.appremoval.xpc/com.apple.videos.appremoval'
p1013
(dp1014
sS'System/Library/PrivateFrameworks/MapsSupport.framework/nanomapscd'
p1015
(dp1016
S'NMMapsXPCInterface'
p1017
S'@protocol NMMapsXPCInterface\n- (void)_debug_fetchDiagnosticsString:(void (^)(NSString *, NSError *))arg1;\n- (void)_debug_fetchServerConfiguration:(void (^)(NSDictionary *, NSError *))arg1;\n- (void)setDroppedPin:(MSPDroppedPin *)arg1;\n- (void)requestSyncUpdateWithReply:(void (^)(void))arg1;\n- (void)clearPreviewRoutesForContext:(NSData *)arg1;\n- (void)sendSelectedPreviewRouteIndex:(unsigned long long)arg1 routeContext:(NSData *)arg2;\n- (void)sendPreviewRoutes:(NSArray *)arg1 error:(NSDictionary *)arg2 routeContext:(NSData *)arg3;\n- (void)checkinForNavigationControl;\n@end\n'
p1018
sS'GEOResourceManifestTileGroupObserver'
p1019
S'@protocol GEOResourceManifestTileGroupObserver <NSObject>\n\n@optional\n- (void)resourceManifestManager:(GEOResourceManifestManager *)arg1 didChangeActiveTileGroup:(GEOActiveTileGroup *)arg2 fromOldTileGroup:(GEOActiveTileGroup *)arg3;\n- (void)resourceManifestManagerDidChangeActiveTileGroup:(GEOResourceManifestManager *)arg1;\n- (void)resourceManifestManagerWillChangeActiveTileGroup:(GEOResourceManifestManager *)arg1;\n@end\n'
p1020
sS'GEOExperimentConfigurationObserver'
p1021
S'@protocol GEOExperimentConfigurationObserver <NSObject>\n\n@optional\n- (void)experimentConfigurationDidChange:(GEOExperimentConfiguration *)arg1;\n@end\n'
p1022
sS'NSXPCListenerDelegate'
p1023
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p1024
sS'NMDeviceConnectionObserver'
p1025
S'@protocol NMDeviceConnectionObserver <NSObject>\n\n@optional\n- (void)connectionNeedsStateSynchronization:(NMDeviceConnection *)arg1;\n- (void)connection:(NMDeviceConnection *)arg1 didChangeDeviceNearby:(_Bool)arg2;\n- (void)connection:(NMDeviceConnection *)arg1 didChangeDeviceConnectivity:(_Bool)arg2;\n@end\n'
p1026
sS'NMCSyncManagerDelegate'
p1027
S'@protocol NMCSyncManagerDelegate <NSObject>\n- (void)syncManager:(NMCSyncManager *)arg1 didRequestInitialSync:(void (^)(NSError *))arg2;\n- (void)syncManagerDidUpdate:(NMCSyncManager *)arg1;\n@end\n'
p1028
sS'NMCServerXPCInterface'
p1029
S'@protocol NMCServerXPCInterface <GEONavXPCInterface>\n- (void)invalidateNavigationSessionWithRouteContext:(NSData *)arg1;\n- (void)pingForNavigationBarrier:(void (^)(void))arg1;\n@end\n'
p1030
sS'NRDevicePropertyObserver'
p1031
S'@protocol NRDevicePropertyObserver <NSObject>\n- (void)device:(NRDevice *)arg1 propertyDidChange:(NSString *)arg2 fromValue:(id)arg3;\n@end\n'
p1032
ssS'Applications/Setup.app/Setup'
p1033
(dp1034
sS'System/Library/PrivateFrameworks/AuthKitUI.framework/PlugIns/AKSecondFactorEntryAlert.appex/AKSecondFactorEntryAlert'
p1035
(dp1036
sS'System/Library/AppRemovalServices/com.apple.mobilenotes.appremoval.xpc/com.apple.mobilenotes.appremoval'
p1037
(dp1038
sS'usr/libexec/securityd'
p1039
(dp1040
S'CKKSControlProtocol'
p1041
S'@protocol CKKSControlProtocol\n- (void)rpcForceUploadAnalyticsWithReply:(void (^)(_Bool, NSError *))arg1;\n- (void)rpcGetAnalyticsJSONWithReply:(void (^)(NSData *, NSError *))arg1;\n- (void)rpcGetAnalyticsSysdiagnoseWithReply:(void (^)(NSString *, NSError *))arg1;\n- (void)rpcPushOutgoingChanges:(NSString *)arg1 reply:(void (^)(NSError *))arg2;\n- (void)rpcFetchAndProcessClassAChanges:(NSString *)arg1 reply:(void (^)(NSError *))arg2;\n- (void)rpcFetchAndProcessChanges:(NSString *)arg1 reply:(void (^)(NSError *))arg2;\n- (void)rpcStatus:(NSString *)arg1 reply:(void (^)(NSArray *, NSError *))arg2;\n- (void)rpcResync:(NSString *)arg1 reply:(void (^)(NSError *))arg2;\n- (void)rpcResetCloudKit:(NSString *)arg1 reply:(void (^)(NSError *))arg2;\n- (void)rpcResetLocal:(NSString *)arg1 reply:(void (^)(NSError *))arg2;\n- (void)performanceCounters:(void (^)(NSDictionary *))arg1;\n@end\n'
p1042
sS'NSXPCListenerDelegate'
p1043
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p1044
sS'SOSControlProtocol'
p1045
S'@protocol SOSControlProtocol\n- (void)setWatchdogParmeters:(NSDictionary *)arg1 complete:(void (^)(NSError *))arg2;\n- (void)getWatchdogParameters:(void (^)(NSDictionary *, NSError *))arg1;\n- (void)triggerSync:(NSArray *)arg1 complete:(void (^)(_Bool, NSError *))arg2;\n- (void)importInitialSyncCredentials:(NSArray *)arg1 complete:(void (^)(_Bool, NSError *))arg2;\n- (void)initialSyncCredentials:(unsigned int)arg1 complete:(void (^)(NSArray *, NSError *))arg2;\n- (void)joinCircleWithBlob:(NSData *)arg1 version:(int)arg2 complete:(void (^)(_Bool, NSError *))arg3;\n- (void)circleJoiningBlob:(NSData *)arg1 complete:(void (^)(NSData *, NSError *))arg2;\n- (void)myPeerInfo:(void (^)(NSData *, NSError *))arg1;\n- (void)stashAccountCredential:(NSData *)arg1 complete:(void (^)(_Bool, NSError *))arg2;\n- (void)validatedStashedAccountCredential:(void (^)(NSData *, NSError *))arg1;\n- (void)assertStashedAccountCredential:(void (^)(_Bool, NSError *))arg1;\n- (void)stashedCredentialPublicKey:(void (^)(NSData *, NSError *))arg1;\n- (void)rateLimitingPerformanceCounters:(void (^)(NSDictionary *))arg1;\n- (void)idsPerformanceCounters:(void (^)(NSDictionary *))arg1;\n- (void)kvsPerformanceCounters:(void (^)(NSDictionary *))arg1;\n- (void)userPublicKey:(void (^)(_Bool, NSData *, NSError *))arg1;\n@end\n'
p1046
ssS'usr/libexec/rapportd'
p1047
(dp1048
S'NSXPCListenerDelegate'
p1049
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p1050
sS'RPDaemonXPCServerInterface'
p1051
S'@protocol RPDaemonXPCServerInterface\n- (void)diagnosticShow:(NSString *)arg1 level:(int)arg2 completion:(void (^)(NSString *))arg3;\n- (void)diagnosticLogControl:(NSString *)arg1 completion:(void (^)(NSString *))arg2;\n- (void)activateAssertionWithIdentifier:(NSString *)arg1;\n@end\n'
p1052
ssS'System/Library/PrivateFrameworks/NanoBackup.framework/nanobackupd'
p1053
(dp1054
S'NSXPCListenerDelegate'
p1055
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p1056
sS'NBServerProtocol'
p1057
S'@protocol NBServerProtocol <NSObject>\n- (void)deleteBackupID:(NSUUID *)arg1 completionHandler:(void (^)(NSError *))arg2;\n- (void)createBackupForPairingID:(NSUUID *)arg1 completionHandler:(void (^)(NBBackup *, NSError *))arg2;\n- (void)restoreFromPairingID:(NSUUID *)arg1 forPairingID:(NSUUID *)arg2 completionHandler:(void (^)(NSError *))arg3;\n- (void)restoreFromBackupID:(NSUUID *)arg1 forPairingID:(NSUUID *)arg2 completionHandler:(void (^)(NSError *))arg3;\n- (void)listBackupsWithCompletionHandler:(void (^)(NSArray *, NSError *))arg1;\n@end\n'
p1058
ssS'private/var/staged_system_apps/iBooks.app/XPCServices/XPCUbiquityDisableService.xpc/XPCUbiquityDisableService'
p1059
(dp1060
sS'System/Library/PrivateFrameworks/BarcodeSupport.framework/XPCServices/com.apple.BarcodeSupport.ParsingService.xpc/com.apple.BarcodeSupport.ParsingService'
p1061
(dp1062
sS'System/Library/PrivateFrameworks/AccountsDaemon.framework/XPCServices/com.apple.accounts.dom.xpc/com.apple.accounts.dom'
p1063
(dp1064
sS'System/Library/Frameworks/Social.framework/XPCServices/com.apple.tencentweibo.xpc/com.apple.tencentweibo'
p1065
(dp1066
sS'System/Library/AppRemovalServices/com.apple.news.appremoval.xpc/com.apple.news'
p1067
(dp1068
sS'System/Library/PrivateFrameworks/ContextKit.framework/XPCServices/ContextService.xpc/ContextService'
p1069
(dp1070
sS'private/var/staged_system_apps/Files.app/Files'
p1071
(dp1072
sS'System/Library/Frameworks/Contacts.framework/Support/contactsd'
p1073
(dp1074
S'CNXPCDataMapperService'
p1075
S'@protocol CNXPCDataMapperService <NSObject>\n- (void)reindexSearchableItemsWithIdentifiers:(NSArray *)arg1 withReply:(void (^)(void))arg2;\n- (void)writeFavoritesPropertyListData:(NSData *)arg1 toPath:(NSString *)arg2 withReply:(void (^)(_Bool, NSError *))arg3;\n- (void)favoritesEntryDictionariesAtPath:(NSString *)arg1 withReply:(void (^)(NSArray *, NSError *))arg2;\n- (void)clearChangeHistoryForClientIdentifier:(NSString *)arg1 toChangeAnchor:(CNChangeHistoryAnchor *)arg2 withReply:(void (^)(NSNumber *, NSError *))arg3;\n- (void)changeHistoryWithFetchRequest:(CNChangeHistoryFetchRequest *)arg1 withReply:(void (^)(CNChangeHistoryResult *, NSError *))arg2;\n- (void)unregisterChangeHistoryClientIdentifier:(NSString *)arg1 withReply:(void (^)(NSNumber *, NSError *))arg2;\n- (void)registerChangeHistoryClientIdentifier:(NSString *)arg1 withReply:(void (^)(NSNumber *, NSError *))arg2;\n- (void)userActivityForContact:(CNContact *)arg1 withReply:(void (^)(NSDictionary *))arg2;\n- (void)contactWithUserActivityUserInfo:(NSDictionary *)arg1 keysToFetch:(NSArray *)arg2 withReply:(void (^)(CNContact *))arg3;\n- (void)setBestMeIfNeededForGivenName:(NSString *)arg1 familyName:(NSString *)arg2 email:(NSString *)arg3 withReply:(void (^)(NSNumber *, NSError *))arg4;\n- (void)setMeContact:(CNContact *)arg1 forContainer:(CNContainer *)arg2 withReply:(void (^)(NSNumber *, NSError *))arg3;\n- (void)setMeContact:(CNContact *)arg1 withReply:(void (^)(NSNumber *, NSError *))arg2;\n- (void)defaultContainerIdentifierWithReply:(void (^)(NSString *, NSError *))arg1;\n- (void)subgroupsOfGroupWithIdentifier:(NSString *)arg1 withReply:(void (^)(NSArray *, NSError *))arg2;\n- (void)groupsMatchingPredicate:(NSPredicate *)arg1 withReply:(void (^)(NSArray *, NSError *))arg2;\n- (void)accountsMatchingPredicate:(NSPredicate *)arg1 withReply:(void (^)(NSArray *, NSError *))arg2;\n- (void)policyForContainerWithIdentifier:(NSString *)arg1 withReply:(void (^)(CNPolicy *, NSError *))arg2;\n- (void)serverSearchContainersMatchingPredicate:(NSPredicate *)arg1 withReply:(void (^)(NSArray *, NSError *))arg2;\n- (void)containersMatchingPredicate:(NSPredicate *)arg1 withReply:(void (^)(NSArray *, NSError *))arg2;\n- (void)executeSaveRequest:(CNSaveRequest *)arg1 withReply:(void (^)(_Bool, CNSaveResponse *, NSError *))arg2;\n- (void)meContactIdentifiersWithReply:(void (^)(NSArray *, NSError *))arg1;\n- (void)progressiveContactsForFetchRequest:(CNContactFetchRequest *)arg1 progressHandler:(id <ProgressiveResultsHandlerProtocol>)arg2 reply:(void (^)(id <CNCancelable>))arg3;\n- (void)nextEncodedContactsForCursor:(id <CNEncodedFetchCursor>)arg1 withReply:(void (^)(NSData *, _Bool, NSError *))arg2;\n- (void)encodedContactsAndCursorForFetchRequest:(CNContactFetchRequest *)arg1 withReply:(void (^)(NSData *, id <CNEncodedFetchCursor>, NSError *))arg2;\n- (void)contactsForFetchRequest:(CNContactFetchRequest *)arg1 withMatchInfoReply:(void (^)(NSArray *, NSDictionary *, NSError *))arg2;\n- (void)unifiedContactCountWithReply:(void (^)(NSNumber *, NSError *))arg1;\n- (void)identifierWithReply:(void (^)(NSString *, NSError *))arg1;\n- (void)configureServiceWithOptions:(NSDictionary *)arg1;\n@end\n'
p1076
ssS'System/Library/PrivateFrameworks/SoftwareUpdateServices.framework/Support/softwareupdateservicesd'
p1077
(dp1078
sS'System/Library/PrivateFrameworks/NanoPassKit.framework/NPKCompanionAgent'
p1079
(dp1080
S'NPDCompanionPassLibraryDataSource'
p1081
S'@protocol NPDCompanionPassLibraryDataSource <NSObject>\n- (PKPaymentWebService *)paymentWebService;\n- (NSArray *)secureElementIdentifiers;\n@end\n'
p1082
sS'NPKGizmoDatabaseMigrationDataSource'
p1083
S'@protocol NPKGizmoDatabaseMigrationDataSource <NSObject>\n- (NSArray *)secureElementIdentifiers;\n@end\n'
p1084
sS'NSXPCListenerDelegate'
p1085
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p1086
sS'NPKRemoteAdminConnectionServiceAgentDelegate'
p1087
S'@protocol NPKRemoteAdminConnectionServiceAgentDelegate <NSObject>\n- (void)didReceiveCheckCompanionPeerPaymentState;\n- (void)didReceivePaymentSetupRequestForApplicationName:(NSString *)arg1;\n- (void)paymentPassWithUniqueIdentifier:(NSString *)arg1 didRemoveTransactionWithIdentifier:(NSString *)arg2;\n- (void)paymentPassWithUniqueIdentifier:(NSString *)arg1 didReceiveTransaction:(PKPaymentTransaction *)arg2;\n@end\n'
p1088
sS'NPDPassLibraryDelegate'
p1089
S'@protocol NPDPassLibraryDelegate\n- (void)passLibraryRequestsMigrateData:(NPDPassLibrary *)arg1;\n- (void)passLibrary:(NPDPassLibrary *)arg1 requestsAdditionOfPasses:(NSSet *)arg2 completion:(void (^)(void))arg3;\n- (void)passLibrary:(NPDPassLibrary *)arg1 requestsDeletionOfPassWithUniqueID:(NSString *)arg2 completion:(void (^)(void))arg3;\n@end\n'
p1090
sS'IDSServiceDelegate'
p1091
S'@protocol IDSServiceDelegate <NSObject>\n\n@optional\n- (void)service:(IDSService *)arg1 didSwitchActivePairedDevice:(IDSDevice *)arg2 acknowledgementBlock:(void (^)(void))arg3;\n- (void)serviceAllowedTrafficClassifiersDidReset:(IDSService *)arg1;\n- (void)serviceSpaceDidBecomeAvailable:(IDSService *)arg1;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 inviteReceivedForSession:(IDSSession *)arg3 fromID:(NSString *)arg4 withContext:(NSData *)arg5;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 inviteReceivedForSession:(IDSSession *)arg3 fromID:(NSString *)arg4 withOptions:(NSDictionary *)arg5;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 inviteReceivedForSession:(IDSSession *)arg3 fromID:(NSString *)arg4;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 identifier:(NSString *)arg3 hasBeenDeliveredWithContext:(id)arg4;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 identifier:(NSString *)arg3 didSendWithSuccess:(_Bool)arg4 error:(NSError *)arg5 context:(IDSMessageContext *)arg6;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 identifier:(NSString *)arg3 didSendWithSuccess:(_Bool)arg4 error:(NSError *)arg5;\n- (void)service:(IDSService *)arg1 connectedDevicesChanged:(NSArray *)arg2;\n- (void)service:(IDSService *)arg1 nearbyDevicesChanged:(NSArray *)arg2;\n- (void)service:(IDSService *)arg1 devicesChanged:(NSArray *)arg2;\n- (void)service:(IDSService *)arg1 activeAccountsChanged:(NSSet *)arg2;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingResourceAtURL:(NSURL *)arg3 metadata:(NSDictionary *)arg4 fromID:(NSString *)arg5 context:(IDSMessageContext *)arg6;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingResourceAtURL:(NSURL *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingUnhandledProtobuf:(IDSProtobuf *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingData:(NSData *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;\n- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingMessage:(NSDictionary *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;\n@end\n'
p1092
sS'NPKCompanionServerProtocol'
p1093
S'@protocol NPKCompanionServerProtocol <NSObject>\n- (void)handlePotentialExpressPass:(PKPaymentPass *)arg1 withCompletionHandler:(void (^)(_Bool, NSSet *))arg2;\n- (void)felicaStateWithPassUniqueIdentifier:(NSString *)arg1 paymentApplication:(PKPaymentApplication *)arg2 completion:(void (^)(PKFelicaTransitAppletState *))arg3;\n- (void)deletePaymentTransactionWithIdentifier:(NSString *)arg1 passUniqueIdentifier:(NSString *)arg2 fromDeviceWithPairingID:(NSUUID *)arg3 completion:(void (^)(NSError *))arg4;\n- (void)transactionsForPaymentPassWithUniqueIdentifier:(NSString *)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 limit:(long long)arg4 completion:(void (^)(NSSet *))arg5;\n- (void)initiateLostModeExitAuthWithCompletion:(void (^)(NSError *))arg1;\n- (void)peerPaymentAccountForPairingID:(NSUUID *)arg1 withCompletion:(void (^)(PKPeerPaymentAccount *))arg2;\n- (void)setPeerPaymentAccount:(PKPeerPaymentAccount *)arg1 forPairingID:(NSUUID *)arg2 completion:(void (^)(void))arg3;\n- (void)sharedPeerPaymentWebServiceContextForPairingID:(NSUUID *)arg1 withCompletion:(void (^)(PKPeerPaymentWebServiceContext *))arg2;\n- (void)setSharedPeerPaymentWebServiceContext:(PKPeerPaymentWebServiceContext *)arg1 forPairingID:(NSUUID *)arg2 completion:(void (^)(void))arg3;\n- (void)sharedPaymentWebServiceContextForPairingID:(NSUUID *)arg1 withCompletion:(void (^)(PKPaymentWebServiceContext *))arg2;\n- (void)setSharedPaymentWebServiceContext:(PKPaymentWebServiceContext *)arg1 forPairingID:(NSUUID *)arg2 completion:(void (^)(void))arg3;\n- (void)handlePendingiCloudSignoutWithCompletion:(void (^)(void))arg1;\n- (void)handlePendingUnpairingWithCompletion:(void (^)(void))arg1;\n- (void)redownloadAllPaymentPassesWithCompletion:(void (^)(void))arg1;\n- (void)initiateConsistencyCheckWithCompletion:(void (^)(void))arg1;\n- (void)setDefaultPaymentApplication:(PKPaymentApplication *)arg1 forPassWithUniqueID:(NSString *)arg2 completion:(void (^)(PKPaymentPass *))arg3;\n- (void)defaultPaymentApplicationForPassWithUniqueID:(NSString *)arg1 completion:(void (^)(PKPaymentApplication *))arg2;\n- (void)defaultCard:(void (^)(NSString *))arg1;\n- (void)setDefaultCard:(NSString *)arg1 completion:(void (^)(_Bool))arg2;\n- (void)removePaymentPassWithUniqueID:(NSString *)arg1 forPairingID:(NSUUID *)arg2 requireRemoteConfirmation:(_Bool)arg3 completion:(void (^)(_Bool, NSError *))arg4;\n- (void)savePaymentPassAtURL:(NSURL *)arg1 withUniqueID:(NSString *)arg2 forPairingID:(NSUUID *)arg3 completion:(void (^)(_Bool))arg4;\n- (void)paymentPassWithDeviceAccountIdentifier:(NSString *)arg1 completion:(void (^)(PKPaymentPass *))arg2;\n- (void)paymentPassesWithPrimaryAccountIdentifier:(NSString *)arg1 completion:(void (^)(NSSet *))arg2;\n- (void)paymentPassWithUniqueID:(NSString *)arg1 reply:(void (^)(PKPaymentPass *))arg2;\n- (void)paymentPassUniqueIDs:(void (^)(NSSet *))arg1;\n- (void)noteProvisioningPreflightCompleteWithSuccess:(_Bool)arg1 error:(NSError *)arg2 completion:(void (^)(void))arg3;\n- (void)beginProvisioningFromWatchOfferForPaymentPass:(PKPaymentPass *)arg1 withCompletion:(void (^)(_Bool, NSError *))arg2;\n- (void)noteWatchOfferDisplayedForPaymentPassWithUniqueID:(NSString *)arg1;\n- (void)connect;\n@end\n'
p1094
sS'NPDCardSetupReminderNotificationSchedulerDelegate'
p1095
S'@protocol NPDCardSetupReminderNotificationSchedulerDelegate <NSObject>\n- (void)removeReminderNotificationForPassWithUniqueID:(NSString *)arg1;\n- (void)postVerifyReminderNotificationForPassWithUniqueID:(NSString *)arg1;\n- (void)postAddReminderNotificationForPassWithUniqueID:(NSString *)arg1;\n- (_Bool)hasAnyWatchPaymentPasses;\n- (_Bool)hasCompanionPaymentPassWithUniqueID:(NSString *)arg1;\n- (_Bool)hasWatchPaymentPassRequiringVerificationWithUniqueID:(NSString *)arg1;\n- (_Bool)hasWatchPaymentPassWithUniqueID:(NSString *)arg1;\n@end\n'
p1096
sS'PSYSyncCoordinatorDelegate'
p1097
S'@protocol PSYSyncCoordinatorDelegate <NSObject>\n\n@optional\n- (void)syncCoordinatorDidReceiveStartSyncCommand:(PSYSyncCoordinator *)arg1;\n- (void)supportsMigrationSync;\n- (void)syncCoordinatorDidChangeSyncRestriction:(PSYSyncCoordinator *)arg1;\n- (void)syncCoordinator:(PSYSyncCoordinator *)arg1 didInvalidateSyncSession:(PSYServiceSyncSession *)arg2;\n- (void)syncCoordinator:(PSYSyncCoordinator *)arg1 beginSyncSession:(PSYServiceSyncSession *)arg2;\n@end\n'
p1098
ssS'System/Library/PrivateFrameworks/CloudDocsDaemon.framework/XPCServices/ContainerMetadataExtractor.xpc/ContainerMetadataExtractor'
p1099
(dp1100
sS'System/Library/AppRemovalServices/com.apple.mobilemail.appremoval.xpc/com.apple.mobilemail.appremoval'
p1101
(dp1102
sS'private/var/staged_system_apps/Tips.app/Tips'
p1103
(dp1104
S'TPSXPCClientInterface'
p1105
S'@protocol TPSXPCClientInterface <NSObject>\n- (oneway void)latestFeedFetchedByDaemon:(NSDictionary *)arg1;\n@end\n'
p1106
sS'TPSCollectionsControllerDelegate'
p1107
S'@protocol TPSCollectionsControllerDelegate <NSObject>\n- (void)collectionsController:(TPSCollectionsController *)arg1 collectionsMap:(NSDictionary *)arg2;\n- (int)collectionsControllerCollectionCount:(TPSCollectionsController *)arg1 collection:(TPSCollection *)arg2;\n@end\n'
p1108
ssS'System/Library/AppRemovalServices/com.apple.reminders.appremoval.xpc/com.apple.reminders.appremoval'
p1109
(dp1110
sS'System/Library/TextInput/kbd'
p1111
(dp1112
S'NSXPCListenerDelegate'
p1113
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p1114
sS'TIKeyboardActivityObserving'
p1115
S'@protocol TIKeyboardActivityObserving <NSObject>\n- (void)keyboardActivityDidTransition:(TIKeyboardActivityContext *)arg1;\n\n@optional\n- (void)handleMemoryPressureLevel:(unsigned long long)arg1 excessMemoryInBytes:(unsigned long long)arg2;\n@end\n'
p1116
sS'TIImageCaching'
p1117
S'@protocol TIImageCaching\n- (void)cacheItem:(TIImageCacheItem *)arg1 key:(NSString *)arg2 group:(NSString *)arg3;\n@end\n'
p1118
ssS'System/Library/Frameworks/CallKit.framework/XPCServices/com.apple.CallKit.CallDirectoryMaintenance.xpc/com.apple.CallKit.CallDirectoryMaintenance'
p1119
(dp1120
sS'usr/libexec/videosubscriptionsd'
p1121
(dp1122
sS'System/Library/PrivateFrameworks/ManagedConfiguration.framework/Support/mdmd'
p1123
(dp1124
S'MCMDMXPCProtocol'
p1125
S'@protocol MCMDMXPCProtocol <NSObject, MCMDMClientProtocol>\n- (void)processDeviceRequest:(NSDictionary *)arg1 completion:(void (^)(NSError *, NSDictionary *))arg2;\n- (void)uprootMDMWithCompletion:(void (^)(NSError *))arg1;\n- (void)migrateMDMWithContext:(int)arg1 completion:(void (^)(NSError *))arg2;\n- (void)retryNotNowWithCompletion:(void (^)(NSError *))arg1;\n- (void)simulatePushIfNetworkTetheredWithCompletion:(void (^)(NSError *))arg1;\n- (void)simulatePushWithCompletion:(void (^)(NSError *))arg1;\n- (void)scheduleTokenUpdateIfNecessaryWithCompletion:(void (^)(NSError *))arg1;\n- (void)scheduleTokenUpdateWithCompletion:(void (^)(NSError *))arg1;\n- (void)notifyNewConfigurationWithCompletion:(void (^)(NSError *))arg1;\n@end\n'
p1126
ssS'usr/libexec/feedbackarchiverd'
p1127
(dp1128
S'NSXPCListenerDelegate'
p1129
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p1130
sS'ADSpringBoardDelegate'
p1131
S'@protocol ADSpringBoardDelegate <NSObject>\n- (void)failedToOpenClientWithError:(NSError *)arg1;\n- (void)didOpenClient;\n- (void)clientWasTerminatedAfterBackgroundLaunch;\n@end\n'
p1132
sS'AchiverdProtocol'
p1133
S'@protocol AchiverdProtocol <NSObject>\n- (void)clientDidFinishBackgroundUpdates;\n- (void)fetchJobStatesWithCompletion:(void (^)(NSArray *, NSArray *, NSString *))arg1;\n- (void)ping;\n- (void)archiveDirectory:(NSURL *)arg1;\n@end\n'
p1134
ssS'System/Library/PrivateFrameworks/FamilyNotification.framework/familynotificationd'
p1135
(dp1136
S'NSXPCListenerDelegate'
p1137
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p1138
sS'FAFamilyNotifierAgentProtocol'
p1139
S'@protocol FAFamilyNotifierAgentProtocol <NSObject>\n- (void)setDelegateMachServiceName:(NSString *)arg1;\n- (void)setClientIdentifier:(NSString *)arg1;\n- (void)pendingNotificationsWithIdentifier:(NSString *)arg1 replyBlock:(void (^)(NSArray *, NSError *))arg2;\n- (void)removeAllNotifications;\n- (void)removeNotificationWithIdentifier:(NSString *)arg1;\n- (void)deliverNotificaton:(FAFamilyNotification *)arg1;\n@end\n'
p1140
ssS'System/Library/PrivateFrameworks/VisualVoicemail.framework/vmd'
p1141
(dp1142
S'VMServerXPCProtocol'
p1143
S'@protocol VMServerXPCProtocol <NSObject>\n- (void)reportTranscriptionRatedAccurate:(_Bool)arg1 forIdentifier:(long long)arg2;\n- (void)reportTranscriptionProblemForIdentifier:(long long)arg1;\n- (void)changePassword:(NSString *)arg1 completionBlock:(void (^)(NSError *))arg2;\n- (void)removeAllVoicemails;\n- (void)retrieveDataForIdentifier:(long long)arg1;\n- (void)setReadForIdentifiers:(NSArray *)arg1;\n- (void)setReadForIdentifier:(long long)arg1;\n- (void)setDeletedForIdentifiers:(NSArray *)arg1;\n- (void)setDeletedForIdentifier:(long long)arg1;\n- (void)removeVoicemailFromTrashWithIdentifier:(long long)arg1;\n- (void)setTrashedForIdentifiers:(NSArray *)arg1;\n- (void)setVoicemailGreeting:(VMVoicemailGreeting *)arg1 completionBlock:(void (^)(NSError *))arg2;\n- (void)retrieveVoicemailGreeting:(void (^)(VMVoicemailGreeting *, NSError *))arg1;\n- (void)allVoicemails:(void (^)(NSOrderedSet *))arg1;\n- (void)synchronize;\n- (void)requestInitialState:(void (^)(VMVoicemailCapabilities *, NSOrderedSet *, _Bool, _Bool, _Bool))arg1;\n@end\n'
p1144
ssS'System/Library/Frameworks/UIKit.framework/PlugIns/com.apple.UIKit.screenpicker.appex/com.apple.UIKit.screenpicker'
p1145
(dp1146
sS'private/var/staged_system_apps/Tips.app/PlugIns/TipsNotificationExtension.appex/TipsNotificationExtension'
p1147
(dp1148
S'UNNotificationContentExtension'
p1149
S'@protocol UNNotificationContentExtension <NSObject>\n- (void)didReceiveNotification:(UNNotification *)arg1;\n\n@optional\n@property(readonly, copy, nonatomic) UIColor *mediaPlayPauseButtonTintColor;\n@property(readonly, nonatomic) struct CGRect mediaPlayPauseButtonFrame;\n@property(readonly, nonatomic) unsigned long long mediaPlayPauseButtonType;\n- (void)mediaPause;\n- (void)mediaPlay;\n- (void)didReceiveNotificationResponse:(UNNotificationResponse *)arg1 completionHandler:(void (^)(unsigned long long))arg2;\n@end\n'
p1150
sS'TPSSingleTipViewControllerDelegate'
p1151
S'@protocol TPSSingleTipViewControllerDelegate <NSObject>\n- (void)singleTipViewControllerContentSizeChanged:(TPSSingleTipViewController *)arg1;\n@end\n'
p1152
ssS'System/Library/PrivateFrameworks/ProtectedCloudStorage.framework/Helpers/ProtectedCloudKeySyncing'
p1153
(dp1154
sS'Applications/CoreAuthUI.app/CoreAuthUI'
p1155
(dp1156
sS'Applications/DDActionsService.app/DDActionsService'
p1157
(dp1158
sS'private/var/staged_system_apps/MobileMail.app/PlugIns/MailVIPWidget.appex/MailVIPWidget'
p1159
(dp1160
sS'Applications/Diagnostics.app/Diagnostics'
p1161
(dp1162
sS'private/var/staged_system_apps/Music.app/PlugIns/MusicConnectPostExtension.appex/MusicConnectPostExtension'
p1163
(dp1164
sS'System/Library/PrivateFrameworks/CryptoTokenKit.framework/ctkd'
p1165
(dp1166
S'NSXPCListenerDelegate'
p1167
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p1168
sS'TKProtocolSlotRegistry'
p1169
S'@protocol TKProtocolSlotRegistry\n- (void)addSlotWithEndpoint:(NSXPCListenerEndpoint *)arg1 name:(NSString *)arg2 type:(NSString *)arg3 forProcesses:(NSArray *)arg4 reply:(void (^)(void))arg5;\n@end\n'
p1170
sS'TKProtocolSlotClient'
p1171
S'@protocol TKProtocolSlotClient\n- (void)reportChangesForSlotType:(NSString *)arg1 reply:(void (^)(void))arg2;\n@end\n'
p1172
sS'TKProtocolSlotClientNotification'
p1173
S'@protocol TKProtocolSlotClientNotification\n- (void)setSlotWithName:(NSString *)arg1 endpoint:(NSXPCListenerEndpoint *)arg2 type:(NSString *)arg3 reply:(void (^)(void))arg4;\n@end\n'
p1174
sS'TKProtocolTokenWatcherClient'
p1175
S'@protocol TKProtocolTokenWatcherClient\n- (void)addWatcherWithEndpoint:(NSXPCListenerEndpoint *)arg1 reply:(void (^)(NSArray *))arg2;\n@end\n'
p1176
ssS'usr/libexec/nanoregistryd'
p1177
(dp1178
S'CBPairingAgentDelegate'
p1179
S'@protocol CBPairingAgentDelegate <NSObject>\n\n@optional\n- (void)pairingAgent:(CBPairingAgent *)arg1 peerDidRequestPairing:(CBPeer *)arg2 type:(long long)arg3 passkey:(NSNumber *)arg4;\n- (void)pairingAgent:(CBPairingAgent *)arg1 peerDidUnpair:(CBPeer *)arg2;\n- (void)pairingAgent:(CBPairingAgent *)arg1 peerDidFailToCompletePairing:(CBPeer *)arg2 error:(NSError *)arg3;\n- (void)pairingAgent:(CBPairingAgent *)arg1 peerDidCompletePairing:(CBPeer *)arg2;\n@end\n'
p1180
sS'NRRemoteObjectCloudDelegate'
p1181
S'@protocol NRRemoteObjectCloudDelegate <NSObject>\n- (void)remoteObject:(NRRemoteObjectCloud *)arg1 receivedMigratedAwayWithAdvertisedName:(NSString *)arg2;\n- (void)remoteObject:(NRRemoteObjectCloud *)arg1 receivedMigrationRequestWithShouldCancel:(_Bool)arg2 responseBlock:(void (^)(int))arg3;\n@end\n'
p1182
sS'NRRecoveryStep'
p1183
S'@protocol NRRecoveryStep <NSObject>\n- (double)start:(id <NRRecoveryManagerStepDelegate>)arg1;\n\n@optional\n@property(readonly, nonatomic) NSSet *dependencies;\n- (id)migrateWithDictionary:(NSDictionary *)arg1;\n- (void)invalidate;\n- (void)timeoutHandler;\n@end\n'
p1184
sS'NRRegistryProxyDelegate'
p1185
S'@protocol NRRegistryProxyDelegate <NSObject>\n@property(readonly, nonatomic) NRRecoveryManager *activeRecoveryManager;\n@property(readonly, nonatomic) NRStateMachine *activeMachine;\n@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *deviceQueue;\n@property(readonly, nonatomic) _Bool pairing;\n- (void)startRecovery;\n- (void)_unpairWithDeviceID:(id)arg1 shouldObliterate:(_Bool)arg2 shouldBrick:(_Bool)arg3 shouldPreserveESim:(_Bool)arg4 caller:(NSString *)arg5 operationHasBegun:(void (^)(NSError *))arg6;\n- (void)xpcSwitchActiveDeviceWithDeviceID:(NSUUID *)arg1 requestorPID:(int)arg2 withAssertionHandler:(void (^)(NSError *, NSString *))arg3;\n- (NRSecureDevicePropertyStore *)secureProperties;\n- (_Bool)isSecureDataAvailable;\n- (void)xpcGetDeviceCollectionWithNoEntitlementBlock:(void (^)(NRMutableDeviceCollection *, unsigned long long))arg1;\n- (void)xpcGetDiffSinceIndex:(unsigned long long)arg1 withNoEntitlementBlock:(void (^)(NRDeviceCollectionDiff *, _Bool, unsigned long long))arg2;\n- (void)handleDeadPairingClientWithName:(NSString *)arg1;\n- (void)abortPairing;\n@end\n'
p1186
sS'NRRemoteObjectClassADelegate'
p1187
S'@protocol NRRemoteObjectClassADelegate <NSObject>\n@end\n'
p1188
sS'CBScalablePipeManagerDelegate'
p1189
S'@protocol CBScalablePipeManagerDelegate <NSObject>\n- (void)scalablePipeManager:(CBScalablePipeManager *)arg1 pipeDidDisconnect:(CBScalablePipe *)arg2 error:(NSError *)arg3;\n- (void)scalablePipeManager:(CBScalablePipeManager *)arg1 pipeDidConnect:(CBScalablePipe *)arg2;\n- (void)scalablePipeManager:(CBScalablePipeManager *)arg1 didUnregisterEndpoint:(NSString *)arg2;\n- (void)scalablePipeManager:(CBScalablePipeManager *)arg1 didRegisterEndpoint:(NSString *)arg2 error:(NSError *)arg3;\n- (void)scalablePipeManagerDidUpdateState:(CBScalablePipeManager *)arg1;\n@end\n'
p1190
sS'EPNanoRegistryStatusCodeElectionDelegate'
p1191
S'@protocol EPNanoRegistryStatusCodeElectionDelegate\n- (void)statusCodeManager:(EPNanoRegistryStatusCodeElection *)arg1 electionOutcomeChanged:(unsigned long long)arg2;\n@end\n'
p1192
sS'NSXPCListenerDelegate'
p1193
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p1194
sS'NanoRegistryPrivateDaemonDelegate'
p1195
S'@protocol NanoRegistryPrivateDaemonDelegate\n- (void)xpcKeepPhoneUnlockedInternalTestSPI:(void (^)(void))arg1;\n- (void)xpcGetLastMigrationRequestPhoneNameWithCompletion:(void (^)(NSString *))arg1;\n- (void)xpcBeginMigrationWithDeviceID:(NSUUID *)arg1 passcode:(NSString *)arg2 withBlock:(void (^)(void))arg3;\n- (void)xpcSetMigrationConsented:(_Bool)arg1 forDeviceID:(NSUUID *)arg2 withBlock:(void (^)(void))arg3;\n- (void)xpcIsKeychainEnabledWithBlock:(void (^)(_Bool))arg1;\n- (void)xpcIsWatchSetupPushActiveWithBlock:(void (^)(_Bool))arg1;\n- (void)xpcStopWatchSetupPushWithBlock:(void (^)(void))arg1;\n- (void)xpcStartWatchSetupPushWithBlock:(void (^)(void))arg1;\n- (void)xpcApplyDiff:(NRDeviceCollectionDiff *)arg1 block:(void (^)(void))arg2;\n- (void)xpcPingActiveGizmoWithPriority:(long long)arg1 withMessageSize:(unsigned long long)arg2 withBlock:(void (^)(_Bool, double, double))arg3;\n- (void)xpcSubmitServerRequestReportWithRequestType:(NSString *)arg1 duration:(double)arg2 errorCode:(unsigned int)arg3 block:(void (^)(void))arg4;\n@end\n'
p1196
sS'NRStateMachineDelegate'
p1197
S'@protocol NRStateMachineDelegate <NSObject>\n- (void)unpairNRDeviceWithDeviceID:(NSUUID *)arg1;\n- (NSUUID *)pairedPairingIDForBluetoothID:(NSUUID *)arg1;\n- (void)setPairingID:(NSUUID *)arg1 forBluetoothID:(NSUUID *)arg2;\n- (NSUUID *)updateNRMutableDeviceFromEPDevice:(EPDevice *)arg1 withNRUUID:(NSUUID *)arg2;\n- (void)deleteUnexpectedIDSPairedDevices;\n- (_Bool)shouldCollectPairingPerfStackshots;\n- (void)connectIDSDuringPairing;\n- (NSUUID *)createDeviceFromCompanionOOBPairingRequest:(NSString *)arg1;\n- (void)processEvent:(NSString *)arg1;\n- (void)pushVersion4CompatibilityMessageIfNeeded;\n- (void)activateDevice:(NSUUID *)arg1;\n- (_Bool)isInternalInstall;\n- (_Bool)hasRecoverySteps;\n- (void)setRedisplayRunBridgeDialogTimer;\n- (void)clearRedisplayRunBridgeAlertTimer;\n- (_Bool)isDeviceUnlocked;\n- (void)clearPairingAgentDelegate;\n- (void)setPairingAgentDelegate;\n- (long long)minPairingCompatibilityVersion;\n- (long long)maxPairingCompatibilityVersion;\n- (void)updateLastUnpairReason:(unsigned long long)arg1;\n- (NSString *)_pathToNanoRegistryStateDirectory;\n- (void)startRecovery;\n- (NRRecoveryManager *)sharedRecoveryManager;\n- (void)sendXPCBTPairRequestMessage:(NSUUID *)arg1;\n- (void)requestGizmoTransitionToCompatibilityState:(unsigned short)arg1;\n- (void)displayRunBridgeDialog;\n- (void)displayUpdateCompanionDialog;\n- (void)deleteAccounts;\n- (CBPeer *)getPairedPeer:(NSUUID *)arg1;\n- (NSUUID *)getBluetoothIDForPairingID:(NSUUID *)arg1;\n- (CBPeer *)getPeerForPairingID:(NSUUID *)arg1;\n- (void)unpairBluetoothDevicesWithPeers:(NSArray *)arg1 andQueue:(NSObject<OS_dispatch_queue> *)arg2 andCompletion:(void (^)(_Bool))arg3;\n- (void)getBluetoothPairedPeersWithQueue:(NSObject<OS_dispatch_queue> *)arg1 andCompletion:(void (^)(_Bool, NSArray *))arg2;\n- (void)sendXPCOOBKeyChanged:(NSData *)arg1;\n- (NSData *)getOOBKey;\n- (void)beginDiscoveryWithDeviceToDiscover:(NSUUID *)arg1;\n- (NSString *)getAdvertisedNameFromDevice:(NSUUID *)arg1;\n- (void)logStateMachineTimeout:(NSString *)arg1 withReason:(NSString *)arg2;\n- (void)restartStateMachineTimeout:(NSString *)arg1;\n- (void)clearStateMachineTimeout:(NSString *)arg1;\n- (void)createStateMachineTimeout:(NSString *)arg1 withDuration:(double)arg2;\n- (void)resumeStateMachineTimeout:(NSString *)arg1;\n- (void)suspendStateMachineTimeout:(NSString *)arg1;\n- (void)clearStateMachineTimeouts;\n- (void)IDSLocalPairingSetupCompletedWithBlock:(void (^)(_Bool))arg1;\n- (void)IDSLocalPairingConnectDeviceWithBlock:(void (^)(_Bool))arg1;\n- (void)IDSAddPairedDevice:(NSUUID *)arg1 withBlock:(void (^)(_Bool))arg2;\n- (void)setOOBPairingEnabled:(_Bool)arg1;\n- (_Bool)isBluetoothPaired:(NSUUID *)arg1;\n- (void)notifyStateChanged;\n- (_Bool)isIDSPaired:(NSUUID *)arg1;\n- (void)setIsPaired:(_Bool)arg1 withPairingID:(NSUUID *)arg2;\n- (void)deleteLocalPairingStore:(NSUUID *)arg1;\n- (_Bool)createLocalPairingStore:(NSUUID *)arg1 andNotifyPairingBeginning:(_Bool)arg2;\n- (void)enableDaemons;\n- (void)refreshPropertyCache;\n- (void)sendXPCDeviceNeedsPasscodeMessage:(NSUUID *)arg1 passcode:(NSNumber *)arg2;\n- (void)failBluetoothPairingRequest:(NSUUID *)arg1;\n- (void)respondToBluetoothPasscodePairingRequest:(NSUUID *)arg1 key:(NSNumber *)arg2;\n- (void)respondToBluetoothOOBPairingRequest:(NSUUID *)arg1 key:(NSData *)arg2;\n- (void)cancelCompanionBluetoothPairingRequest:(NSUUID *)arg1;\n- (void)sendCompanionBluetoothPairingRequest:(NSUUID *)arg1;\n- (void)forceEndDiscovery;\n- (void)forceEndAdvertising;\n@end\n'
p1198
sS'NSSecureCoding'
p1199
S'@protocol NSSecureCoding <NSCoding>\n+ (_Bool)supportsSecureCoding;\n@end\n'
p1200
sS'NRRemoteObjectDelegate'
p1201
S'@protocol NRRemoteObjectDelegate <NRRemoteObjectConnectivityObserver, NRRemoteObjectTrafficClassDelegate>\n@end\n'
p1202
sS'EPUpdateLastUnpairReason'
p1203
S'@protocol EPUpdateLastUnpairReason <NSObject>\n- (void)updateLastUnpairReason:(unsigned long long)arg1;\n@end\n'
p1204
sS'NRKeychainSyncStatusManagerObserver'
p1205
S'@protocol NRKeychainSyncStatusManagerObserver\n- (void)keychainSyncStatusDidChange:(_Bool)arg1;\n@end\n'
p1206
sS'NRPairedSyncAdvisorObserver'
p1207
S'@protocol NRPairedSyncAdvisorObserver <NSObject>\n\n@optional\n- (void)pairedSyncAdvisorSyncCompleted:(NRPairedSyncAdvisor *)arg1;\n- (void)pairedSyncAdvisorNeedsSync:(NRPairedSyncAdvisor *)arg1 isInitialSync:(_Bool)arg2;\n@end\n'
p1208
sS'NRRemoteObjectClassDDelegate'
p1209
S'@protocol NRRemoteObjectClassDDelegate <NSObject>\n- (long long)minPairingCompatibilityVersion;\n- (long long)maxPairingCompatibilityVersion;\n- (void)remoteObject:(NRRemoteObjectClassD *)arg1 receivedUnpairRequestWithAdvertisedName:(NSString *)arg2 shouldObliterate:(_Bool)arg3 shouldBrick:(_Bool)arg4 shouldPreserveESim:(_Bool)arg5 withPairingFailureCode:(NSNumber *)arg6 withAbortReason:(NSString *)arg7 withRequestIdentifier:(id)arg8 fromIDSBTUUID:(NSUUID *)arg9;\n\n@optional\n- (void)remoteObjectReceivedWatchMigrationCompletion:(unsigned long long)arg1;\n- (void)receivedPingRequestOfType:(int)arg1;\n@end\n'
p1210
sS'NRPrivateProxyDelegate'
p1211
S'@protocol NRPrivateProxyDelegate <NSObject>\n@end\n'
p1212
sS'EPSetServiceDisconnection'
p1213
S'@protocol EPSetServiceDisconnection <NSObject>\n- (void)setServiceDisconnectionWithBool:(_Bool)arg1;\n@end\n'
p1214
sS'NRPairedDeviceRegistryXPCDaemonDelegate'
p1215
S'@protocol NRPairedDeviceRegistryXPCDaemonDelegate\n- (void)xpcPutMigrationChallengeCharacteristicWriteData:(NSData *)arg1 completion:(void (^)(_Bool))arg2;\n- (void)xpcGetMigrationPairingCharacteristicReadDataWithCompletion:(void (^)(NSData *))arg1;\n- (void)xpcClientInfo:(void (^)(NSArray *))arg1;\n- (void)xpcDeviceIDAtSwitchIndex:(unsigned int)arg1 withBlock:(void (^)(NSUUID *, NSDate *))arg2;\n- (void)xpcSwitchIndex:(void (^)(unsigned int))arg1;\n- (void)xpcGetChangeHistoryWithBlock:(void (^)(NRDeviceCollectionHistory *))arg1;\n- (void)xpcRetrieveSecureProperties:(NSSet *)arg1 block:(void (^)(NSDictionary *))arg2;\n- (void)xpcBeginMigrationWithDeviceID:(NSUUID *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)xpcActiveDeviceAssertions:(void (^)(NSUUID *, NSArray *))arg1;\n- (void)xpcInvalidateSwitchAssertionWithIdentifier:(NSString *)arg1;\n- (void)xpcSwitchActiveDeviceWithDeviceID:(NSUUID *)arg1 withAssertionHandler:(void (^)(NSError *, NSString *))arg2;\n- (void)xpcSwitchActiveDeviceWithDeviceID:(NSUUID *)arg1 isMagicSwitch:(_Bool)arg2 operationHasCompleted:(void (^)(NSError *))arg3;\n- (void)xpcPairingClientDidEnterPhase:(NSString *)arg1 withBlock:(void (^)(void))arg2;\n- (void)xpcSubmitAlbertPairingReport:(void (^)(void))arg1;\n- (void)xpcTriggerVersion4Workaround;\n- (void)xpcRetriggerUnpairInfoDialogWithBlock:(void (^)(void))arg1;\n- (void)xpcQSRecoveryMigration:(NSUUID *)arg1 block:(void (^)(void))arg2;\n- (void)xpcAddRemoveRecoveryStepIDSFinalizeQS:(_Bool)arg1 withPairedBTDeviceID:(NSUUID *)arg2 block:(void (^)(void))arg3;\n- (void)xpcAddRemoveRecoveryStepIDSFinalize:(_Bool)arg1 block:(void (^)(void))arg2;\n- (void)xpcAddRemoveRecoveryStepObliterate:(_Bool)arg1 withStatePath:(NSString *)arg2 block:(void (^)(void))arg3;\n- (void)xpcAddRemoveRecoveryStepResetNVRAM:(_Bool)arg1 block:(void (^)(void))arg2;\n- (void)xpcAddRemoveRecoveryStepICloudDeletePaymentCards:(_Bool)arg1 block:(void (^)(void))arg2;\n- (void)xpcAddRemoveRecoveryStepStockholmReset:(_Bool)arg1 block:(void (^)(void))arg2;\n- (void)xpcAddRemoveRecoveryStepIDSUnpair:(_Bool)arg1 withPairingDeviceID:(NSUUID *)arg2 block:(void (^)(void))arg3;\n- (void)xpcAddRemoveRecoveryStepUnpairBluetooth:(_Bool)arg1 withPairingDeviceID:(NSUUID *)arg2 block:(void (^)(void))arg3;\n- (void)xpcAddRemoveRecoveryStepDeletePairingStore:(_Bool)arg1 withPairingDeviceID:(NSUUID *)arg2 block:(void (^)(void))arg3;\n- (void)xpcAddRemoveRecoveryStepRemoteUnpair:(_Bool)arg1 withAdvertisedName:(NSString *)arg2 andPairedDeviceID:(NSUUID *)arg3 block:(void (^)(void))arg4;\n- (void)xpcAddRemoveRecoveryStepIDSUnpairStartQS:(_Bool)arg1 withPairedBTDeviceID:(NSUUID *)arg2 block:(void (^)(void))arg3;\n- (void)xpcAddRemoveRecoveryStepIDSUnpairStart:(_Bool)arg1 block:(void (^)(void))arg2;\n- (void)xpcAddRemoveRecoveryStepDeleteAccounts:(_Bool)arg1 block:(void (^)(void))arg2;\n- (void)xpcAddRemoveRecoveryStepBackup:(_Bool)arg1 withPairingDeviceID:(NSUUID *)arg2 block:(void (^)(void))arg3;\n- (void)xpcAddRemoveRecoveryStepDisableDaemons:(_Bool)arg1 block:(void (^)(void))arg2;\n- (void)xpcSetObliterationEnabled:(_Bool)arg1 block:(void (^)(void))arg2;\n- (void)xpcTriggerRecovery:(void (^)(void))arg1;\n- (void)xpcRecoveryDescription:(void (^)(NSString *))arg1;\n- (void)xpcResumePairingClientCrashMonitoring:(void (^)(void))arg1;\n- (void)xpcSuspendPairingClientCrashMonitoring:(void (^)(void))arg1;\n- (void)xpcPairingShouldContinue;\n- (void)xpcUnpairWithDeviceID:(NSUUID *)arg1 withOptions:(NSDictionary *)arg2 operationHasBegun:(void (^)(NSError *))arg3;\n- (void)xpcNotifyPasscode:(NSNumber *)arg1 withDeviceID:(NSUUID *)arg2;\n- (void)xpcNotifyActivationCompleted:(NSUUID *)arg1 withSuccess:(_Bool)arg2;\n- (void)xpcEnterCompatibilityState:(unsigned short)arg1 withDeviceID:(NSUUID *)arg2;\n- (void)xpcAbortPairingReason:(NSString *)arg1 withBlock:(void (^)(void))arg2;\n- (void)xpcGizmoPasscodeAdvertiseAndPairWithName:(NSString *)arg1 operationHasBegun:(void (^)(NSError *))arg2;\n- (void)xpcGizmoOOBAdvertiseAndPairWithName:(NSString *)arg1 operationHasBegun:(void (^)(NSError *))arg2;\n- (void)xpcCompanionPasscodePairWithDeviceID:(NSUUID *)arg1 withOptions:(NSDictionary *)arg2 operationHasBegun:(void (^)(NSError *))arg3;\n- (void)xpcCompanionOOBDiscoverAndPairWithName:(NSString *)arg1 withOutOfBandPairingKey:(NSData *)arg2 withOptions:(NSDictionary *)arg3 operationHasBegun:(void (^)(NSError *))arg4;\n- (void)xpcOverrideSignalStrengthLimit:(long long)arg1 block:(void (^)(void))arg2;\n- (void)xpcEndDiscoveryWithBlock:(void (^)(void))arg1;\n- (void)xpcBeginDiscoveryWithBlock:(void (^)(void))arg1;\n- (void)xpcGetDiffSinceIndex:(unsigned long long)arg1 withBlock:(void (^)(NRDeviceCollectionDiff *, _Bool, unsigned long long, _Bool, _Bool))arg2;\n- (void)xpcGetDeviceCollectionWithBlock:(void (^)(NRMutableDeviceCollection *, unsigned long long, _Bool, NRSecureDevicePropertyStore *))arg1;\n@end\n'
p1216
sS'EPResourceOwnerDelegate'
p1217
S'@protocol EPResourceOwnerDelegate <NSObject>\n\n@optional\n- (void)resourceAvailabilityDidChange:(id <EPResourceProtocol>)arg1;\n@end\n'
p1218
sS'NRActiveDeviceAssertionManagerObserver'
p1219
S'@protocol NRActiveDeviceAssertionManagerObserver <NSObject>\n- (void)activeDeviceAssertionManagerChangedState;\n@end\n'
p1220
sS'NRRemoteObjectClassCDelegate'
p1221
S'@protocol NRRemoteObjectClassCDelegate <NSObject>\n- (void)remoteObject:(NRRemoteObjectClassC *)arg1 receivedPropertyRequestWithRequestIdentifier:(id)arg2 fromIDSBTUUID:(NSUUID *)arg3;\n- (void)remoteObject:(NRRemoteObjectClassC *)arg1 receivedPropertyChanges:(NSDictionary *)arg2 isAllProperties:(_Bool)arg3 fromIDSBTUUID:(NSUUID *)arg4;\n@end\n'
p1222
sS'NRSwitchProgressTrackerObserver'
p1223
S'@protocol NRSwitchProgressTrackerObserver <NSObject>\n\n@optional\n- (void)switchProgressTracker:(NRSwitchProgressTracker *)arg1 didAbortSwitch:(NSUUID *)arg2;\n- (void)switchProgressTracker:(NRSwitchProgressTracker *)arg1 didFinishSwitch:(NSUUID *)arg2;\n- (void)switchProgressTracker:(NRSwitchProgressTracker *)arg1 didChangeProgressTo:(unsigned long long)arg2 forSwitchID:(NSUUID *)arg3;\n- (void)switchProgressTracker:(NRSwitchProgressTracker *)arg1 didStartSwitch:(NSUUID *)arg2;\n@end\n'
p1224
sS'NRXPCProxyDelegate'
p1225
S'@protocol NRXPCProxyDelegate <NSObject>\n- (void)xpcProxyLostConnection:(NRXPCProxy *)arg1;\n@end\n'
p1226
sS'NRRecoveryManagerDelegate'
p1227
S'@protocol NRRecoveryManagerDelegate <NSObject>\n\n@optional\n- (void)recoveryManager:(NRRecoveryManager *)arg1 activeStateDidChange:(_Bool)arg2;\n- (void)recoveryManagerDidEndRecovery:(NRRecoveryManager *)arg1;\n- (void)recoveryManagerDidBeginRecovery:(NRRecoveryManager *)arg1;\n@end\n'
p1228
sS'NRCreateUnpairTriggerFile'
p1229
S'@protocol NRCreateUnpairTriggerFile <NSObject>\n- (_Bool)unpairTriggerFileDoesNotExist;\n- (void)createUnpairTriggerFile:(_Bool)arg1;\n@end\n'
p1230
sS'CBCentralManagerDelegate'
p1231
S'@protocol CBCentralManagerDelegate <NSObject>\n- (void)centralManagerDidUpdateState:(CBCentralManager *)arg1;\n\n@optional\n- (void)centralManager:(CBCentralManager *)arg1 didDisconnectPeripheral:(CBPeripheral *)arg2 error:(NSError *)arg3;\n- (void)centralManager:(CBCentralManager *)arg1 didFailToConnectPeripheral:(CBPeripheral *)arg2 error:(NSError *)arg3;\n- (void)centralManager:(CBCentralManager *)arg1 didConnectPeripheral:(CBPeripheral *)arg2;\n- (void)centralManager:(CBCentralManager *)arg1 didDiscoverPeripheral:(CBPeripheral *)arg2 advertisementData:(NSDictionary *)arg3 RSSI:(NSNumber *)arg4;\n- (void)centralManager:(CBCentralManager *)arg1 willRestoreState:(NSDictionary *)arg2;\n@end\n'
p1232
sS'NRLocalPropertyMonitorObserver'
p1233
S'@protocol NRLocalPropertyMonitorObserver\n- (void)localMonitor:(NRLocalPropertyMonitor *)arg1 propertiesDidChange:(NSDictionary *)arg2 thisIsAllOfThem:(_Bool)arg3;\n@end\n'
p1234
ssS'System/Library/Frameworks/CoreTelephony.framework/Support/CommCenter'
p1235
(dp1236
S'NSXPCListenerDelegate'
p1237
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p1238
sS'CTCarrierSpaceServiceInterface'
p1239
S'@protocol CTCarrierSpaceServiceInterface <NSObject>\n- (void)refreshAppsInfo:(void (^)(NSError *))arg1;\n- (void)refreshPlansInfo:(void (^)(NSError *))arg1;\n- (void)refreshUsageInfo:(void (^)(NSError *))arg1;\n- (void)userDidAcceptPlanTerms:(_Bool)arg1 completion:(void (^)(NSError *))arg2;\n- (void)authenticationDidFail:(NSError *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)authenticationDidComplete:(CTCarrierSpaceAuthInfo *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)setUserInAuthFlow:(_Bool)arg1 completion:(void (^)(NSError *))arg2;\n- (void)testMode:(_Bool)arg1 config:(NSDictionary *)arg2 completion:(void (^)(NSError *))arg3;\n- (void)ping:(void (^)(NSError *))arg1;\n- (void)fetchDataPlanMetrics:(void (^)(CTCarrierSpaceDataPlanMetrics *, NSError *))arg1;\n- (void)purchasePlan:(CTCarrierSpacePlanGroupOptionInfo *)arg1 completion:(void (^)(NSError *))arg2;\n- (void)refreshAllInfo:(void (^)(NSError *))arg1;\n- (void)fetchAppsInfo:(_Bool)arg1 completion:(void (^)(CTCarrierSpaceAppsInfo *, NSError *))arg2;\n- (void)fetchPlansInfo:(_Bool)arg1 completion:(void (^)(CTCarrierSpacePlansInfo *, NSError *))arg2;\n- (void)fetchUsageInfo:(_Bool)arg1 completion:(void (^)(CTCarrierSpaceUsageInfo *, NSError *))arg2;\n- (void)setUserConsent:(_Bool)arg1 completion:(void (^)(NSError *))arg2;\n- (void)getUserConsentFlowInfo:(void (^)(CTCarrierSpaceUserConsentFlowInfo *, NSError *))arg1;\n- (void)getCapabilities:(void (^)(CTCarrierSpaceCapabilities *, NSError *))arg1;\n@end\n'
p1240
sS'NSXPCConnectionDelegate'
p1241
S'@protocol NSXPCConnectionDelegate <NSObject>\n\n@optional\n- (void)connection:(NSXPCConnection *)arg1 handleInvocation:(NSInvocation *)arg2 isReply:(_Bool)arg3;\n- (id <NSSecureCoding>)replacementObjectForXPCConnection:(NSXPCConnection *)arg1 encoder:(NSXPCCoder *)arg2 object:(id)arg3;\n@end\n'
p1242
sS'CTCellularPlanClient'
p1243
S'@protocol CTCellularPlanClient <NSObject>\n- (void)setActivePlan:(NSData *)arg1 completion:(void (^)(_Bool, NSError *))arg2;\n- (void)shouldShowAddNewRemotePlan:(void (^)(_Bool))arg1;\n- (void)getRemoteInfo:(void (^)(NSDictionary *, NSError *))arg1;\n- (void)setAutoPlanSelection:(_Bool)arg1;\n- (void)getAutoPlanSelectionWithCompletion:(void (^)(_Bool))arg1;\n- (void)deleteAllRemoteProfiles;\n- (void)deleteRemoteProfile:(NSString *)arg1;\n- (void)selectRemoteProfile:(NSString *)arg1;\n- (void)fetchRemoteProfiles:(NSString *)arg1;\n- (void)userDidProvideConsentResponse:(_Bool)arg1 iccid:(NSString *)arg2 completion:(void (^)(_Bool, NSError *))arg3;\n- (void)eraseAllRemotePlansWithCompletion:(void (^)(_Bool, NSError *))arg1;\n- (void)remotePlansSignupParamsForCsn:(NSData *)arg1 completion:(void (^)(NSDictionary *))arg2;\n- (void)remotePlanLaunchInfoForCsn:(NSData *)arg1 completion:(void (^)(NSString *, NSDictionary *, NSError *))arg2;\n- (void)didCancelRemotePlan;\n- (void)didPurchaseRemotePlanForEid:(NSString *)arg1 imei:(NSString *)arg2 meid:(NSString *)arg3 iccid:(NSString *)arg4 alternateSmdpFqdn:(NSString *)arg5 completion:(void (^)(_Bool))arg6;\n- (void)didDeleteRemotePlanItem:(CTCellularPlanItem *)arg1 completion:(void (^)(_Bool, NSError *))arg2;\n- (void)didSelectRemotePlanItem:(CTCellularPlanItem *)arg1 completion:(void (^)(_Bool, NSError *))arg2;\n- (void)remotePlanItemsWithUpdateFetch:(_Bool)arg1 completion:(void (^)(NSArray *, NSError *))arg2;\n- (void)manageAccountForRemotePlan:(CTCellularPlanItem *)arg1 completion:(void (^)(_Bool, NSError *))arg2;\n- (void)addNewRemotePlanWithAddress:(NSString *)arg1 matchingId:(NSString *)arg2 oid:(NSString *)arg3 confirmationCode:(NSString *)arg4 isPairing:(_Bool)arg5 userConsent:(long long)arg6 completion:(void (^)(NSError *))arg7;\n- (void)addNewRemotePlanWithCardData:(NSString *)arg1 confirmationCode:(NSString *)arg2 isPairing:(_Bool)arg3 userConsent:(long long)arg4 completion:(void (^)(NSError *))arg5;\n- (void)addNewRemotePlan:(_Bool)arg1 userConsent:(long long)arg2 completion:(void (^)(NSError *))arg3;\n- (void)finishRemoteProvisioningWithCompletion:(void (^)(_Bool))arg1;\n- (void)startRemoteProvisioningWithCompletion:(void (^)(_Bool))arg1;\n- (void)shouldShowAddNewRemotePlanWithFlowType:(void (^)(_Bool, unsigned long long, NSError *))arg1;\n- (void)isRemotePlanCapable:(void (^)(_Bool))arg1;\n- (void)launchDataActivationNextWithUrl:(NSString *)arg1;\n- (void)updatePlansDatabase;\n- (void)expirePlan;\n- (void)launchSequoia;\n- (void)setLatitude:(NSNumber *)arg1 andLongitude:(NSNumber *)arg2;\n- (void)latitudeLongitudeOverride:(void (^)(double, double))arg1;\n- (void)setMcc:(long long)arg1 andMnc:(long long)arg2;\n- (void)mccMncOverride:(void (^)(long long, long long))arg1;\n- (void)setSelectedProxy:(long long)arg1;\n- (void)getSelectedProxy:(void (^)(long long))arg1;\n- (void)setSelectedEnv:(long long)arg1;\n- (void)getSelectedEnv:(void (^)(long long))arg1;\n- (void)setESimServerURL:(NSString *)arg1;\n- (void)getESimServerURL:(void (^)(NSString *))arg1;\n- (void)setIMEIPrefix:(NSString *)arg1;\n- (void)getIMEIPrefix:(void (^)(NSString *))arg1;\n- (void)getCurrentPlanType:(void (^)(long long))arg1;\n- (void)openInternalUrlId:(long long)arg1;\n- (void)getDeviceInfo:(void (^)(NSDictionary *))arg1;\n- (void)retrieveRequestSettings:(void (^)(NSDictionary *, NSDictionary *, NSDictionary *))arg1;\n- (void)fetchNewProfilesWithCompletion:(void (^)(_Bool, NSError *))arg1 additionalParameters:(NSDictionary *)arg2;\n- (void)registerHasNewProfileCompletion:(void (^)(_Bool, _Bool))arg1;\n- (void)setUserInPurchaseFlow:(_Bool)arg1;\n- (void)didProvisionEsimWithIccid:(NSString *)arg1;\n- (void)didPurchasePlanWithIccid:(NSString *)arg1 downloadProfile:(_Bool)arg2;\n- (void)remoteSignIdMapForSessionId:(NSString *)arg1 locationRequired:(_Bool)arg2 withCompletion:(void (^)(NSString *, NSError *))arg3;\n- (void)signIdMapForSessionId:(NSString *)arg1 locationRequired:(_Bool)arg2 withCompletion:(void (^)(NSString *, NSError *))arg3 latitude:(NSNumber *)arg4 longitude:(NSNumber *)arg5;\n- (void)manageAccountForPlan:(CTCellularPlanItem *)arg1 completion:(void (^)(_Bool, NSError *))arg2;\n- (void)didSelectPlanItem:(CTCellularPlanItem *)arg1 completion:(void (^)(_Bool, NSError *))arg2;\n- (void)willDisplayPlanItems;\n- (void)planItemsWithCompletion:(void (^)(NSArray *, NSError *))arg1;\n- (void)shouldShowPlanList:(void (^)(_Bool))arg1;\n- (void)isAddButtonEnabled:(void (^)(_Bool))arg1;\n- (void)triggerAddNewDataPlan:(void (^)(NSError *))arg1;\n- (void)isRoamingPlanSupportAvailable:(void (^)(_Bool))arg1;\n- (void)isMultipleDataPlanSupportAvailable:(void (^)(_Bool))arg1;\n- (void)isNewDataPlanCapable:(void (^)(_Bool))arg1;\n- (void)ping;\n@end\n'
p1244
sS'CTCarrierSpaceClientProxyDelegate'
p1245
S'@protocol CTCarrierSpaceClientProxyDelegate <NSObject>\n- (void)proxyDidBecomeInvalidated:(CTCarrierSpaceClientProxy *)arg1;\n@end\n'
p1246
ssS'System/Library/Frameworks/SafariServices.framework/XPCServices/com.apple.SafariServices.ContentBlockerLoader.xpc/com.apple.SafariServices.ContentBlockerLoader'
p1247
(dp1248
sS'System/Library/PrivateFrameworks/CoreAccessories.framework/Support/accessoryd'
p1249
(dp1250
S'ACCBLEPairingXPCServerProtocol'
p1251
S'@protocol ACCBLEPairingXPCServerProtocol <NSObject>\n- (void)stopBLEUpdates:(NSString *)arg1 blePairingUUID:(NSData *)arg2;\n- (void)deviceUpdatePairingInfo:(NSString *)arg1 blePairingUUID:(NSData *)arg2 pairType:(unsigned char)arg3 pairInfo:(NSData *)arg4;\n- (void)devicePairingData:(NSString *)arg1 blePairingUUID:(NSData *)arg2 pairType:(unsigned char)arg3 pairData:(NSData *)arg4;\n- (void)deviceStateUpdate:(NSString *)arg1 blePairingUUID:(NSData *)arg2 bRadioOn:(_Bool)arg3 pairState:(int)arg4 bPairModeOn:(_Bool)arg5;\n- (void)startBLEUpdates:(NSString *)arg1 blePairingUUID:(NSData *)arg2 pairType:(unsigned char)arg3 bRadioUpdatesOn:(_Bool)arg4 bPairInfoUpdatesOn:(_Bool)arg5;\n- (void)initConnection:(void (^)(_Bool))arg1;\n@end\n'
p1252
sS'ACCAssistiveTouchXPCServerProtocol'
p1253
S'@protocol ACCAssistiveTouchXPCServerProtocol <NSObject>\n- (void)notifyEnabledState:(_Bool)arg1 provider:(NSString *)arg2;\n- (void)initConnection:(void (^)(_Bool))arg1;\n@end\n'
p1254
sS'AccessoryHIDXPCServerProtocol'
p1255
S'@protocol AccessoryHIDXPCServerProtocol <NSObject>\n- (void)componentUpdate:(NSString *)arg1 componentID:(NSNumber *)arg2 enabled:(_Bool)arg3 withReply:(void (^)(_Bool))arg4;\n- (void)getReport:(NSString *)arg1 componentID:(NSNumber *)arg2 reportType:(NSNumber *)arg3 reportID:(NSNumber *)arg4 withReply:(void (^)(_Bool))arg5;\n- (void)outReport:(NSString *)arg1 componentID:(NSNumber *)arg2 report:(NSData *)arg3 withReply:(void (^)(_Bool))arg4;\n- (void)initConnection:(void (^)(_Bool))arg1;\n@end\n'
p1256
sS'ACCMediaLibraryXPCServerProtocol'
p1257
S'@protocol ACCMediaLibraryXPCServerProtocol <NSObject>\n- (void)resetUpdate:(NSString *)arg1 accessory:(NSString *)arg2;\n- (void)update:(NSString *)arg1 revision:(NSString *)arg2 content:(NSDictionary *)arg3 accessory:(NSString *)arg4;\n- (void)update:(NSString *)arg1 updates:(NSArray *)arg2 accessory:(NSString *)arg3;\n- (void)notify:(NSString *)arg1 stateChange:(int)arg2 enabled:(_Bool)arg3;\n- (void)notifyAvailableLibraries:(NSArray *)arg1 provider:(NSString *)arg2;\n- (void)initConnection:(void (^)(_Bool))arg1;\n@end\n'
p1258
sS'NSXPCListenerDelegate'
p1259
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p1260
sS'AccessoryNowPlayingXPCServerProtocol'
p1261
S'@protocol AccessoryNowPlayingXPCServerProtocol <NSObject>\n- (void)playbackQueueListInfoResponse:(NSString *)arg1 requestID:(NSString *)arg2 info:(NSDictionary *)arg3;\n- (void)playbackQueueListChanged;\n- (void)playbackAttributesHaveChanged:(NSDictionary *)arg1 withReply:(void (^)(_Bool))arg2;\n- (void)mediaItemArtworkHasChanged:(NSData *)arg1 withReply:(void (^)(_Bool))arg2;\n- (void)mediaItemAttributesHaveChanged:(NSDictionary *)arg1 withReply:(void (^)(_Bool))arg2;\n- (void)initConnection:(void (^)(_Bool))arg1;\n@end\n'
p1262
sS'AccessoryCameraXPCServerProtocol'
p1263
S'@protocol AccessoryCameraXPCServerProtocol <NSObject>\n- (void)captureStillImage:(NSString *)arg1 forCameraIds:(NSArray *)arg2 withReply:(void (^)(int))arg3;\n- (void)stopLivePreview:(NSString *)arg1 forCameraIds:(NSArray *)arg2 withReply:(void (^)(int))arg3;\n- (void)startLivePreview:(NSString *)arg1 forCameraIds:(NSArray *)arg2 withIndex:(unsigned short)arg3 withReply:(void (^)(int))arg4;\n- (void)setCameraProperties:(NSString *)arg1 forCameraId:(unsigned short)arg2 withProperties:(NSDictionary *)arg3 withReply:(void (^)(int))arg4;\n- (void)stopCameraUpdates:(NSString *)arg1 forCameraIds:(NSArray *)arg2 withReply:(void (^)(int))arg3;\n- (void)startCameraUpdates:(NSString *)arg1 forCameraIds:(NSArray *)arg2 withProperties:(NSDictionary *)arg3 withCapabilities:(NSDictionary *)arg4 withReply:(void (^)(int))arg5;\n- (void)stopCameraInfo:(NSString *)arg1 forCameraIds:(NSArray *)arg2 withReply:(void (^)(int))arg3;\n- (void)startCameraInfo:(NSString *)arg1 forCameraIds:(NSArray *)arg2 withReply:(void (^)(int))arg3;\n- (void)initConnection:(void (^)(_Bool))arg1;\n@end\n'
p1264
sS'ACCVoiceOverXPCServerProtocol'
p1265
S'@protocol ACCVoiceOverXPCServerProtocol <NSObject>\n- (void)update:(NSString *)arg1 cursorInfo:(NSDictionary *)arg2;\n- (void)update:(NSString *)arg1 info:(NSDictionary *)arg2;\n- (void)initConnection:(void (^)(_Bool))arg1;\n@end\n'
p1266
sS'ACCAudioXPCServerProtocol'
p1267
S'@protocol ACCAudioXPCServerProtocol <NSObject>\n- (void)deviceAudioStatesWithReply:(void (^)(NSArray *))arg1;\n- (void)supportedDigitalAudioSampleRatesWithReply:(void (^)(NSArray *))arg1;\n- (void)supportedDigitalAudioSampleRate:(unsigned int)arg1 withReply:(void (^)(unsigned int))arg2;\n- (void)setDigitalAudioSampleRate:(unsigned int)arg1 withReply:(void (^)(_Bool))arg2;\n- (void)initConnectionToServer:(void (^)(_Bool))arg1;\n@end\n'
p1268
sS'ACCNavigationXPCServerProtocol'
p1269
S'@protocol ACCNavigationXPCServerProtocol <NSObject>\n- (void)notifyOfProvider:(NSString *)arg1;\n- (void)routeGuidance:(NSString *)arg1 laneGuidanceInfo:(NSDictionary *)arg2 componentIdList:(NSArray *)arg3;\n- (void)routeGuidance:(NSString *)arg1 maneuverUpdateInfo:(NSDictionary *)arg2 componentIdList:(NSArray *)arg3;\n- (void)routeGuidance:(NSString *)arg1 updateInfo:(NSDictionary *)arg2 componentIdList:(NSArray *)arg3;\n- (void)initConnection:(void (^)(_Bool))arg1;\n@end\n'
p1270
sS'ACCCommunicationsXPCServerProtocol'
p1271
S'@protocol ACCCommunicationsXPCServerProtocol <NSObject>\n- (void)commStatusDidChange:(NSDictionary *)arg1;\n- (void)callStateDidChange:(NSDictionary *)arg1;\n- (void)initConnection:(void (^)(_Bool))arg1;\n@end\n'
p1272
sS'ACCOOBBTPairingXPCServerProtocol'
p1273
S'@protocol ACCOOBBTPairingXPCServerProtocol <NSObject>\n- (void)requestLegacyConnectionIDForAccessoryUID:(NSString *)arg1;\n- (void)notifyOfProvider:(NSString *)arg1;\n- (void)linkKeyInfo:(NSString *)arg1 oobBtPairingUID:(NSString *)arg2 linkKey:(NSData *)arg3 deviceMacAddr:(NSData *)arg4;\n- (void)stopOOBBTPairing:(NSString *)arg1;\n- (void)startOOBBTPairing:(NSString *)arg1;\n- (void)initConnection:(void (^)(_Bool))arg1;\n@end\n'
p1274
ssS'System/Library/CoreServices/SafariSupport.bundle/SafariBookmarksSyncAgent'
p1275
(dp1276
S'NSXPCListenerDelegate'
p1277
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p1278
sS'WBSSafariBookmarksSyncAgentProtocol'
p1279
S'@protocol WBSSafariBookmarksSyncAgentProtocol <WBSCyclerCloudBookmarksAssistant>\n- (void)fetchSyncedCloudTabDevicesAndCloseRequestsWithCompletionHandler:(void (^)(NSArray *, NSArray *))arg1;\n- (void)deleteCloudTabCloseRequestsWithUUIDStrings:(NSArray *)arg1 completionHandler:(void (^)(NSError *))arg2;\n- (void)deleteDevicesWithUUIDStrings:(NSArray *)arg1 completionHandler:(void (^)(NSError *))arg2;\n- (void)saveCloudTabCloseRequestWithDictionaryRepresentation:(NSDictionary *)arg1 closeRequestUUIDString:(NSString *)arg2 completionHandler:(void (^)(NSError *))arg3;\n- (void)saveTabsForCurrentDeviceWithDictionaryRepresentation:(NSDictionary *)arg1 deviceUUIDString:(NSString *)arg2;\n- (void)collectDiagnosticsDataWithCompletionHandler:(void (^)(NSData *))arg1;\n- (void)beginMigrationFromDAV;\n- (void)observeRemoteMigrationStateForSecondaryMigration;\n- (void)fetchRemoteMigrationStateWithCompletionHandler:(void (^)(long long, NSString *, NSError *))arg1;\n- (void)fetchUserIdentityWithCompletionHandler:(void (^)(NSString *, NSError *))arg1;\n- (void)userAccountDidChange:(long long)arg1;\n- (void)userDidUpdateBookmarkDatabase;\n- (void)setUsesOpportunisticPushTopic:(_Bool)arg1;\n- (void)registerForPushNotificationsIfNeeded;\n@end\n'
p1280
sS'APSConnectionDelegate'
p1281
S'@protocol APSConnectionDelegate <NSObject>\n- (void)connection:(APSConnection *)arg1 didReceivePublicToken:(NSData *)arg2;\n\n@optional\n- (void)connectionDidReconnect:(APSConnection *)arg1;\n- (void)connection:(APSConnection *)arg1 didChangeConnectedStatus:(_Bool)arg2;\n- (void)connection:(APSConnection *)arg1 didFailToSendOutgoingMessage:(APSOutgoingMessage *)arg2 error:(NSError *)arg3;\n- (void)connection:(APSConnection *)arg1 didSendOutgoingMessage:(APSOutgoingMessage *)arg2;\n- (void)connection:(APSConnection *)arg1 didReceiveMessageForTopic:(NSString *)arg2 userInfo:(NSDictionary *)arg3;\n- (void)connection:(APSConnection *)arg1 didReceiveIncomingMessage:(APSIncomingMessage *)arg2;\n- (void)connection:(APSConnection *)arg1 didReceiveToken:(NSData *)arg2 forTopic:(NSString *)arg3 identifier:(NSString *)arg4;\n@end\n'
p1282
ssS'System/Library/PrivateFrameworks/CoreParsec.framework/parsecd'
p1283
(dp1284
S'FlusherXPC'
p1285
S'@protocol FlusherXPC <NSObject>\n- (void)sendDataToSendingStreamListener:(NSArray *)arg1;\n- (void)sendDataToReceivingStreamListener:(_CPParsecFeedback *)arg1;\n- (NSXPCListenerEndpoint *)endpoint;\n@end\n'
p1286
sS'NSXPCListenerDelegate'
p1287
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p1288
sS'NSXPCConnectionDelegate'
p1289
S'@protocol NSXPCConnectionDelegate <NSObject>\n\n@optional\n- (void)connection:(NSXPCConnection *)arg1 handleInvocation:(NSInvocation *)arg2 isReply:(_Bool)arg3;\n- (id <NSSecureCoding>)replacementObjectForXPCConnection:(NSXPCConnection *)arg1 encoder:(NSXPCCoder *)arg2 object:(id)arg3;\n@end\n'
p1290
sS'PARDaemonXPC'
p1291
S'@protocol PARDaemonXPC\n- (void)getImageMap:(void (^)(NSDictionary *))arg1;\n- (void)updateParameters:(double)arg1 safariLast1day:(double)arg2 safariLast1week:(double)arg3 safariLast1month:(double)arg4 safariAll:(double)arg5 safariMostRecent:(double)arg6 minThresholdToSend:(double)arg7;\n- (void)addCompletion:(NSString *)arg1 forInput:(NSString *)arg2;\n- (void)clearEngagedCompletionsFromDate:(NSDate *)arg1 toDate:(NSDate *)arg2;\n- (void)fileHandleAndAttributesForResource:(NSString *)arg1 completion:(void (^)(NSFileHandle *, NSDictionary *, NSError *))arg2;\n- (void)listSessions:(void (^)(NSArray *))arg1;\n- (void)listenToFlusher:(void (^)(NSXPCListenerEndpoint *))arg1;\n- (void)feedback:(NSString *)arg1 reply:(void (^)(NSArray *, NSError *))arg2;\n- (void)reportFeedbackPayloadData:(NSData *)arg1 queryId:(unsigned long long)arg2;\n- (void)request:(PARRequest *)arg1 reply:(void (^)(unsigned long long, PARReply *, NSError *))arg2;\n- (void)bag:(void (^)(PARBag *, NSError *))arg1;\n- (void)configure:(PARSessionConfiguration *)arg1 reply:(void (^)(NSXPCListenerEndpoint *))arg2;\n@end\n'
p1292
sS'PARFlusherXPC'
p1293
S'@protocol PARFlusherXPC\n- (void)initiateConnectionWithIntent:(unsigned long long)arg1;\n@end\n'
p1294
ssS'System/Library/PrivateFrameworks/IDS.framework/identityservicesd.app/identityservicesd'
p1295
(dp1296
S'NSXPCListenerDelegate'
p1297
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p1298
sS'IDSDGroupContextNotifyingObserverDelegate'
p1299
S'@protocol IDSDGroupContextNotifyingObserverDelegate <NSObject>\n- (void)didReceiveRegistrationIdentityUpdate;\n- (void)didReceiveDecryptionFailureForGroup:(ENGroup *)arg1;\n- (void)didUpdateGroup:(ENGroup *)arg1 withNewGroup:(ENGroup *)arg2;\n- (void)didCacheGroup:(ENGroup *)arg1;\n- (void)didCreateGroup:(ENGroup *)arg1;\n@end\n'
p1300
ssS'System/Library/PrivateFrameworks/AuthKit.framework/akd'
p1301
(dp1302
S'NSXPCListenerDelegate'
p1303
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p1304
ssS'System/Library/PrivateFrameworks/CloudServices.framework/XPCServices/com.apple.sbd.xpc/com.apple.sbd'
p1305
(dp1306
sS'private/var/staged_system_apps/MobileMail.app/PlugIns/MailSpotlightIndexExtension.appex/MailSpotlightIndexExtension'
p1307
(dp1308
sS'private/var/staged_system_apps/MobileMail.app/PlugIns/MailQuicklookExtension.appex/MailQuicklookExtension'
p1309
(dp1310
sS'System/Library/PrivateFrameworks/NotesShared.framework/XPCServices/com.apple.mobilenotes.datastore.xpc/com.apple.mobilenotes.datastore'
p1311
(dp1312
sS'usr/libexec/addressbooksyncd'
p1313
(dp1314
S'NSXPCListenerDelegate'
p1315
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p1316
ssS'Applications/SharingViewService.app/SharingViewService'
p1317
(dp1318
sS'System/Library/PrivateFrameworks/FMF.framework/XPCServices/FMFMapXPCService.xpc/FMFMapXPCService'
p1319
(dp1320
sS'private/var/staged_system_apps/News.app/News'
p1321
(dp1322
sS'usr/libexec/tipsd'
p1323
(dp1324
S'NSXPCListenerDelegate'
p1325
S'@protocol NSXPCListenerDelegate <NSObject>\n\n@optional\n- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;\n@end\n'
p1326
sS'NSURLSessionDelegate'
p1327
S'@protocol NSURLSessionDelegate <NSObject>\n\n@optional\n- (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession *)arg1;\n- (void)URLSession:(NSURLSession *)arg1 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg2 completionHandler:(void (^)(long long, NSURLCredential *))arg3;\n- (void)URLSession:(NSURLSession *)arg1 didBecomeInvalidWithError:(NSError *)arg2;\n@end\n'
p1328
sS'TPSXPCServerInterface'
p1329
S'@protocol TPSXPCServerInterface <NSObject>\n- (oneway void)activateCollectionIdentifier:(NSString *)arg1 context:(NSDictionary *)arg2;\n- (oneway void)tipsAppLaunchedWithTipIDs:(NSArray *)arg1;\n- (oneway void)tipNotificationInteractedByUser;\n- (oneway void)clearBulletin;\n@end\n'
p1330
sS'NSURLSessionDataDelegate'
p1331
S'@protocol NSURLSessionDataDelegate <NSURLSessionTaskDelegate>\n\n@optional\n- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 willCacheResponse:(NSCachedURLResponse *)arg3 completionHandler:(void (^)(NSCachedURLResponse *))arg4;\n- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didReceiveData:(NSData *)arg3;\n- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didBecomeStreamTask:(NSURLSessionStreamTask *)arg3;\n- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didBecomeDownloadTask:(NSURLSessionDownloadTask *)arg3;\n- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didReceiveResponse:(NSURLResponse *)arg3 completionHandler:(void (^)(long long))arg4;\n@end\n'
p1332
sS'TPSDWelcomeDelegate'
p1333
S'@protocol TPSDWelcomeDelegate <NSObject>\n- (void)majorVersionChanged:(TPSDWelcome *)arg1;\n- (void)welcomeNotificationReminderEnded:(TPSDWelcome *)arg1;\n- (void)welcomeNotificationShown:(TPSDWelcome *)arg1;\n- (_Bool)welcomeCanContinueWelcomeFlow:(TPSDWelcome *)arg1;\n@end\n'
p1334
ssS'System/Library/PrivateFrameworks/StreamingZip.framework/XPCServices/com.apple.StreamingUnzipService.xpc/com.apple.StreamingUnzipService'
p1335
(dp1336
sS'System/Library/Frameworks/VideoSubscriberAccount.framework/XPCServices/com.apple.VideoSubscriberAccount.PrivacyService.xpc/com.apple.VideoSubscriberAccount.PrivacyService'
p1337
(dp1338
s.